
ServoClock.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000450c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000100  080046b0  080046b0  000146b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080047b0  080047b0  00020440  2**0
                  CONTENTS
  4 .ARM          00000000  080047b0  080047b0  00020440  2**0
                  CONTENTS
  5 .preinit_array 00000000  080047b0  080047b0  00020440  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080047b0  080047b0  000147b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080047b4  080047b4  000147b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000440  20000000  080047b8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000188  20000440  08004bf8  00020440  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200005c8  08004bf8  000205c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020440  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020470  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000249d  00000000  00000000  000204b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000a11  00000000  00000000  00022950  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000002a8  00000000  00000000  00023368  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001d5  00000000  00000000  00023610  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000107c0  00000000  00000000  000237e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00003fb7  00000000  00000000  00033fa5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00056284  00000000  00000000  00037f5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001694  00000000  00000000  0008e1e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  0008f874  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000440 	.word	0x20000440
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004694 	.word	0x08004694

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000444 	.word	0x20000444
 80001dc:	08004694 	.word	0x08004694

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2f>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b60:	bf24      	itt	cs
 8000b62:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b66:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b6a:	d90d      	bls.n	8000b88 <__aeabi_d2f+0x30>
 8000b6c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b70:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b74:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b78:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b7c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b80:	bf08      	it	eq
 8000b82:	f020 0001 	biceq.w	r0, r0, #1
 8000b86:	4770      	bx	lr
 8000b88:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b8c:	d121      	bne.n	8000bd2 <__aeabi_d2f+0x7a>
 8000b8e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b92:	bfbc      	itt	lt
 8000b94:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	4770      	bxlt	lr
 8000b9a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b9e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba2:	f1c2 0218 	rsb	r2, r2, #24
 8000ba6:	f1c2 0c20 	rsb	ip, r2, #32
 8000baa:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bae:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb2:	bf18      	it	ne
 8000bb4:	f040 0001 	orrne.w	r0, r0, #1
 8000bb8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bbc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc4:	ea40 000c 	orr.w	r0, r0, ip
 8000bc8:	fa23 f302 	lsr.w	r3, r3, r2
 8000bcc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd0:	e7cc      	b.n	8000b6c <__aeabi_d2f+0x14>
 8000bd2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bd6:	d107      	bne.n	8000be8 <__aeabi_d2f+0x90>
 8000bd8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bdc:	bf1e      	ittt	ne
 8000bde:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000be2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000be6:	4770      	bxne	lr
 8000be8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000bec:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000bf0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <uart_tx_init>:
void uart_write(int ch);
// Description: writes character data in DR
// once empty

/* Function Definitions */
void uart_tx_init(){
 8000bf8:	b580      	push	{r7, lr}
 8000bfa:	af00      	add	r7, sp, #0
    /* Enable clocks */
    RCC->AHB1ENR |= GPIOAEN;
 8000bfc:	4b18      	ldr	r3, [pc, #96]	; (8000c60 <uart_tx_init+0x68>)
 8000bfe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c00:	4a17      	ldr	r2, [pc, #92]	; (8000c60 <uart_tx_init+0x68>)
 8000c02:	f043 0301 	orr.w	r3, r3, #1
 8000c06:	6313      	str	r3, [r2, #48]	; 0x30
    RCC->APB2ENR |= USART1EN;
 8000c08:	4b15      	ldr	r3, [pc, #84]	; (8000c60 <uart_tx_init+0x68>)
 8000c0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000c0c:	4a14      	ldr	r2, [pc, #80]	; (8000c60 <uart_tx_init+0x68>)
 8000c0e:	f043 0310 	orr.w	r3, r3, #16
 8000c12:	6453      	str	r3, [r2, #68]	; 0x44

    /* Configure GPIOA Pin 9 */
    GPIOA->MODER |= PIN9_MODE;
 8000c14:	4b13      	ldr	r3, [pc, #76]	; (8000c64 <uart_tx_init+0x6c>)
 8000c16:	681b      	ldr	r3, [r3, #0]
 8000c18:	4a12      	ldr	r2, [pc, #72]	; (8000c64 <uart_tx_init+0x6c>)
 8000c1a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000c1e:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[1] |= AF07;
 8000c20:	4b10      	ldr	r3, [pc, #64]	; (8000c64 <uart_tx_init+0x6c>)
 8000c22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000c24:	4a0f      	ldr	r2, [pc, #60]	; (8000c64 <uart_tx_init+0x6c>)
 8000c26:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 8000c2a:	6253      	str	r3, [r2, #36]	; 0x24

    /* Configure USART */
    USART1->CR1 &= ~(CR1_UE); //disable uart
 8000c2c:	4b0e      	ldr	r3, [pc, #56]	; (8000c68 <uart_tx_init+0x70>)
 8000c2e:	68db      	ldr	r3, [r3, #12]
 8000c30:	4a0d      	ldr	r2, [pc, #52]	; (8000c68 <uart_tx_init+0x70>)
 8000c32:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000c36:	60d3      	str	r3, [r2, #12]
    USART1->CR1 |= CR1_TE;
 8000c38:	4b0b      	ldr	r3, [pc, #44]	; (8000c68 <uart_tx_init+0x70>)
 8000c3a:	68db      	ldr	r3, [r3, #12]
 8000c3c:	4a0a      	ldr	r2, [pc, #40]	; (8000c68 <uart_tx_init+0x70>)
 8000c3e:	f043 0308 	orr.w	r3, r3, #8
 8000c42:	60d3      	str	r3, [r2, #12]
    uart_set_brr(APB2CLK, baud); 
 8000c44:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000c48:	4808      	ldr	r0, [pc, #32]	; (8000c6c <uart_tx_init+0x74>)
 8000c4a:	f000 f81d 	bl	8000c88 <uart_set_brr>
    USART1->CR1 |= CR1_UE;
 8000c4e:	4b06      	ldr	r3, [pc, #24]	; (8000c68 <uart_tx_init+0x70>)
 8000c50:	68db      	ldr	r3, [r3, #12]
 8000c52:	4a05      	ldr	r2, [pc, #20]	; (8000c68 <uart_tx_init+0x70>)
 8000c54:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000c58:	60d3      	str	r3, [r2, #12]
}
 8000c5a:	bf00      	nop
 8000c5c:	bd80      	pop	{r7, pc}
 8000c5e:	bf00      	nop
 8000c60:	40023800 	.word	0x40023800
 8000c64:	40020000 	.word	0x40020000
 8000c68:	40011000 	.word	0x40011000
 8000c6c:	00f42400 	.word	0x00f42400

08000c70 <__io_putchar>:

int __io_putchar(int ch){
 8000c70:	b580      	push	{r7, lr}
 8000c72:	b082      	sub	sp, #8
 8000c74:	af00      	add	r7, sp, #0
 8000c76:	6078      	str	r0, [r7, #4]
    /* Overwrite printf for debug */
    uart_write(ch); // send char through tx
 8000c78:	6878      	ldr	r0, [r7, #4]
 8000c7a:	f000 f821 	bl	8000cc0 <uart_write>
    return ch;
 8000c7e:	687b      	ldr	r3, [r7, #4]
}
 8000c80:	4618      	mov	r0, r3
 8000c82:	3708      	adds	r7, #8
 8000c84:	46bd      	mov	sp, r7
 8000c86:	bd80      	pop	{r7, pc}

08000c88 <uart_set_brr>:

void uart_set_brr(uint32_t periphCLK, uint32_t baudrate){
 8000c88:	b480      	push	{r7}
 8000c8a:	b085      	sub	sp, #20
 8000c8c:	af00      	add	r7, sp, #0
 8000c8e:	6078      	str	r0, [r7, #4]
 8000c90:	6039      	str	r1, [r7, #0]
    uint16_t uartdiv = periphCLK / baudrate;
 8000c92:	687a      	ldr	r2, [r7, #4]
 8000c94:	683b      	ldr	r3, [r7, #0]
 8000c96:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c9a:	81fb      	strh	r3, [r7, #14]
    USART1->BRR = (((uartdiv / 16) << 4) | (uartdiv % 16));
 8000c9c:	89fb      	ldrh	r3, [r7, #14]
 8000c9e:	091b      	lsrs	r3, r3, #4
 8000ca0:	b29b      	uxth	r3, r3
 8000ca2:	011a      	lsls	r2, r3, #4
 8000ca4:	89fb      	ldrh	r3, [r7, #14]
 8000ca6:	f003 030f 	and.w	r3, r3, #15
 8000caa:	431a      	orrs	r2, r3
 8000cac:	4b03      	ldr	r3, [pc, #12]	; (8000cbc <uart_set_brr+0x34>)
 8000cae:	609a      	str	r2, [r3, #8]
}
 8000cb0:	bf00      	nop
 8000cb2:	3714      	adds	r7, #20
 8000cb4:	46bd      	mov	sp, r7
 8000cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cba:	4770      	bx	lr
 8000cbc:	40011000 	.word	0x40011000

08000cc0 <uart_write>:

void uart_write(int ch){
 8000cc0:	b480      	push	{r7}
 8000cc2:	b083      	sub	sp, #12
 8000cc4:	af00      	add	r7, sp, #0
 8000cc6:	6078      	str	r0, [r7, #4]
    while(!(USART1->SR & SR_TXE));
 8000cc8:	bf00      	nop
 8000cca:	4b08      	ldr	r3, [pc, #32]	; (8000cec <uart_write+0x2c>)
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	d0f9      	beq.n	8000cca <uart_write+0xa>
    USART1->DR = (0xFF & ch);
 8000cd6:	687b      	ldr	r3, [r7, #4]
 8000cd8:	4a04      	ldr	r2, [pc, #16]	; (8000cec <uart_write+0x2c>)
 8000cda:	b2db      	uxtb	r3, r3
 8000cdc:	6053      	str	r3, [r2, #4]
}
 8000cde:	bf00      	nop
 8000ce0:	370c      	adds	r7, #12
 8000ce2:	46bd      	mov	sp, r7
 8000ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ce8:	4770      	bx	lr
 8000cea:	bf00      	nop
 8000cec:	40011000 	.word	0x40011000

08000cf0 <move_arm>:

/* function declarations */
void coordinate_to_rad(float x, float y);
float rad_to_degrees(float rad);

void move_arm(float x, float y){
 8000cf0:	b580      	push	{r7, lr}
 8000cf2:	ed2d 8b02 	vpush	{d8}
 8000cf6:	b082      	sub	sp, #8
 8000cf8:	af00      	add	r7, sp, #0
 8000cfa:	ed87 0a01 	vstr	s0, [r7, #4]
 8000cfe:	edc7 0a00 	vstr	s1, [r7]
	// functions needed for:
	// 	x-y to radians
	coordinate_to_rad(abs(x), y);
 8000d02:	edd7 7a01 	vldr	s15, [r7, #4]
 8000d06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000d0a:	ee17 3a90 	vmov	r3, s15
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	bfb8      	it	lt
 8000d12:	425b      	neglt	r3, r3
 8000d14:	ee07 3a90 	vmov	s15, r3
 8000d18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000d1c:	edd7 0a00 	vldr	s1, [r7]
 8000d20:	eeb0 0a67 	vmov.f32	s0, s15
 8000d24:	f000 f854 	bl	8000dd0 <coordinate_to_rad>

	//	radians to degree
	arm_degrees = rad_to_degrees(arm_radians);
 8000d28:	4b23      	ldr	r3, [pc, #140]	; (8000db8 <move_arm+0xc8>)
 8000d2a:	edd3 7a00 	vldr	s15, [r3]
 8000d2e:	eeb0 0a67 	vmov.f32	s0, s15
 8000d32:	f000 f8e1 	bl	8000ef8 <rad_to_degrees>
 8000d36:	eef0 7a40 	vmov.f32	s15, s0
 8000d3a:	4b20      	ldr	r3, [pc, #128]	; (8000dbc <move_arm+0xcc>)
 8000d3c:	edc3 7a00 	vstr	s15, [r3]
	base_degrees = 180.0 - rad_to_degrees(base_radians);
 8000d40:	4b1f      	ldr	r3, [pc, #124]	; (8000dc0 <move_arm+0xd0>)
 8000d42:	edd3 7a00 	vldr	s15, [r3]
 8000d46:	eeb0 0a67 	vmov.f32	s0, s15
 8000d4a:	f000 f8d5 	bl	8000ef8 <rad_to_degrees>
 8000d4e:	ee10 3a10 	vmov	r3, s0
 8000d52:	4618      	mov	r0, r3
 8000d54:	f7ff fbf8 	bl	8000548 <__aeabi_f2d>
 8000d58:	4602      	mov	r2, r0
 8000d5a:	460b      	mov	r3, r1
 8000d5c:	f04f 0000 	mov.w	r0, #0
 8000d60:	4918      	ldr	r1, [pc, #96]	; (8000dc4 <move_arm+0xd4>)
 8000d62:	f7ff fa91 	bl	8000288 <__aeabi_dsub>
 8000d66:	4602      	mov	r2, r0
 8000d68:	460b      	mov	r3, r1
 8000d6a:	4610      	mov	r0, r2
 8000d6c:	4619      	mov	r1, r3
 8000d6e:	f7ff fef3 	bl	8000b58 <__aeabi_d2f>
 8000d72:	4603      	mov	r3, r0
 8000d74:	4a14      	ldr	r2, [pc, #80]	; (8000dc8 <move_arm+0xd8>)
 8000d76:	6013      	str	r3, [r2, #0]

	//	map_to_servo
	//	move_servo
	move_servo(map_to_servo(base_degrees), map_to_servo(arm_degrees), x);
 8000d78:	4b13      	ldr	r3, [pc, #76]	; (8000dc8 <move_arm+0xd8>)
 8000d7a:	edd3 7a00 	vldr	s15, [r3]
 8000d7e:	eeb0 0a67 	vmov.f32	s0, s15
 8000d82:	f000 fcd9 	bl	8001738 <map_to_servo>
 8000d86:	eeb0 8a40 	vmov.f32	s16, s0
 8000d8a:	4b0c      	ldr	r3, [pc, #48]	; (8000dbc <move_arm+0xcc>)
 8000d8c:	edd3 7a00 	vldr	s15, [r3]
 8000d90:	eeb0 0a67 	vmov.f32	s0, s15
 8000d94:	f000 fcd0 	bl	8001738 <map_to_servo>
 8000d98:	eef0 7a40 	vmov.f32	s15, s0
 8000d9c:	ed97 1a01 	vldr	s2, [r7, #4]
 8000da0:	eef0 0a67 	vmov.f32	s1, s15
 8000da4:	eeb0 0a48 	vmov.f32	s0, s16
 8000da8:	f000 fcf6 	bl	8001798 <move_servo>
}
 8000dac:	bf00      	nop
 8000dae:	3708      	adds	r7, #8
 8000db0:	46bd      	mov	sp, r7
 8000db2:	ecbd 8b02 	vpop	{d8}
 8000db6:	bd80      	pop	{r7, pc}
 8000db8:	2000045c 	.word	0x2000045c
 8000dbc:	20000464 	.word	0x20000464
 8000dc0:	20000460 	.word	0x20000460
 8000dc4:	40668000 	.word	0x40668000
 8000dc8:	20000468 	.word	0x20000468
 8000dcc:	00000000 	.word	0x00000000

08000dd0 <coordinate_to_rad>:

void coordinate_to_rad(float x, float y){
 8000dd0:	b5b0      	push	{r4, r5, r7, lr}
 8000dd2:	b084      	sub	sp, #16
 8000dd4:	af00      	add	r7, sp, #0
 8000dd6:	ed87 0a01 	vstr	s0, [r7, #4]
 8000dda:	edc7 0a00 	vstr	s1, [r7]
	//write algo according to planning
	double sidei = sqrt(pow(x, 2) + pow(y, 2));	
 8000dde:	6878      	ldr	r0, [r7, #4]
 8000de0:	f7ff fbb2 	bl	8000548 <__aeabi_f2d>
 8000de4:	4602      	mov	r2, r0
 8000de6:	460b      	mov	r3, r1
 8000de8:	ed9f 1b3d 	vldr	d1, [pc, #244]	; 8000ee0 <coordinate_to_rad+0x110>
 8000dec:	ec43 2b10 	vmov	d0, r2, r3
 8000df0:	f002 fb42 	bl	8003478 <pow>
 8000df4:	ec55 4b10 	vmov	r4, r5, d0
 8000df8:	6838      	ldr	r0, [r7, #0]
 8000dfa:	f7ff fba5 	bl	8000548 <__aeabi_f2d>
 8000dfe:	4602      	mov	r2, r0
 8000e00:	460b      	mov	r3, r1
 8000e02:	ed9f 1b37 	vldr	d1, [pc, #220]	; 8000ee0 <coordinate_to_rad+0x110>
 8000e06:	ec43 2b10 	vmov	d0, r2, r3
 8000e0a:	f002 fb35 	bl	8003478 <pow>
 8000e0e:	ec53 2b10 	vmov	r2, r3, d0
 8000e12:	4620      	mov	r0, r4
 8000e14:	4629      	mov	r1, r5
 8000e16:	f7ff fa39 	bl	800028c <__adddf3>
 8000e1a:	4602      	mov	r2, r0
 8000e1c:	460b      	mov	r3, r1
 8000e1e:	ec43 2b17 	vmov	d7, r2, r3
 8000e22:	eeb0 0a47 	vmov.f32	s0, s14
 8000e26:	eef0 0a67 	vmov.f32	s1, s15
 8000e2a:	f002 fb95 	bl	8003558 <sqrt>
 8000e2e:	ed87 0b02 	vstr	d0, [r7, #8]

	arm_radians = 2.0 * asin(sidei / (2.0 * SIDE_SIZE));
 8000e32:	f04f 0200 	mov.w	r2, #0
 8000e36:	4b2c      	ldr	r3, [pc, #176]	; (8000ee8 <coordinate_to_rad+0x118>)
 8000e38:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8000e3c:	f7ff fd06 	bl	800084c <__aeabi_ddiv>
 8000e40:	4602      	mov	r2, r0
 8000e42:	460b      	mov	r3, r1
 8000e44:	ec43 2b17 	vmov	d7, r2, r3
 8000e48:	eeb0 0a47 	vmov.f32	s0, s14
 8000e4c:	eef0 0a67 	vmov.f32	s1, s15
 8000e50:	f001 fe68 	bl	8002b24 <asin>
 8000e54:	ec51 0b10 	vmov	r0, r1, d0
 8000e58:	4602      	mov	r2, r0
 8000e5a:	460b      	mov	r3, r1
 8000e5c:	f7ff fa16 	bl	800028c <__adddf3>
 8000e60:	4602      	mov	r2, r0
 8000e62:	460b      	mov	r3, r1
 8000e64:	4610      	mov	r0, r2
 8000e66:	4619      	mov	r1, r3
 8000e68:	f7ff fe76 	bl	8000b58 <__aeabi_d2f>
 8000e6c:	4603      	mov	r3, r0
 8000e6e:	4a1f      	ldr	r2, [pc, #124]	; (8000eec <coordinate_to_rad+0x11c>)
 8000e70:	6013      	str	r3, [r2, #0]
	base_radians = (atan(y / x) + acos( sidei / (2.0 * SIDE_SIZE)));
 8000e72:	ed97 7a00 	vldr	s14, [r7]
 8000e76:	edd7 7a01 	vldr	s15, [r7, #4]
 8000e7a:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8000e7e:	ee16 0a90 	vmov	r0, s13
 8000e82:	f7ff fb61 	bl	8000548 <__aeabi_f2d>
 8000e86:	4602      	mov	r2, r0
 8000e88:	460b      	mov	r3, r1
 8000e8a:	ec43 2b10 	vmov	d0, r2, r3
 8000e8e:	f002 fb8f 	bl	80035b0 <atan>
 8000e92:	ec55 4b10 	vmov	r4, r5, d0
 8000e96:	f04f 0200 	mov.w	r2, #0
 8000e9a:	4b13      	ldr	r3, [pc, #76]	; (8000ee8 <coordinate_to_rad+0x118>)
 8000e9c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8000ea0:	f7ff fcd4 	bl	800084c <__aeabi_ddiv>
 8000ea4:	4602      	mov	r2, r0
 8000ea6:	460b      	mov	r3, r1
 8000ea8:	ec43 2b17 	vmov	d7, r2, r3
 8000eac:	eeb0 0a47 	vmov.f32	s0, s14
 8000eb0:	eef0 0a67 	vmov.f32	s1, s15
 8000eb4:	f001 fe02 	bl	8002abc <acos>
 8000eb8:	ec53 2b10 	vmov	r2, r3, d0
 8000ebc:	4620      	mov	r0, r4
 8000ebe:	4629      	mov	r1, r5
 8000ec0:	f7ff f9e4 	bl	800028c <__adddf3>
 8000ec4:	4602      	mov	r2, r0
 8000ec6:	460b      	mov	r3, r1
 8000ec8:	4610      	mov	r0, r2
 8000eca:	4619      	mov	r1, r3
 8000ecc:	f7ff fe44 	bl	8000b58 <__aeabi_d2f>
 8000ed0:	4603      	mov	r3, r0
 8000ed2:	4a07      	ldr	r2, [pc, #28]	; (8000ef0 <coordinate_to_rad+0x120>)
 8000ed4:	6013      	str	r3, [r2, #0]
}
 8000ed6:	bf00      	nop
 8000ed8:	3710      	adds	r7, #16
 8000eda:	46bd      	mov	sp, r7
 8000edc:	bdb0      	pop	{r4, r5, r7, pc}
 8000ede:	bf00      	nop
 8000ee0:	00000000 	.word	0x00000000
 8000ee4:	40000000 	.word	0x40000000
 8000ee8:	40240000 	.word	0x40240000
 8000eec:	2000045c 	.word	0x2000045c
 8000ef0:	20000460 	.word	0x20000460
 8000ef4:	00000000 	.word	0x00000000

08000ef8 <rad_to_degrees>:

float rad_to_degrees(float rad){
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b082      	sub	sp, #8
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	ed87 0a01 	vstr	s0, [r7, #4]
	return (rad * (180.0 / M_PI));
 8000f02:	6878      	ldr	r0, [r7, #4]
 8000f04:	f7ff fb20 	bl	8000548 <__aeabi_f2d>
 8000f08:	a309      	add	r3, pc, #36	; (adr r3, 8000f30 <rad_to_degrees+0x38>)
 8000f0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f0e:	f7ff fb73 	bl	80005f8 <__aeabi_dmul>
 8000f12:	4602      	mov	r2, r0
 8000f14:	460b      	mov	r3, r1
 8000f16:	4610      	mov	r0, r2
 8000f18:	4619      	mov	r1, r3
 8000f1a:	f7ff fe1d 	bl	8000b58 <__aeabi_d2f>
 8000f1e:	4603      	mov	r3, r0
 8000f20:	ee07 3a90 	vmov	s15, r3
}
 8000f24:	eeb0 0a67 	vmov.f32	s0, s15
 8000f28:	3708      	adds	r7, #8
 8000f2a:	46bd      	mov	sp, r7
 8000f2c:	bd80      	pop	{r7, pc}
 8000f2e:	bf00      	nop
 8000f30:	1a63c1f8 	.word	0x1a63c1f8
 8000f34:	404ca5dc 	.word	0x404ca5dc

08000f38 <main>:

/* Global variables */
volatile int seconds = 0;


int main(){
 8000f38:	b580      	push	{r7, lr}
 8000f3a:	af00      	add	r7, sp, #0
	/* Initialization functions */
	SystemInit();
 8000f3c:	f000 f838 	bl	8000fb0 <SystemInit>
	uart_tx_init();
 8000f40:	f7ff fe5a 	bl	8000bf8 <uart_tx_init>
	pwm_tim2_init();
 8000f44:	f000 fb7a 	bl	800163c <pwm_tim2_init>
	tim3_1hz_init();
 8000f48:	f000 fd3a 	bl	80019c0 <tim3_1hz_init>
	tim4_init();
 8000f4c:	f000 fd60 	bl	8001a10 <tim4_init>
	while(1){
 8000f50:	e7fe      	b.n	8000f50 <main+0x18>
	...

08000f54 <tim3_callback>:
	}

}

void tim3_callback(void){
 8000f54:	b580      	push	{r7, lr}
 8000f56:	af00      	add	r7, sp, #0
    seconds++;
 8000f58:	4b09      	ldr	r3, [pc, #36]	; (8000f80 <tim3_callback+0x2c>)
 8000f5a:	681b      	ldr	r3, [r3, #0]
 8000f5c:	3301      	adds	r3, #1
 8000f5e:	4a08      	ldr	r2, [pc, #32]	; (8000f80 <tim3_callback+0x2c>)
 8000f60:	6013      	str	r3, [r2, #0]
    if (seconds >= 60){
 8000f62:	4b07      	ldr	r3, [pc, #28]	; (8000f80 <tim3_callback+0x2c>)
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	2b3b      	cmp	r3, #59	; 0x3b
 8000f68:	dd07      	ble.n	8000f7a <tim3_callback+0x26>
        //update clock
    	update_clock();
 8000f6a:	f000 fd73 	bl	8001a54 <update_clock>
    	printf("Clock updated\n");
 8000f6e:	4805      	ldr	r0, [pc, #20]	; (8000f84 <tim3_callback+0x30>)
 8000f70:	f000 ff3c 	bl	8001dec <puts>
        seconds = 0;
 8000f74:	4b02      	ldr	r3, [pc, #8]	; (8000f80 <tim3_callback+0x2c>)
 8000f76:	2200      	movs	r2, #0
 8000f78:	601a      	str	r2, [r3, #0]
    }
}
 8000f7a:	bf00      	nop
 8000f7c:	bd80      	pop	{r7, pc}
 8000f7e:	bf00      	nop
 8000f80:	2000046c 	.word	0x2000046c
 8000f84:	080046b0 	.word	0x080046b0

08000f88 <TIM3_IRQHandler>:

void TIM3_IRQHandler(){
 8000f88:	b580      	push	{r7, lr}
 8000f8a:	af00      	add	r7, sp, #0
	//interrupt pending
	if (TIM3->SR & SR_UIF){
 8000f8c:	4b07      	ldr	r3, [pc, #28]	; (8000fac <TIM3_IRQHandler+0x24>)
 8000f8e:	691b      	ldr	r3, [r3, #16]
 8000f90:	f003 0301 	and.w	r3, r3, #1
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d007      	beq.n	8000fa8 <TIM3_IRQHandler+0x20>
		// reset interrupt flag
		TIM3->SR &= ~(SR_UIF);
 8000f98:	4b04      	ldr	r3, [pc, #16]	; (8000fac <TIM3_IRQHandler+0x24>)
 8000f9a:	691b      	ldr	r3, [r3, #16]
 8000f9c:	4a03      	ldr	r2, [pc, #12]	; (8000fac <TIM3_IRQHandler+0x24>)
 8000f9e:	f023 0301 	bic.w	r3, r3, #1
 8000fa2:	6113      	str	r3, [r2, #16]
		tim3_callback();
 8000fa4:	f7ff ffd6 	bl	8000f54 <tim3_callback>
	}
}
 8000fa8:	bf00      	nop
 8000faa:	bd80      	pop	{r7, pc}
 8000fac:	40000400 	.word	0x40000400

08000fb0 <SystemInit>:

void SystemInit(void)
{
 8000fb0:	b480      	push	{r7}
 8000fb2:	af00      	add	r7, sp, #0
	/* Set floating point coprosessor access mode. */
	SCB->CPACR |= ((3UL << 10*2) | /* set CP10 Full Access */
 8000fb4:	4b06      	ldr	r3, [pc, #24]	; (8000fd0 <SystemInit+0x20>)
 8000fb6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000fba:	4a05      	ldr	r2, [pc, #20]	; (8000fd0 <SystemInit+0x20>)
 8000fbc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000fc0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
			(3UL << 11*2) ); /* set CP11 Full Access */
}
 8000fc4:	bf00      	nop
 8000fc6:	46bd      	mov	sp, r7
 8000fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fcc:	4770      	bx	lr
 8000fce:	bf00      	nop
 8000fd0:	e000ed00 	.word	0xe000ed00

08000fd4 <draw_D1>:
void draw_colon(){
    //colon to be centered on line
}


void draw_D1(int digit){
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	b084      	sub	sp, #16
 8000fd8:	af00      	add	r7, sp, #0
 8000fda:	6078      	str	r0, [r7, #4]
    int x_offset = -4;
 8000fdc:	f06f 0303 	mvn.w	r3, #3
 8000fe0:	60fb      	str	r3, [r7, #12]
	switch(digit){
 8000fe2:	687b      	ldr	r3, [r7, #4]
 8000fe4:	2b09      	cmp	r3, #9
 8000fe6:	d83f      	bhi.n	8001068 <draw_D1+0x94>
 8000fe8:	a201      	add	r2, pc, #4	; (adr r2, 8000ff0 <draw_D1+0x1c>)
 8000fea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000fee:	bf00      	nop
 8000ff0:	08001019 	.word	0x08001019
 8000ff4:	08001021 	.word	0x08001021
 8000ff8:	08001029 	.word	0x08001029
 8000ffc:	08001031 	.word	0x08001031
 8001000:	08001039 	.word	0x08001039
 8001004:	08001041 	.word	0x08001041
 8001008:	08001049 	.word	0x08001049
 800100c:	08001051 	.word	0x08001051
 8001010:	08001059 	.word	0x08001059
 8001014:	08001061 	.word	0x08001061
		case 0: draw_zero(x_offset); break;
 8001018:	68f8      	ldr	r0, [r7, #12]
 800101a:	f000 f90f 	bl	800123c <draw_zero>
 800101e:	e023      	b.n	8001068 <draw_D1+0x94>
		case 1: draw_one(x_offset); break;
 8001020:	68f8      	ldr	r0, [r7, #12]
 8001022:	f000 f943 	bl	80012ac <draw_one>
 8001026:	e01f      	b.n	8001068 <draw_D1+0x94>
		case 2: draw_two(x_offset); break;
 8001028:	68f8      	ldr	r0, [r7, #12]
 800102a:	f000 f977 	bl	800131c <draw_two>
 800102e:	e01b      	b.n	8001068 <draw_D1+0x94>
		case 3: draw_three(x_offset); break;
 8001030:	68f8      	ldr	r0, [r7, #12]
 8001032:	f000 f9a5 	bl	8001380 <draw_three>
 8001036:	e017      	b.n	8001068 <draw_D1+0x94>
		case 4: draw_four(x_offset); break;
 8001038:	68f8      	ldr	r0, [r7, #12]
 800103a:	f000 f9d3 	bl	80013e4 <draw_four>
 800103e:	e013      	b.n	8001068 <draw_D1+0x94>
		case 5: draw_five(x_offset); break;
 8001040:	68f8      	ldr	r0, [r7, #12]
 8001042:	f000 fa01 	bl	8001448 <draw_five>
 8001046:	e00f      	b.n	8001068 <draw_D1+0x94>
		case 6: draw_six(x_offset); break;
 8001048:	68f8      	ldr	r0, [r7, #12]
 800104a:	f000 fa2f 	bl	80014ac <draw_six>
 800104e:	e00b      	b.n	8001068 <draw_D1+0x94>
		case 7: draw_seven(x_offset); break;
 8001050:	68f8      	ldr	r0, [r7, #12]
 8001052:	f000 fa5d 	bl	8001510 <draw_seven>
 8001056:	e007      	b.n	8001068 <draw_D1+0x94>
		case 8: draw_eight(x_offset); break;
 8001058:	68f8      	ldr	r0, [r7, #12]
 800105a:	f000 fa8b 	bl	8001574 <draw_eight>
 800105e:	e003      	b.n	8001068 <draw_D1+0x94>
		case 9: draw_nine(x_offset); break;
 8001060:	68f8      	ldr	r0, [r7, #12]
 8001062:	f000 fab9 	bl	80015d8 <draw_nine>
 8001066:	bf00      	nop
	}
}
 8001068:	bf00      	nop
 800106a:	3710      	adds	r7, #16
 800106c:	46bd      	mov	sp, r7
 800106e:	bd80      	pop	{r7, pc}

08001070 <draw_D2>:
void draw_D2(int digit){
 8001070:	b580      	push	{r7, lr}
 8001072:	b084      	sub	sp, #16
 8001074:	af00      	add	r7, sp, #0
 8001076:	6078      	str	r0, [r7, #4]
    int x_offset = -1;
 8001078:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800107c:	60fb      	str	r3, [r7, #12]
	switch(digit){
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	2b09      	cmp	r3, #9
 8001082:	d83f      	bhi.n	8001104 <draw_D2+0x94>
 8001084:	a201      	add	r2, pc, #4	; (adr r2, 800108c <draw_D2+0x1c>)
 8001086:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800108a:	bf00      	nop
 800108c:	080010b5 	.word	0x080010b5
 8001090:	080010bd 	.word	0x080010bd
 8001094:	080010c5 	.word	0x080010c5
 8001098:	080010cd 	.word	0x080010cd
 800109c:	080010d5 	.word	0x080010d5
 80010a0:	080010dd 	.word	0x080010dd
 80010a4:	080010e5 	.word	0x080010e5
 80010a8:	080010ed 	.word	0x080010ed
 80010ac:	080010f5 	.word	0x080010f5
 80010b0:	080010fd 	.word	0x080010fd
		case 0: draw_zero(x_offset); break;
 80010b4:	68f8      	ldr	r0, [r7, #12]
 80010b6:	f000 f8c1 	bl	800123c <draw_zero>
 80010ba:	e023      	b.n	8001104 <draw_D2+0x94>
		case 1: draw_one(x_offset); break;
 80010bc:	68f8      	ldr	r0, [r7, #12]
 80010be:	f000 f8f5 	bl	80012ac <draw_one>
 80010c2:	e01f      	b.n	8001104 <draw_D2+0x94>
		case 2: draw_two(x_offset); break;
 80010c4:	68f8      	ldr	r0, [r7, #12]
 80010c6:	f000 f929 	bl	800131c <draw_two>
 80010ca:	e01b      	b.n	8001104 <draw_D2+0x94>
		case 3: draw_three(x_offset); break;
 80010cc:	68f8      	ldr	r0, [r7, #12]
 80010ce:	f000 f957 	bl	8001380 <draw_three>
 80010d2:	e017      	b.n	8001104 <draw_D2+0x94>
		case 4: draw_four(x_offset); break;
 80010d4:	68f8      	ldr	r0, [r7, #12]
 80010d6:	f000 f985 	bl	80013e4 <draw_four>
 80010da:	e013      	b.n	8001104 <draw_D2+0x94>
		case 5: draw_five(x_offset); break;
 80010dc:	68f8      	ldr	r0, [r7, #12]
 80010de:	f000 f9b3 	bl	8001448 <draw_five>
 80010e2:	e00f      	b.n	8001104 <draw_D2+0x94>
		case 6: draw_six(x_offset); break;
 80010e4:	68f8      	ldr	r0, [r7, #12]
 80010e6:	f000 f9e1 	bl	80014ac <draw_six>
 80010ea:	e00b      	b.n	8001104 <draw_D2+0x94>
		case 7: draw_seven(x_offset); break;
 80010ec:	68f8      	ldr	r0, [r7, #12]
 80010ee:	f000 fa0f 	bl	8001510 <draw_seven>
 80010f2:	e007      	b.n	8001104 <draw_D2+0x94>
		case 8: draw_eight(x_offset); break;
 80010f4:	68f8      	ldr	r0, [r7, #12]
 80010f6:	f000 fa3d 	bl	8001574 <draw_eight>
 80010fa:	e003      	b.n	8001104 <draw_D2+0x94>
		case 9: draw_nine(x_offset); break;
 80010fc:	68f8      	ldr	r0, [r7, #12]
 80010fe:	f000 fa6b 	bl	80015d8 <draw_nine>
 8001102:	bf00      	nop
	}
}
 8001104:	bf00      	nop
 8001106:	3710      	adds	r7, #16
 8001108:	46bd      	mov	sp, r7
 800110a:	bd80      	pop	{r7, pc}

0800110c <draw_D3>:
void draw_D3(int digit){
 800110c:	b580      	push	{r7, lr}
 800110e:	b084      	sub	sp, #16
 8001110:	af00      	add	r7, sp, #0
 8001112:	6078      	str	r0, [r7, #4]
    int x_offset = 4;
 8001114:	2304      	movs	r3, #4
 8001116:	60fb      	str	r3, [r7, #12]
	switch(digit){
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	2b09      	cmp	r3, #9
 800111c:	d83e      	bhi.n	800119c <draw_D3+0x90>
 800111e:	a201      	add	r2, pc, #4	; (adr r2, 8001124 <draw_D3+0x18>)
 8001120:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001124:	0800114d 	.word	0x0800114d
 8001128:	08001155 	.word	0x08001155
 800112c:	0800115d 	.word	0x0800115d
 8001130:	08001165 	.word	0x08001165
 8001134:	0800116d 	.word	0x0800116d
 8001138:	08001175 	.word	0x08001175
 800113c:	0800117d 	.word	0x0800117d
 8001140:	08001185 	.word	0x08001185
 8001144:	0800118d 	.word	0x0800118d
 8001148:	08001195 	.word	0x08001195
		case 0: draw_zero(x_offset); break;
 800114c:	68f8      	ldr	r0, [r7, #12]
 800114e:	f000 f875 	bl	800123c <draw_zero>
 8001152:	e023      	b.n	800119c <draw_D3+0x90>
		case 1: draw_one(x_offset); break;
 8001154:	68f8      	ldr	r0, [r7, #12]
 8001156:	f000 f8a9 	bl	80012ac <draw_one>
 800115a:	e01f      	b.n	800119c <draw_D3+0x90>
		case 2: draw_two(x_offset); break;
 800115c:	68f8      	ldr	r0, [r7, #12]
 800115e:	f000 f8dd 	bl	800131c <draw_two>
 8001162:	e01b      	b.n	800119c <draw_D3+0x90>
		case 3: draw_three(x_offset); break;
 8001164:	68f8      	ldr	r0, [r7, #12]
 8001166:	f000 f90b 	bl	8001380 <draw_three>
 800116a:	e017      	b.n	800119c <draw_D3+0x90>
		case 4: draw_four(x_offset); break;
 800116c:	68f8      	ldr	r0, [r7, #12]
 800116e:	f000 f939 	bl	80013e4 <draw_four>
 8001172:	e013      	b.n	800119c <draw_D3+0x90>
		case 5: draw_five(x_offset); break;
 8001174:	68f8      	ldr	r0, [r7, #12]
 8001176:	f000 f967 	bl	8001448 <draw_five>
 800117a:	e00f      	b.n	800119c <draw_D3+0x90>
		case 6: draw_six(x_offset); break;
 800117c:	68f8      	ldr	r0, [r7, #12]
 800117e:	f000 f995 	bl	80014ac <draw_six>
 8001182:	e00b      	b.n	800119c <draw_D3+0x90>
		case 7: draw_seven(x_offset); break;
 8001184:	68f8      	ldr	r0, [r7, #12]
 8001186:	f000 f9c3 	bl	8001510 <draw_seven>
 800118a:	e007      	b.n	800119c <draw_D3+0x90>
		case 8: draw_eight(x_offset); break;
 800118c:	68f8      	ldr	r0, [r7, #12]
 800118e:	f000 f9f1 	bl	8001574 <draw_eight>
 8001192:	e003      	b.n	800119c <draw_D3+0x90>
		case 9: draw_nine(x_offset); break;
 8001194:	68f8      	ldr	r0, [r7, #12]
 8001196:	f000 fa1f 	bl	80015d8 <draw_nine>
 800119a:	bf00      	nop
	}
}
 800119c:	bf00      	nop
 800119e:	3710      	adds	r7, #16
 80011a0:	46bd      	mov	sp, r7
 80011a2:	bd80      	pop	{r7, pc}

080011a4 <draw_D4>:
void draw_D4(int digit){
 80011a4:	b580      	push	{r7, lr}
 80011a6:	b084      	sub	sp, #16
 80011a8:	af00      	add	r7, sp, #0
 80011aa:	6078      	str	r0, [r7, #4]
    int x_offset = 7;
 80011ac:	2307      	movs	r3, #7
 80011ae:	60fb      	str	r3, [r7, #12]
	switch(digit){
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	2b09      	cmp	r3, #9
 80011b4:	d83e      	bhi.n	8001234 <draw_D4+0x90>
 80011b6:	a201      	add	r2, pc, #4	; (adr r2, 80011bc <draw_D4+0x18>)
 80011b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80011bc:	080011e5 	.word	0x080011e5
 80011c0:	080011ed 	.word	0x080011ed
 80011c4:	080011f5 	.word	0x080011f5
 80011c8:	080011fd 	.word	0x080011fd
 80011cc:	08001205 	.word	0x08001205
 80011d0:	0800120d 	.word	0x0800120d
 80011d4:	08001215 	.word	0x08001215
 80011d8:	0800121d 	.word	0x0800121d
 80011dc:	08001225 	.word	0x08001225
 80011e0:	0800122d 	.word	0x0800122d
		case 0: draw_zero(x_offset); break;
 80011e4:	68f8      	ldr	r0, [r7, #12]
 80011e6:	f000 f829 	bl	800123c <draw_zero>
 80011ea:	e023      	b.n	8001234 <draw_D4+0x90>
		case 1: draw_one(x_offset); break;
 80011ec:	68f8      	ldr	r0, [r7, #12]
 80011ee:	f000 f85d 	bl	80012ac <draw_one>
 80011f2:	e01f      	b.n	8001234 <draw_D4+0x90>
		case 2: draw_two(x_offset); break;
 80011f4:	68f8      	ldr	r0, [r7, #12]
 80011f6:	f000 f891 	bl	800131c <draw_two>
 80011fa:	e01b      	b.n	8001234 <draw_D4+0x90>
		case 3: draw_three(x_offset); break;
 80011fc:	68f8      	ldr	r0, [r7, #12]
 80011fe:	f000 f8bf 	bl	8001380 <draw_three>
 8001202:	e017      	b.n	8001234 <draw_D4+0x90>
		case 4: draw_four(x_offset); break;
 8001204:	68f8      	ldr	r0, [r7, #12]
 8001206:	f000 f8ed 	bl	80013e4 <draw_four>
 800120a:	e013      	b.n	8001234 <draw_D4+0x90>
		case 5: draw_five(x_offset); break;
 800120c:	68f8      	ldr	r0, [r7, #12]
 800120e:	f000 f91b 	bl	8001448 <draw_five>
 8001212:	e00f      	b.n	8001234 <draw_D4+0x90>
		case 6: draw_six(x_offset); break;
 8001214:	68f8      	ldr	r0, [r7, #12]
 8001216:	f000 f949 	bl	80014ac <draw_six>
 800121a:	e00b      	b.n	8001234 <draw_D4+0x90>
		case 7: draw_seven(x_offset); break;
 800121c:	68f8      	ldr	r0, [r7, #12]
 800121e:	f000 f977 	bl	8001510 <draw_seven>
 8001222:	e007      	b.n	8001234 <draw_D4+0x90>
		case 8: draw_eight(x_offset); break;
 8001224:	68f8      	ldr	r0, [r7, #12]
 8001226:	f000 f9a5 	bl	8001574 <draw_eight>
 800122a:	e003      	b.n	8001234 <draw_D4+0x90>
		case 9: draw_nine(x_offset); break;
 800122c:	68f8      	ldr	r0, [r7, #12]
 800122e:	f000 f9d3 	bl	80015d8 <draw_nine>
 8001232:	bf00      	nop
	}
}
 8001234:	bf00      	nop
 8001236:	3710      	adds	r7, #16
 8001238:	46bd      	mov	sp, r7
 800123a:	bd80      	pop	{r7, pc}

0800123c <draw_zero>:
void draw_zero(int offset_x){
 800123c:	b580      	push	{r7, lr}
 800123e:	b084      	sub	sp, #16
 8001240:	af00      	add	r7, sp, #0
 8001242:	6078      	str	r0, [r7, #4]
	printf("Drawing Zero:\n");
 8001244:	4816      	ldr	r0, [pc, #88]	; (80012a0 <draw_zero+0x64>)
 8001246:	f000 fdd1 	bl	8001dec <puts>
	for (int i = 0; i < one_array_size; i++){
 800124a:	2300      	movs	r3, #0
 800124c:	60fb      	str	r3, [r7, #12]
 800124e:	e01c      	b.n	800128a <draw_zero+0x4e>
		move_arm(zero_array[i][0] + offset_x, zero_array[i][1] + Y_OFFSET);
 8001250:	4a14      	ldr	r2, [pc, #80]	; (80012a4 <draw_zero+0x68>)
 8001252:	68fb      	ldr	r3, [r7, #12]
 8001254:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	4413      	add	r3, r2
 800125c:	ee07 3a90 	vmov	s15, r3
 8001260:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001264:	4a0f      	ldr	r2, [pc, #60]	; (80012a4 <draw_zero+0x68>)
 8001266:	68fb      	ldr	r3, [r7, #12]
 8001268:	00db      	lsls	r3, r3, #3
 800126a:	4413      	add	r3, r2
 800126c:	685b      	ldr	r3, [r3, #4]
 800126e:	3302      	adds	r3, #2
 8001270:	ee07 3a10 	vmov	s14, r3
 8001274:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8001278:	eef0 0a47 	vmov.f32	s1, s14
 800127c:	eeb0 0a67 	vmov.f32	s0, s15
 8001280:	f7ff fd36 	bl	8000cf0 <move_arm>
	for (int i = 0; i < one_array_size; i++){
 8001284:	68fb      	ldr	r3, [r7, #12]
 8001286:	3301      	adds	r3, #1
 8001288:	60fb      	str	r3, [r7, #12]
 800128a:	4b07      	ldr	r3, [pc, #28]	; (80012a8 <draw_zero+0x6c>)
 800128c:	681b      	ldr	r3, [r3, #0]
 800128e:	68fa      	ldr	r2, [r7, #12]
 8001290:	429a      	cmp	r2, r3
 8001292:	dbdd      	blt.n	8001250 <draw_zero+0x14>
	}
}
 8001294:	bf00      	nop
 8001296:	bf00      	nop
 8001298:	3710      	adds	r7, #16
 800129a:	46bd      	mov	sp, r7
 800129c:	bd80      	pop	{r7, pc}
 800129e:	bf00      	nop
 80012a0:	080046c0 	.word	0x080046c0
 80012a4:	20000024 	.word	0x20000024
 80012a8:	20000000 	.word	0x20000000

080012ac <draw_one>:

void draw_one(int offset_x){
 80012ac:	b580      	push	{r7, lr}
 80012ae:	b084      	sub	sp, #16
 80012b0:	af00      	add	r7, sp, #0
 80012b2:	6078      	str	r0, [r7, #4]
    //one with offsetx and offsety
	printf("Drawing One: \n");
 80012b4:	4816      	ldr	r0, [pc, #88]	; (8001310 <draw_one+0x64>)
 80012b6:	f000 fd99 	bl	8001dec <puts>
	for (int i = 0; i < one_array_size; i++){
 80012ba:	2300      	movs	r3, #0
 80012bc:	60fb      	str	r3, [r7, #12]
 80012be:	e01c      	b.n	80012fa <draw_one+0x4e>
		move_arm(one_array[i][0] + offset_x, one_array[i][1] + Y_OFFSET);
 80012c0:	4a14      	ldr	r2, [pc, #80]	; (8001314 <draw_one+0x68>)
 80012c2:	68fb      	ldr	r3, [r7, #12]
 80012c4:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	4413      	add	r3, r2
 80012cc:	ee07 3a90 	vmov	s15, r3
 80012d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012d4:	4a0f      	ldr	r2, [pc, #60]	; (8001314 <draw_one+0x68>)
 80012d6:	68fb      	ldr	r3, [r7, #12]
 80012d8:	00db      	lsls	r3, r3, #3
 80012da:	4413      	add	r3, r2
 80012dc:	685b      	ldr	r3, [r3, #4]
 80012de:	3302      	adds	r3, #2
 80012e0:	ee07 3a10 	vmov	s14, r3
 80012e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80012e8:	eef0 0a47 	vmov.f32	s1, s14
 80012ec:	eeb0 0a67 	vmov.f32	s0, s15
 80012f0:	f7ff fcfe 	bl	8000cf0 <move_arm>
	for (int i = 0; i < one_array_size; i++){
 80012f4:	68fb      	ldr	r3, [r7, #12]
 80012f6:	3301      	adds	r3, #1
 80012f8:	60fb      	str	r3, [r7, #12]
 80012fa:	4b07      	ldr	r3, [pc, #28]	; (8001318 <draw_one+0x6c>)
 80012fc:	681b      	ldr	r3, [r3, #0]
 80012fe:	68fa      	ldr	r2, [r7, #12]
 8001300:	429a      	cmp	r2, r3
 8001302:	dbdd      	blt.n	80012c0 <draw_one+0x14>
	}
}
 8001304:	bf00      	nop
 8001306:	bf00      	nop
 8001308:	3710      	adds	r7, #16
 800130a:	46bd      	mov	sp, r7
 800130c:	bd80      	pop	{r7, pc}
 800130e:	bf00      	nop
 8001310:	080046d0 	.word	0x080046d0
 8001314:	20000074 	.word	0x20000074
 8001318:	20000000 	.word	0x20000000

0800131c <draw_two>:
void draw_two(int offset_x){
 800131c:	b580      	push	{r7, lr}
 800131e:	b084      	sub	sp, #16
 8001320:	af00      	add	r7, sp, #0
 8001322:	6078      	str	r0, [r7, #4]
    //two with offsetx and offsety
	for (int i = 0; i < two_array_size; i++){
 8001324:	2300      	movs	r3, #0
 8001326:	60fb      	str	r3, [r7, #12]
 8001328:	e01c      	b.n	8001364 <draw_two+0x48>
		move_arm(two_array[i][0] + offset_x, two_array[i][1] + Y_OFFSET);
 800132a:	4a13      	ldr	r2, [pc, #76]	; (8001378 <draw_two+0x5c>)
 800132c:	68fb      	ldr	r3, [r7, #12]
 800132e:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	4413      	add	r3, r2
 8001336:	ee07 3a90 	vmov	s15, r3
 800133a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800133e:	4a0e      	ldr	r2, [pc, #56]	; (8001378 <draw_two+0x5c>)
 8001340:	68fb      	ldr	r3, [r7, #12]
 8001342:	00db      	lsls	r3, r3, #3
 8001344:	4413      	add	r3, r2
 8001346:	685b      	ldr	r3, [r3, #4]
 8001348:	3302      	adds	r3, #2
 800134a:	ee07 3a10 	vmov	s14, r3
 800134e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8001352:	eef0 0a47 	vmov.f32	s1, s14
 8001356:	eeb0 0a67 	vmov.f32	s0, s15
 800135a:	f7ff fcc9 	bl	8000cf0 <move_arm>
	for (int i = 0; i < two_array_size; i++){
 800135e:	68fb      	ldr	r3, [r7, #12]
 8001360:	3301      	adds	r3, #1
 8001362:	60fb      	str	r3, [r7, #12]
 8001364:	4b05      	ldr	r3, [pc, #20]	; (800137c <draw_two+0x60>)
 8001366:	681b      	ldr	r3, [r3, #0]
 8001368:	68fa      	ldr	r2, [r7, #12]
 800136a:	429a      	cmp	r2, r3
 800136c:	dbdd      	blt.n	800132a <draw_two+0xe>
	}
}
 800136e:	bf00      	nop
 8001370:	bf00      	nop
 8001372:	3710      	adds	r7, #16
 8001374:	46bd      	mov	sp, r7
 8001376:	bd80      	pop	{r7, pc}
 8001378:	200000c4 	.word	0x200000c4
 800137c:	20000004 	.word	0x20000004

08001380 <draw_three>:
void draw_three(int offset_x){
 8001380:	b580      	push	{r7, lr}
 8001382:	b084      	sub	sp, #16
 8001384:	af00      	add	r7, sp, #0
 8001386:	6078      	str	r0, [r7, #4]
    //three with offsetx and offsety
	for (int i = 0; i < three_array_size; i++){
 8001388:	2300      	movs	r3, #0
 800138a:	60fb      	str	r3, [r7, #12]
 800138c:	e01c      	b.n	80013c8 <draw_three+0x48>
		move_arm(three_array[i][0] + offset_x, three_array[i][1] + Y_OFFSET);
 800138e:	4a13      	ldr	r2, [pc, #76]	; (80013dc <draw_three+0x5c>)
 8001390:	68fb      	ldr	r3, [r7, #12]
 8001392:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	4413      	add	r3, r2
 800139a:	ee07 3a90 	vmov	s15, r3
 800139e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80013a2:	4a0e      	ldr	r2, [pc, #56]	; (80013dc <draw_three+0x5c>)
 80013a4:	68fb      	ldr	r3, [r7, #12]
 80013a6:	00db      	lsls	r3, r3, #3
 80013a8:	4413      	add	r3, r2
 80013aa:	685b      	ldr	r3, [r3, #4]
 80013ac:	3302      	adds	r3, #2
 80013ae:	ee07 3a10 	vmov	s14, r3
 80013b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80013b6:	eef0 0a47 	vmov.f32	s1, s14
 80013ba:	eeb0 0a67 	vmov.f32	s0, s15
 80013be:	f7ff fc97 	bl	8000cf0 <move_arm>
	for (int i = 0; i < three_array_size; i++){
 80013c2:	68fb      	ldr	r3, [r7, #12]
 80013c4:	3301      	adds	r3, #1
 80013c6:	60fb      	str	r3, [r7, #12]
 80013c8:	4b05      	ldr	r3, [pc, #20]	; (80013e0 <draw_three+0x60>)
 80013ca:	681b      	ldr	r3, [r3, #0]
 80013cc:	68fa      	ldr	r2, [r7, #12]
 80013ce:	429a      	cmp	r2, r3
 80013d0:	dbdd      	blt.n	800138e <draw_three+0xe>
	}
}
 80013d2:	bf00      	nop
 80013d4:	bf00      	nop
 80013d6:	3710      	adds	r7, #16
 80013d8:	46bd      	mov	sp, r7
 80013da:	bd80      	pop	{r7, pc}
 80013dc:	20000124 	.word	0x20000124
 80013e0:	20000008 	.word	0x20000008

080013e4 <draw_four>:
void draw_four(int offset_x){
 80013e4:	b580      	push	{r7, lr}
 80013e6:	b084      	sub	sp, #16
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	6078      	str	r0, [r7, #4]
    //four with offsetx and offsety
	for (int i = 0; i < four_array_size; i++){
 80013ec:	2300      	movs	r3, #0
 80013ee:	60fb      	str	r3, [r7, #12]
 80013f0:	e01c      	b.n	800142c <draw_four+0x48>
		move_arm(four_array[i][0] + offset_x, four_array[i][1] + Y_OFFSET);
 80013f2:	4a13      	ldr	r2, [pc, #76]	; (8001440 <draw_four+0x5c>)
 80013f4:	68fb      	ldr	r3, [r7, #12]
 80013f6:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	4413      	add	r3, r2
 80013fe:	ee07 3a90 	vmov	s15, r3
 8001402:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001406:	4a0e      	ldr	r2, [pc, #56]	; (8001440 <draw_four+0x5c>)
 8001408:	68fb      	ldr	r3, [r7, #12]
 800140a:	00db      	lsls	r3, r3, #3
 800140c:	4413      	add	r3, r2
 800140e:	685b      	ldr	r3, [r3, #4]
 8001410:	3302      	adds	r3, #2
 8001412:	ee07 3a10 	vmov	s14, r3
 8001416:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800141a:	eef0 0a47 	vmov.f32	s1, s14
 800141e:	eeb0 0a67 	vmov.f32	s0, s15
 8001422:	f7ff fc65 	bl	8000cf0 <move_arm>
	for (int i = 0; i < four_array_size; i++){
 8001426:	68fb      	ldr	r3, [r7, #12]
 8001428:	3301      	adds	r3, #1
 800142a:	60fb      	str	r3, [r7, #12]
 800142c:	4b05      	ldr	r3, [pc, #20]	; (8001444 <draw_four+0x60>)
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	68fa      	ldr	r2, [r7, #12]
 8001432:	429a      	cmp	r2, r3
 8001434:	dbdd      	blt.n	80013f2 <draw_four+0xe>
	}
}
 8001436:	bf00      	nop
 8001438:	bf00      	nop
 800143a:	3710      	adds	r7, #16
 800143c:	46bd      	mov	sp, r7
 800143e:	bd80      	pop	{r7, pc}
 8001440:	2000018c 	.word	0x2000018c
 8001444:	2000000c 	.word	0x2000000c

08001448 <draw_five>:
void draw_five(int offset_x){
 8001448:	b580      	push	{r7, lr}
 800144a:	b084      	sub	sp, #16
 800144c:	af00      	add	r7, sp, #0
 800144e:	6078      	str	r0, [r7, #4]
    //five with offsetx and offsety
	for (int i = 0; i < five_array_size; i++){
 8001450:	2300      	movs	r3, #0
 8001452:	60fb      	str	r3, [r7, #12]
 8001454:	e01c      	b.n	8001490 <draw_five+0x48>
		move_arm(five_array[i][0] + offset_x, five_array[i][1] + Y_OFFSET);
 8001456:	4a13      	ldr	r2, [pc, #76]	; (80014a4 <draw_five+0x5c>)
 8001458:	68fb      	ldr	r3, [r7, #12]
 800145a:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	4413      	add	r3, r2
 8001462:	ee07 3a90 	vmov	s15, r3
 8001466:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800146a:	4a0e      	ldr	r2, [pc, #56]	; (80014a4 <draw_five+0x5c>)
 800146c:	68fb      	ldr	r3, [r7, #12]
 800146e:	00db      	lsls	r3, r3, #3
 8001470:	4413      	add	r3, r2
 8001472:	685b      	ldr	r3, [r3, #4]
 8001474:	3302      	adds	r3, #2
 8001476:	ee07 3a10 	vmov	s14, r3
 800147a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800147e:	eef0 0a47 	vmov.f32	s1, s14
 8001482:	eeb0 0a67 	vmov.f32	s0, s15
 8001486:	f7ff fc33 	bl	8000cf0 <move_arm>
	for (int i = 0; i < five_array_size; i++){
 800148a:	68fb      	ldr	r3, [r7, #12]
 800148c:	3301      	adds	r3, #1
 800148e:	60fb      	str	r3, [r7, #12]
 8001490:	4b05      	ldr	r3, [pc, #20]	; (80014a8 <draw_five+0x60>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	68fa      	ldr	r2, [r7, #12]
 8001496:	429a      	cmp	r2, r3
 8001498:	dbdd      	blt.n	8001456 <draw_five+0xe>
	}
}
 800149a:	bf00      	nop
 800149c:	bf00      	nop
 800149e:	3710      	adds	r7, #16
 80014a0:	46bd      	mov	sp, r7
 80014a2:	bd80      	pop	{r7, pc}
 80014a4:	200001dc 	.word	0x200001dc
 80014a8:	20000010 	.word	0x20000010

080014ac <draw_six>:
void draw_six(int offset_x){
 80014ac:	b580      	push	{r7, lr}
 80014ae:	b084      	sub	sp, #16
 80014b0:	af00      	add	r7, sp, #0
 80014b2:	6078      	str	r0, [r7, #4]
    //six with offsetx and offsety
	for (int i = 0; i < six_array_size; i++){
 80014b4:	2300      	movs	r3, #0
 80014b6:	60fb      	str	r3, [r7, #12]
 80014b8:	e01c      	b.n	80014f4 <draw_six+0x48>
		move_arm(six_array[i][0] + offset_x, six_array[i][1] + Y_OFFSET);
 80014ba:	4a13      	ldr	r2, [pc, #76]	; (8001508 <draw_six+0x5c>)
 80014bc:	68fb      	ldr	r3, [r7, #12]
 80014be:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	4413      	add	r3, r2
 80014c6:	ee07 3a90 	vmov	s15, r3
 80014ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80014ce:	4a0e      	ldr	r2, [pc, #56]	; (8001508 <draw_six+0x5c>)
 80014d0:	68fb      	ldr	r3, [r7, #12]
 80014d2:	00db      	lsls	r3, r3, #3
 80014d4:	4413      	add	r3, r2
 80014d6:	685b      	ldr	r3, [r3, #4]
 80014d8:	3302      	adds	r3, #2
 80014da:	ee07 3a10 	vmov	s14, r3
 80014de:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80014e2:	eef0 0a47 	vmov.f32	s1, s14
 80014e6:	eeb0 0a67 	vmov.f32	s0, s15
 80014ea:	f7ff fc01 	bl	8000cf0 <move_arm>
	for (int i = 0; i < six_array_size; i++){
 80014ee:	68fb      	ldr	r3, [r7, #12]
 80014f0:	3301      	adds	r3, #1
 80014f2:	60fb      	str	r3, [r7, #12]
 80014f4:	4b05      	ldr	r3, [pc, #20]	; (800150c <draw_six+0x60>)
 80014f6:	681b      	ldr	r3, [r3, #0]
 80014f8:	68fa      	ldr	r2, [r7, #12]
 80014fa:	429a      	cmp	r2, r3
 80014fc:	dbdd      	blt.n	80014ba <draw_six+0xe>
	}
}
 80014fe:	bf00      	nop
 8001500:	bf00      	nop
 8001502:	3710      	adds	r7, #16
 8001504:	46bd      	mov	sp, r7
 8001506:	bd80      	pop	{r7, pc}
 8001508:	2000023c 	.word	0x2000023c
 800150c:	20000014 	.word	0x20000014

08001510 <draw_seven>:
void draw_seven(int offset_x){
 8001510:	b580      	push	{r7, lr}
 8001512:	b084      	sub	sp, #16
 8001514:	af00      	add	r7, sp, #0
 8001516:	6078      	str	r0, [r7, #4]
    //seven with offsetx and offsety
	for (int i = 0; i < seven_array_size; i++){
 8001518:	2300      	movs	r3, #0
 800151a:	60fb      	str	r3, [r7, #12]
 800151c:	e01c      	b.n	8001558 <draw_seven+0x48>
		move_arm(seven_array[i][0] + offset_x, seven_array[i][1] + Y_OFFSET);
 800151e:	4a13      	ldr	r2, [pc, #76]	; (800156c <draw_seven+0x5c>)
 8001520:	68fb      	ldr	r3, [r7, #12]
 8001522:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8001526:	687b      	ldr	r3, [r7, #4]
 8001528:	4413      	add	r3, r2
 800152a:	ee07 3a90 	vmov	s15, r3
 800152e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001532:	4a0e      	ldr	r2, [pc, #56]	; (800156c <draw_seven+0x5c>)
 8001534:	68fb      	ldr	r3, [r7, #12]
 8001536:	00db      	lsls	r3, r3, #3
 8001538:	4413      	add	r3, r2
 800153a:	685b      	ldr	r3, [r3, #4]
 800153c:	3302      	adds	r3, #2
 800153e:	ee07 3a10 	vmov	s14, r3
 8001542:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8001546:	eef0 0a47 	vmov.f32	s1, s14
 800154a:	eeb0 0a67 	vmov.f32	s0, s15
 800154e:	f7ff fbcf 	bl	8000cf0 <move_arm>
	for (int i = 0; i < seven_array_size; i++){
 8001552:	68fb      	ldr	r3, [r7, #12]
 8001554:	3301      	adds	r3, #1
 8001556:	60fb      	str	r3, [r7, #12]
 8001558:	4b05      	ldr	r3, [pc, #20]	; (8001570 <draw_seven+0x60>)
 800155a:	681b      	ldr	r3, [r3, #0]
 800155c:	68fa      	ldr	r2, [r7, #12]
 800155e:	429a      	cmp	r2, r3
 8001560:	dbdd      	blt.n	800151e <draw_seven+0xe>
	}
}
 8001562:	bf00      	nop
 8001564:	bf00      	nop
 8001566:	3710      	adds	r7, #16
 8001568:	46bd      	mov	sp, r7
 800156a:	bd80      	pop	{r7, pc}
 800156c:	200002ac 	.word	0x200002ac
 8001570:	20000018 	.word	0x20000018

08001574 <draw_eight>:
void draw_eight(int offset_x){
 8001574:	b580      	push	{r7, lr}
 8001576:	b084      	sub	sp, #16
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
    //eight with offsetx and offsety
	for (int i = 0; i < eight_array_size; i++){
 800157c:	2300      	movs	r3, #0
 800157e:	60fb      	str	r3, [r7, #12]
 8001580:	e01c      	b.n	80015bc <draw_eight+0x48>
		move_arm(eight_array[i][0] + offset_x, eight_array[i][1] + Y_OFFSET);
 8001582:	4a13      	ldr	r2, [pc, #76]	; (80015d0 <draw_eight+0x5c>)
 8001584:	68fb      	ldr	r3, [r7, #12]
 8001586:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	4413      	add	r3, r2
 800158e:	ee07 3a90 	vmov	s15, r3
 8001592:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001596:	4a0e      	ldr	r2, [pc, #56]	; (80015d0 <draw_eight+0x5c>)
 8001598:	68fb      	ldr	r3, [r7, #12]
 800159a:	00db      	lsls	r3, r3, #3
 800159c:	4413      	add	r3, r2
 800159e:	685b      	ldr	r3, [r3, #4]
 80015a0:	3302      	adds	r3, #2
 80015a2:	ee07 3a10 	vmov	s14, r3
 80015a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80015aa:	eef0 0a47 	vmov.f32	s1, s14
 80015ae:	eeb0 0a67 	vmov.f32	s0, s15
 80015b2:	f7ff fb9d 	bl	8000cf0 <move_arm>
	for (int i = 0; i < eight_array_size; i++){
 80015b6:	68fb      	ldr	r3, [r7, #12]
 80015b8:	3301      	adds	r3, #1
 80015ba:	60fb      	str	r3, [r7, #12]
 80015bc:	4b05      	ldr	r3, [pc, #20]	; (80015d4 <draw_eight+0x60>)
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	68fa      	ldr	r2, [r7, #12]
 80015c2:	429a      	cmp	r2, r3
 80015c4:	dbdd      	blt.n	8001582 <draw_eight+0xe>
	}
}
 80015c6:	bf00      	nop
 80015c8:	bf00      	nop
 80015ca:	3710      	adds	r7, #16
 80015cc:	46bd      	mov	sp, r7
 80015ce:	bd80      	pop	{r7, pc}
 80015d0:	200002dc 	.word	0x200002dc
 80015d4:	2000001c 	.word	0x2000001c

080015d8 <draw_nine>:
void draw_nine(int offset_x){
 80015d8:	b580      	push	{r7, lr}
 80015da:	b084      	sub	sp, #16
 80015dc:	af00      	add	r7, sp, #0
 80015de:	6078      	str	r0, [r7, #4]
    //nine with offsetx and offsety
	for (int i = 0; i < nine_array_size; i++){
 80015e0:	2300      	movs	r3, #0
 80015e2:	60fb      	str	r3, [r7, #12]
 80015e4:	e01c      	b.n	8001620 <draw_nine+0x48>
		move_arm(nine_array[i][0] + offset_x, nine_array[i][1] + Y_OFFSET);
 80015e6:	4a13      	ldr	r2, [pc, #76]	; (8001634 <draw_nine+0x5c>)
 80015e8:	68fb      	ldr	r3, [r7, #12]
 80015ea:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 80015ee:	687b      	ldr	r3, [r7, #4]
 80015f0:	4413      	add	r3, r2
 80015f2:	ee07 3a90 	vmov	s15, r3
 80015f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015fa:	4a0e      	ldr	r2, [pc, #56]	; (8001634 <draw_nine+0x5c>)
 80015fc:	68fb      	ldr	r3, [r7, #12]
 80015fe:	00db      	lsls	r3, r3, #3
 8001600:	4413      	add	r3, r2
 8001602:	685b      	ldr	r3, [r3, #4]
 8001604:	3302      	adds	r3, #2
 8001606:	ee07 3a10 	vmov	s14, r3
 800160a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800160e:	eef0 0a47 	vmov.f32	s1, s14
 8001612:	eeb0 0a67 	vmov.f32	s0, s15
 8001616:	f7ff fb6b 	bl	8000cf0 <move_arm>
	for (int i = 0; i < nine_array_size; i++){
 800161a:	68fb      	ldr	r3, [r7, #12]
 800161c:	3301      	adds	r3, #1
 800161e:	60fb      	str	r3, [r7, #12]
 8001620:	4b05      	ldr	r3, [pc, #20]	; (8001638 <draw_nine+0x60>)
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	68fa      	ldr	r2, [r7, #12]
 8001626:	429a      	cmp	r2, r3
 8001628:	dbdd      	blt.n	80015e6 <draw_nine+0xe>
	}
}
 800162a:	bf00      	nop
 800162c:	bf00      	nop
 800162e:	3710      	adds	r7, #16
 8001630:	46bd      	mov	sp, r7
 8001632:	bd80      	pop	{r7, pc}
 8001634:	20000364 	.word	0x20000364
 8001638:	20000020 	.word	0x20000020

0800163c <pwm_tim2_init>:
#define MAX_DEGREE_RANGE		180.0
#define MIN_DEGREE_RANGE		0.0
#define INCREMENT_VALUE			5


void pwm_tim2_init(void){
 800163c:	b480      	push	{r7}
 800163e:	af00      	add	r7, sp, #0


	//configure gpioa pins 1, 2, 3
	RCC->AHB1ENR |= GPIOAEN;
 8001640:	4b3b      	ldr	r3, [pc, #236]	; (8001730 <pwm_tim2_init+0xf4>)
 8001642:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001644:	4a3a      	ldr	r2, [pc, #232]	; (8001730 <pwm_tim2_init+0xf4>)
 8001646:	f043 0301 	orr.w	r3, r3, #1
 800164a:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->APB1ENR |= TIM2EN;
 800164c:	4b38      	ldr	r3, [pc, #224]	; (8001730 <pwm_tim2_init+0xf4>)
 800164e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001650:	4a37      	ldr	r2, [pc, #220]	; (8001730 <pwm_tim2_init+0xf4>)
 8001652:	f043 0301 	orr.w	r3, r3, #1
 8001656:	6413      	str	r3, [r2, #64]	; 0x40

	/* CONFIG PORT A PINS 1-3*/
	GPIOA->MODER &= ~(0x000000FC);
 8001658:	4b36      	ldr	r3, [pc, #216]	; (8001734 <pwm_tim2_init+0xf8>)
 800165a:	681b      	ldr	r3, [r3, #0]
 800165c:	4a35      	ldr	r2, [pc, #212]	; (8001734 <pwm_tim2_init+0xf8>)
 800165e:	f023 03fc 	bic.w	r3, r3, #252	; 0xfc
 8001662:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (MODER_PIN_1_AF | MODER_PIN_2_AF | MODER_PIN_3_AF);
 8001664:	4b33      	ldr	r3, [pc, #204]	; (8001734 <pwm_tim2_init+0xf8>)
 8001666:	681b      	ldr	r3, [r3, #0]
 8001668:	4a32      	ldr	r2, [pc, #200]	; (8001734 <pwm_tim2_init+0xf8>)
 800166a:	f043 03a8 	orr.w	r3, r3, #168	; 0xa8
 800166e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(0x0000FFF0);
 8001670:	4b30      	ldr	r3, [pc, #192]	; (8001734 <pwm_tim2_init+0xf8>)
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	4a2f      	ldr	r2, [pc, #188]	; (8001734 <pwm_tim2_init+0xf8>)
 8001676:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800167a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800167e:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0] |= (AFR_PIN_3 | AFR_PIN_2 | AFR_PIN_1);
 8001680:	4b2c      	ldr	r3, [pc, #176]	; (8001734 <pwm_tim2_init+0xf8>)
 8001682:	6a1b      	ldr	r3, [r3, #32]
 8001684:	4a2b      	ldr	r2, [pc, #172]	; (8001734 <pwm_tim2_init+0xf8>)
 8001686:	f443 5388 	orr.w	r3, r3, #4352	; 0x1100
 800168a:	f043 0310 	orr.w	r3, r3, #16
 800168e:	6213      	str	r3, [r2, #32]
	GPIOA->OSPEEDR &= ~(PIN1_HIGHSPEED | PIN2_HIGHSPEED | PIN3_HIGHSPEED);
 8001690:	4b28      	ldr	r3, [pc, #160]	; (8001734 <pwm_tim2_init+0xf8>)
 8001692:	689b      	ldr	r3, [r3, #8]
 8001694:	4a27      	ldr	r2, [pc, #156]	; (8001734 <pwm_tim2_init+0xf8>)
 8001696:	f023 03fc 	bic.w	r3, r3, #252	; 0xfc
 800169a:	6093      	str	r3, [r2, #8]
	GPIOA->OSPEEDR |= (PIN3_HIGHSPEED | PIN2_HIGHSPEED | PIN3_HIGHSPEED);
 800169c:	4b25      	ldr	r3, [pc, #148]	; (8001734 <pwm_tim2_init+0xf8>)
 800169e:	689b      	ldr	r3, [r3, #8]
 80016a0:	4a24      	ldr	r2, [pc, #144]	; (8001734 <pwm_tim2_init+0xf8>)
 80016a2:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 80016a6:	6093      	str	r3, [r2, #8]


	// systemclock at 16MHz
	/* Set for 20 ms */
	TIM2->PSC = PSC_VALUE;
 80016a8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016ac:	f240 123f 	movw	r2, #319	; 0x13f
 80016b0:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = ARR_VALUE;
 80016b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016b6:	f240 32e7 	movw	r2, #999	; 0x3e7
 80016ba:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM2->CNT = 0; // restart counter
 80016bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016c0:	2200      	movs	r2, #0
 80016c2:	625a      	str	r2, [r3, #36]	; 0x24


	//enable pwm mode for ch 2, 3, & 4
	TIM2->CCMR1 |= CH2_PWM_MODE_ONE;
 80016c4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016c8:	699b      	ldr	r3, [r3, #24]
 80016ca:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016ce:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
 80016d2:	6193      	str	r3, [r2, #24]
	TIM2->CCMR2 |= (CH3_PWM_MODE_ONE | CH4_PWM_MODE_ONE);
 80016d4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016d8:	69db      	ldr	r3, [r3, #28]
 80016da:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016de:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
 80016e2:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 80016e6:	61d3      	str	r3, [r2, #28]

	// init duty cycle
	TIM2->CCR2 = 100;
 80016e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016ec:	2264      	movs	r2, #100	; 0x64
 80016ee:	639a      	str	r2, [r3, #56]	; 0x38
	TIM2->CCR3 = 100;
 80016f0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016f4:	2264      	movs	r2, #100	; 0x64
 80016f6:	63da      	str	r2, [r3, #60]	; 0x3c
	TIM2->CCR4 = 100;
 80016f8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80016fc:	2264      	movs	r2, #100	; 0x64
 80016fe:	641a      	str	r2, [r3, #64]	; 0x40

	TIM2->CCER |= (CCER_CC4E | CCER_CC3E | CCER_CC2E); //enable capture/compare of tim2ch2
 8001700:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001704:	6a1b      	ldr	r3, [r3, #32]
 8001706:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800170a:	f443 5388 	orr.w	r3, r3, #4352	; 0x1100
 800170e:	f043 0310 	orr.w	r3, r3, #16
 8001712:	6213      	str	r3, [r2, #32]
	TIM2->CR1 |= CR1_CEN;
 8001714:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800171e:	f043 0301 	orr.w	r3, r3, #1
 8001722:	6013      	str	r3, [r2, #0]

}
 8001724:	bf00      	nop
 8001726:	46bd      	mov	sp, r7
 8001728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800172c:	4770      	bx	lr
 800172e:	bf00      	nop
 8001730:	40023800 	.word	0x40023800
 8001734:	40020000 	.word	0x40020000

08001738 <map_to_servo>:

float map_to_servo(float value){
 8001738:	b5b0      	push	{r4, r5, r7, lr}
 800173a:	b084      	sub	sp, #16
 800173c:	af00      	add	r7, sp, #0
 800173e:	ed87 0a01 	vstr	s0, [r7, #4]
	float slope = 1.0 * (MAX_SERVO_VALUE - MIN_SERVO_VALUE) / (MAX_DEGREE_RANGE - MIN_DEGREE_RANGE);
 8001742:	4b13      	ldr	r3, [pc, #76]	; (8001790 <map_to_servo+0x58>)
 8001744:	60fb      	str	r3, [r7, #12]
	return (float)(MIN_SERVO_VALUE + slope * (value - MIN_DEGREE_RANGE));
 8001746:	68f8      	ldr	r0, [r7, #12]
 8001748:	f7fe fefe 	bl	8000548 <__aeabi_f2d>
 800174c:	4604      	mov	r4, r0
 800174e:	460d      	mov	r5, r1
 8001750:	6878      	ldr	r0, [r7, #4]
 8001752:	f7fe fef9 	bl	8000548 <__aeabi_f2d>
 8001756:	4602      	mov	r2, r0
 8001758:	460b      	mov	r3, r1
 800175a:	4620      	mov	r0, r4
 800175c:	4629      	mov	r1, r5
 800175e:	f7fe ff4b 	bl	80005f8 <__aeabi_dmul>
 8001762:	4602      	mov	r2, r0
 8001764:	460b      	mov	r3, r1
 8001766:	4610      	mov	r0, r2
 8001768:	4619      	mov	r1, r3
 800176a:	f04f 0200 	mov.w	r2, #0
 800176e:	4b09      	ldr	r3, [pc, #36]	; (8001794 <map_to_servo+0x5c>)
 8001770:	f7fe fd8c 	bl	800028c <__adddf3>
 8001774:	4602      	mov	r2, r0
 8001776:	460b      	mov	r3, r1
 8001778:	4610      	mov	r0, r2
 800177a:	4619      	mov	r1, r3
 800177c:	f7ff f9ec 	bl	8000b58 <__aeabi_d2f>
 8001780:	4603      	mov	r3, r0
 8001782:	ee07 3a90 	vmov	s15, r3

}
 8001786:	eeb0 0a67 	vmov.f32	s0, s15
 800178a:	3710      	adds	r7, #16
 800178c:	46bd      	mov	sp, r7
 800178e:	bdb0      	pop	{r4, r5, r7, pc}
 8001790:	3e8e38e4 	.word	0x3e8e38e4
 8001794:	40490000 	.word	0x40490000

08001798 <move_servo>:
void move_servo(float base_degrees, float arm_degrees, float x_value){
 8001798:	b580      	push	{r7, lr}
 800179a:	b084      	sub	sp, #16
 800179c:	af00      	add	r7, sp, #0
 800179e:	ed87 0a03 	vstr	s0, [r7, #12]
 80017a2:	edc7 0a02 	vstr	s1, [r7, #8]
 80017a6:	ed87 1a01 	vstr	s2, [r7, #4]

	TIM2->CCR2 = (int)base_degrees;
 80017aa:	edd7 7a03 	vldr	s15, [r7, #12]
 80017ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80017b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80017b6:	ee17 2a90 	vmov	r2, s15
 80017ba:	639a      	str	r2, [r3, #56]	; 0x38
	printf("Base Degrees = %d\t", (int)base_degrees);
 80017bc:	edd7 7a03 	vldr	s15, [r7, #12]
 80017c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80017c4:	ee17 1a90 	vmov	r1, s15
 80017c8:	4819      	ldr	r0, [pc, #100]	; (8001830 <move_servo+0x98>)
 80017ca:	f000 faa9 	bl	8001d20 <iprintf>
	
	if (x_value >= 0){
 80017ce:	edd7 7a01 	vldr	s15, [r7, #4]
 80017d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80017d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017da:	db0c      	blt.n	80017f6 <move_servo+0x5e>
		// use left servo
		TIM2->CCR3 = (int)arm_degrees;
 80017dc:	edd7 7a02 	vldr	s15, [r7, #8]
 80017e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80017e4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80017e8:	ee17 2a90 	vmov	r2, s15
 80017ec:	63da      	str	r2, [r3, #60]	; 0x3c
		printf("Arm_Degrees = %d\n");
 80017ee:	4811      	ldr	r0, [pc, #68]	; (8001834 <move_servo+0x9c>)
 80017f0:	f000 fa96 	bl	8001d20 <iprintf>
 80017f4:	e00b      	b.n	800180e <move_servo+0x76>
	} else {
		//use right servo
		TIM2->CCR4 = (int)arm_degrees;
 80017f6:	edd7 7a02 	vldr	s15, [r7, #8]
 80017fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80017fe:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001802:	ee17 2a90 	vmov	r2, s15
 8001806:	641a      	str	r2, [r3, #64]	; 0x40
		printf("Arm_Degrees = %d\n");
 8001808:	480a      	ldr	r0, [pc, #40]	; (8001834 <move_servo+0x9c>)
 800180a:	f000 fa89 	bl	8001d20 <iprintf>
	}

	while(!(TIM4->SR & SR_UIF));
 800180e:	bf00      	nop
 8001810:	4b09      	ldr	r3, [pc, #36]	; (8001838 <move_servo+0xa0>)
 8001812:	691b      	ldr	r3, [r3, #16]
 8001814:	f003 0301 	and.w	r3, r3, #1
 8001818:	2b00      	cmp	r3, #0
 800181a:	d0f9      	beq.n	8001810 <move_servo+0x78>
	TIM4->SR &= ~(SR_UIF);
 800181c:	4b06      	ldr	r3, [pc, #24]	; (8001838 <move_servo+0xa0>)
 800181e:	691b      	ldr	r3, [r3, #16]
 8001820:	4a05      	ldr	r2, [pc, #20]	; (8001838 <move_servo+0xa0>)
 8001822:	f023 0301 	bic.w	r3, r3, #1
 8001826:	6113      	str	r3, [r2, #16]
}
 8001828:	bf00      	nop
 800182a:	3710      	adds	r7, #16
 800182c:	46bd      	mov	sp, r7
 800182e:	bd80      	pop	{r7, pc}
 8001830:	080046e0 	.word	0x080046e0
 8001834:	080046f4 	.word	0x080046f4
 8001838:	40000800 	.word	0x40000800

0800183c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800183c:	b580      	push	{r7, lr}
 800183e:	b086      	sub	sp, #24
 8001840:	af00      	add	r7, sp, #0
 8001842:	60f8      	str	r0, [r7, #12]
 8001844:	60b9      	str	r1, [r7, #8]
 8001846:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001848:	2300      	movs	r3, #0
 800184a:	617b      	str	r3, [r7, #20]
 800184c:	e00a      	b.n	8001864 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800184e:	f3af 8000 	nop.w
 8001852:	4601      	mov	r1, r0
 8001854:	68bb      	ldr	r3, [r7, #8]
 8001856:	1c5a      	adds	r2, r3, #1
 8001858:	60ba      	str	r2, [r7, #8]
 800185a:	b2ca      	uxtb	r2, r1
 800185c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800185e:	697b      	ldr	r3, [r7, #20]
 8001860:	3301      	adds	r3, #1
 8001862:	617b      	str	r3, [r7, #20]
 8001864:	697a      	ldr	r2, [r7, #20]
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	429a      	cmp	r2, r3
 800186a:	dbf0      	blt.n	800184e <_read+0x12>
  }

  return len;
 800186c:	687b      	ldr	r3, [r7, #4]
}
 800186e:	4618      	mov	r0, r3
 8001870:	3718      	adds	r7, #24
 8001872:	46bd      	mov	sp, r7
 8001874:	bd80      	pop	{r7, pc}

08001876 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001876:	b580      	push	{r7, lr}
 8001878:	b086      	sub	sp, #24
 800187a:	af00      	add	r7, sp, #0
 800187c:	60f8      	str	r0, [r7, #12]
 800187e:	60b9      	str	r1, [r7, #8]
 8001880:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001882:	2300      	movs	r3, #0
 8001884:	617b      	str	r3, [r7, #20]
 8001886:	e009      	b.n	800189c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001888:	68bb      	ldr	r3, [r7, #8]
 800188a:	1c5a      	adds	r2, r3, #1
 800188c:	60ba      	str	r2, [r7, #8]
 800188e:	781b      	ldrb	r3, [r3, #0]
 8001890:	4618      	mov	r0, r3
 8001892:	f7ff f9ed 	bl	8000c70 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001896:	697b      	ldr	r3, [r7, #20]
 8001898:	3301      	adds	r3, #1
 800189a:	617b      	str	r3, [r7, #20]
 800189c:	697a      	ldr	r2, [r7, #20]
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	429a      	cmp	r2, r3
 80018a2:	dbf1      	blt.n	8001888 <_write+0x12>
  }
  return len;
 80018a4:	687b      	ldr	r3, [r7, #4]
}
 80018a6:	4618      	mov	r0, r3
 80018a8:	3718      	adds	r7, #24
 80018aa:	46bd      	mov	sp, r7
 80018ac:	bd80      	pop	{r7, pc}

080018ae <_close>:

int _close(int file)
{
 80018ae:	b480      	push	{r7}
 80018b0:	b083      	sub	sp, #12
 80018b2:	af00      	add	r7, sp, #0
 80018b4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80018b6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80018ba:	4618      	mov	r0, r3
 80018bc:	370c      	adds	r7, #12
 80018be:	46bd      	mov	sp, r7
 80018c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018c4:	4770      	bx	lr

080018c6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80018c6:	b480      	push	{r7}
 80018c8:	b083      	sub	sp, #12
 80018ca:	af00      	add	r7, sp, #0
 80018cc:	6078      	str	r0, [r7, #4]
 80018ce:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80018d0:	683b      	ldr	r3, [r7, #0]
 80018d2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80018d6:	605a      	str	r2, [r3, #4]
  return 0;
 80018d8:	2300      	movs	r3, #0
}
 80018da:	4618      	mov	r0, r3
 80018dc:	370c      	adds	r7, #12
 80018de:	46bd      	mov	sp, r7
 80018e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018e4:	4770      	bx	lr

080018e6 <_isatty>:

int _isatty(int file)
{
 80018e6:	b480      	push	{r7}
 80018e8:	b083      	sub	sp, #12
 80018ea:	af00      	add	r7, sp, #0
 80018ec:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80018ee:	2301      	movs	r3, #1
}
 80018f0:	4618      	mov	r0, r3
 80018f2:	370c      	adds	r7, #12
 80018f4:	46bd      	mov	sp, r7
 80018f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018fa:	4770      	bx	lr

080018fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80018fc:	b480      	push	{r7}
 80018fe:	b085      	sub	sp, #20
 8001900:	af00      	add	r7, sp, #0
 8001902:	60f8      	str	r0, [r7, #12]
 8001904:	60b9      	str	r1, [r7, #8]
 8001906:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001908:	2300      	movs	r3, #0
}
 800190a:	4618      	mov	r0, r3
 800190c:	3714      	adds	r7, #20
 800190e:	46bd      	mov	sp, r7
 8001910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001914:	4770      	bx	lr
	...

08001918 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001918:	b580      	push	{r7, lr}
 800191a:	b086      	sub	sp, #24
 800191c:	af00      	add	r7, sp, #0
 800191e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001920:	4a14      	ldr	r2, [pc, #80]	; (8001974 <_sbrk+0x5c>)
 8001922:	4b15      	ldr	r3, [pc, #84]	; (8001978 <_sbrk+0x60>)
 8001924:	1ad3      	subs	r3, r2, r3
 8001926:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001928:	697b      	ldr	r3, [r7, #20]
 800192a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800192c:	4b13      	ldr	r3, [pc, #76]	; (800197c <_sbrk+0x64>)
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	2b00      	cmp	r3, #0
 8001932:	d102      	bne.n	800193a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001934:	4b11      	ldr	r3, [pc, #68]	; (800197c <_sbrk+0x64>)
 8001936:	4a12      	ldr	r2, [pc, #72]	; (8001980 <_sbrk+0x68>)
 8001938:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800193a:	4b10      	ldr	r3, [pc, #64]	; (800197c <_sbrk+0x64>)
 800193c:	681a      	ldr	r2, [r3, #0]
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	4413      	add	r3, r2
 8001942:	693a      	ldr	r2, [r7, #16]
 8001944:	429a      	cmp	r2, r3
 8001946:	d207      	bcs.n	8001958 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001948:	f000 fa60 	bl	8001e0c <__errno>
 800194c:	4603      	mov	r3, r0
 800194e:	220c      	movs	r2, #12
 8001950:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001952:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001956:	e009      	b.n	800196c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001958:	4b08      	ldr	r3, [pc, #32]	; (800197c <_sbrk+0x64>)
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800195e:	4b07      	ldr	r3, [pc, #28]	; (800197c <_sbrk+0x64>)
 8001960:	681a      	ldr	r2, [r3, #0]
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	4413      	add	r3, r2
 8001966:	4a05      	ldr	r2, [pc, #20]	; (800197c <_sbrk+0x64>)
 8001968:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800196a:	68fb      	ldr	r3, [r7, #12]
}
 800196c:	4618      	mov	r0, r3
 800196e:	3718      	adds	r7, #24
 8001970:	46bd      	mov	sp, r7
 8001972:	bd80      	pop	{r7, pc}
 8001974:	20020000 	.word	0x20020000
 8001978:	00000400 	.word	0x00000400
 800197c:	20000470 	.word	0x20000470
 8001980:	200005c8 	.word	0x200005c8

08001984 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001984:	b480      	push	{r7}
 8001986:	b083      	sub	sp, #12
 8001988:	af00      	add	r7, sp, #0
 800198a:	4603      	mov	r3, r0
 800198c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800198e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001992:	2b00      	cmp	r3, #0
 8001994:	db0b      	blt.n	80019ae <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001996:	79fb      	ldrb	r3, [r7, #7]
 8001998:	f003 021f 	and.w	r2, r3, #31
 800199c:	4907      	ldr	r1, [pc, #28]	; (80019bc <__NVIC_EnableIRQ+0x38>)
 800199e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019a2:	095b      	lsrs	r3, r3, #5
 80019a4:	2001      	movs	r0, #1
 80019a6:	fa00 f202 	lsl.w	r2, r0, r2
 80019aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80019ae:	bf00      	nop
 80019b0:	370c      	adds	r7, #12
 80019b2:	46bd      	mov	sp, r7
 80019b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b8:	4770      	bx	lr
 80019ba:	bf00      	nop
 80019bc:	e000e100 	.word	0xe000e100

080019c0 <tim3_1hz_init>:
#define TIM3EN				(1U<<1)
#define TIM4EN				(1U<<2)
#define DIER_UIE			(1U<<0)
#define CR1_CEN				(1U<<0)

void tim3_1hz_init(void){
 80019c0:	b580      	push	{r7, lr}
 80019c2:	af00      	add	r7, sp, #0
	/* Configure TIM3 interrupt at 1hz */

	/* Enable clock for timer 3 & DMA1*/
	RCC->APB1ENR |= TIM3EN;
 80019c4:	4b10      	ldr	r3, [pc, #64]	; (8001a08 <tim3_1hz_init+0x48>)
 80019c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019c8:	4a0f      	ldr	r2, [pc, #60]	; (8001a08 <tim3_1hz_init+0x48>)
 80019ca:	f043 0302 	orr.w	r3, r3, #2
 80019ce:	6413      	str	r3, [r2, #64]	; 0x40

	/*Timer configured to 1Hz*/
	TIM3->PSC = 1600 - 1;
 80019d0:	4b0e      	ldr	r3, [pc, #56]	; (8001a0c <tim3_1hz_init+0x4c>)
 80019d2:	f240 623f 	movw	r2, #1599	; 0x63f
 80019d6:	629a      	str	r2, [r3, #40]	; 0x28
	TIM3->ARR = 10000 - 1;
 80019d8:	4b0c      	ldr	r3, [pc, #48]	; (8001a0c <tim3_1hz_init+0x4c>)
 80019da:	f242 720f 	movw	r2, #9999	; 0x270f
 80019de:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM3->CNT = 0; //reset counter
 80019e0:	4b0a      	ldr	r3, [pc, #40]	; (8001a0c <tim3_1hz_init+0x4c>)
 80019e2:	2200      	movs	r2, #0
 80019e4:	625a      	str	r2, [r3, #36]	; 0x24

	/* Enable interrupt */
	TIM3->DIER |= DIER_UIE;
 80019e6:	4b09      	ldr	r3, [pc, #36]	; (8001a0c <tim3_1hz_init+0x4c>)
 80019e8:	68db      	ldr	r3, [r3, #12]
 80019ea:	4a08      	ldr	r2, [pc, #32]	; (8001a0c <tim3_1hz_init+0x4c>)
 80019ec:	f043 0301 	orr.w	r3, r3, #1
 80019f0:	60d3      	str	r3, [r2, #12]

	/* Enable in NVIC */
	NVIC_EnableIRQ(TIM3_IRQn);
 80019f2:	201d      	movs	r0, #29
 80019f4:	f7ff ffc6 	bl	8001984 <__NVIC_EnableIRQ>

	/* Start Clock */
	TIM3->CR1 |= CR1_CEN;
 80019f8:	4b04      	ldr	r3, [pc, #16]	; (8001a0c <tim3_1hz_init+0x4c>)
 80019fa:	681b      	ldr	r3, [r3, #0]
 80019fc:	4a03      	ldr	r2, [pc, #12]	; (8001a0c <tim3_1hz_init+0x4c>)
 80019fe:	f043 0301 	orr.w	r3, r3, #1
 8001a02:	6013      	str	r3, [r2, #0]
}
 8001a04:	bf00      	nop
 8001a06:	bd80      	pop	{r7, pc}
 8001a08:	40023800 	.word	0x40023800
 8001a0c:	40000400 	.word	0x40000400

08001a10 <tim4_init>:

void tim4_init(void){
 8001a10:	b480      	push	{r7}
 8001a12:	af00      	add	r7, sp, #0

	/* Configure timer to interrupt every 10 ms */
	/* Enable Clock Access */
	RCC->APB1ENR |= TIM4EN;
 8001a14:	4b0d      	ldr	r3, [pc, #52]	; (8001a4c <tim4_init+0x3c>)
 8001a16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a18:	4a0c      	ldr	r2, [pc, #48]	; (8001a4c <tim4_init+0x3c>)
 8001a1a:	f043 0304 	orr.w	r3, r3, #4
 8001a1e:	6413      	str	r3, [r2, #64]	; 0x40

	/* Timer configured to 2Hz */
	TIM4->PSC = 1600;
 8001a20:	4b0b      	ldr	r3, [pc, #44]	; (8001a50 <tim4_init+0x40>)
 8001a22:	f44f 62c8 	mov.w	r2, #1600	; 0x640
 8001a26:	629a      	str	r2, [r3, #40]	; 0x28
	TIM4->ARR = 5000;
 8001a28:	4b09      	ldr	r3, [pc, #36]	; (8001a50 <tim4_init+0x40>)
 8001a2a:	f241 3288 	movw	r2, #5000	; 0x1388
 8001a2e:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM4->CNT = 0;
 8001a30:	4b07      	ldr	r3, [pc, #28]	; (8001a50 <tim4_init+0x40>)
 8001a32:	2200      	movs	r2, #0
 8001a34:	625a      	str	r2, [r3, #36]	; 0x24


	TIM4->CR1 |= CR1_CEN;
 8001a36:	4b06      	ldr	r3, [pc, #24]	; (8001a50 <tim4_init+0x40>)
 8001a38:	681b      	ldr	r3, [r3, #0]
 8001a3a:	4a05      	ldr	r2, [pc, #20]	; (8001a50 <tim4_init+0x40>)
 8001a3c:	f043 0301 	orr.w	r3, r3, #1
 8001a40:	6013      	str	r3, [r2, #0]
}
 8001a42:	bf00      	nop
 8001a44:	46bd      	mov	sp, r7
 8001a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a4a:	4770      	bx	lr
 8001a4c:	40023800 	.word	0x40023800
 8001a50:	40000800 	.word	0x40000800

08001a54 <update_clock>:

/* Global Variables */
volatile int min = 0;
volatile int hr = 0;

void update_clock(){
 8001a54:	b580      	push	{r7, lr}
 8001a56:	af00      	add	r7, sp, #0
    //60 seconds passed
    min++;
 8001a58:	4b10      	ldr	r3, [pc, #64]	; (8001a9c <update_clock+0x48>)
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	3301      	adds	r3, #1
 8001a5e:	4a0f      	ldr	r2, [pc, #60]	; (8001a9c <update_clock+0x48>)
 8001a60:	6013      	str	r3, [r2, #0]
    if (min >= 60){
 8001a62:	4b0e      	ldr	r3, [pc, #56]	; (8001a9c <update_clock+0x48>)
 8001a64:	681b      	ldr	r3, [r3, #0]
 8001a66:	2b3b      	cmp	r3, #59	; 0x3b
 8001a68:	dd07      	ble.n	8001a7a <update_clock+0x26>
        min = 0;
 8001a6a:	4b0c      	ldr	r3, [pc, #48]	; (8001a9c <update_clock+0x48>)
 8001a6c:	2200      	movs	r2, #0
 8001a6e:	601a      	str	r2, [r3, #0]
        hr++;
 8001a70:	4b0b      	ldr	r3, [pc, #44]	; (8001aa0 <update_clock+0x4c>)
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	3301      	adds	r3, #1
 8001a76:	4a0a      	ldr	r2, [pc, #40]	; (8001aa0 <update_clock+0x4c>)
 8001a78:	6013      	str	r3, [r2, #0]
    }
    if (hr >= 24){
 8001a7a:	4b09      	ldr	r3, [pc, #36]	; (8001aa0 <update_clock+0x4c>)
 8001a7c:	681b      	ldr	r3, [r3, #0]
 8001a7e:	2b17      	cmp	r3, #23
 8001a80:	dd02      	ble.n	8001a88 <update_clock+0x34>
        hr = 0;
 8001a82:	4b07      	ldr	r3, [pc, #28]	; (8001aa0 <update_clock+0x4c>)
 8001a84:	2200      	movs	r2, #0
 8001a86:	601a      	str	r2, [r3, #0]
    }
    update_time(hr, min);
 8001a88:	4b05      	ldr	r3, [pc, #20]	; (8001aa0 <update_clock+0x4c>)
 8001a8a:	681b      	ldr	r3, [r3, #0]
 8001a8c:	4a03      	ldr	r2, [pc, #12]	; (8001a9c <update_clock+0x48>)
 8001a8e:	6812      	ldr	r2, [r2, #0]
 8001a90:	4611      	mov	r1, r2
 8001a92:	4618      	mov	r0, r3
 8001a94:	f000 f806 	bl	8001aa4 <update_time>
}
 8001a98:	bf00      	nop
 8001a9a:	bd80      	pop	{r7, pc}
 8001a9c:	20000474 	.word	0x20000474
 8001aa0:	20000478 	.word	0x20000478

08001aa4 <update_time>:

void update_time(int h, int m){
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	b082      	sub	sp, #8
 8001aa8:	af00      	add	r7, sp, #0
 8001aaa:	6078      	str	r0, [r7, #4]
 8001aac:	6039      	str	r1, [r7, #0]
    //call appropriate functions to 
    //draw time
    if (h >= 10){
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	2b09      	cmp	r3, #9
 8001ab2:	dd19      	ble.n	8001ae8 <update_time+0x44>
        draw_D1((int)h / 10);
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	4a23      	ldr	r2, [pc, #140]	; (8001b44 <update_time+0xa0>)
 8001ab8:	fb82 1203 	smull	r1, r2, r2, r3
 8001abc:	1092      	asrs	r2, r2, #2
 8001abe:	17db      	asrs	r3, r3, #31
 8001ac0:	1ad3      	subs	r3, r2, r3
 8001ac2:	4618      	mov	r0, r3
 8001ac4:	f7ff fa86 	bl	8000fd4 <draw_D1>
        draw_D2((int)h % 10);
 8001ac8:	687a      	ldr	r2, [r7, #4]
 8001aca:	4b1e      	ldr	r3, [pc, #120]	; (8001b44 <update_time+0xa0>)
 8001acc:	fb83 1302 	smull	r1, r3, r3, r2
 8001ad0:	1099      	asrs	r1, r3, #2
 8001ad2:	17d3      	asrs	r3, r2, #31
 8001ad4:	1ac9      	subs	r1, r1, r3
 8001ad6:	460b      	mov	r3, r1
 8001ad8:	009b      	lsls	r3, r3, #2
 8001ada:	440b      	add	r3, r1
 8001adc:	005b      	lsls	r3, r3, #1
 8001ade:	1ad1      	subs	r1, r2, r3
 8001ae0:	4608      	mov	r0, r1
 8001ae2:	f7ff fac5 	bl	8001070 <draw_D2>
 8001ae6:	e005      	b.n	8001af4 <update_time+0x50>
    }
    else{
        draw_D1(0);
 8001ae8:	2000      	movs	r0, #0
 8001aea:	f7ff fa73 	bl	8000fd4 <draw_D1>
        draw_D2(h);
 8001aee:	6878      	ldr	r0, [r7, #4]
 8001af0:	f7ff fabe 	bl	8001070 <draw_D2>
    }
    if (m >= 10){
 8001af4:	683b      	ldr	r3, [r7, #0]
 8001af6:	2b09      	cmp	r3, #9
 8001af8:	dd19      	ble.n	8001b2e <update_time+0x8a>
        draw_D3((int)m / 10);
 8001afa:	683b      	ldr	r3, [r7, #0]
 8001afc:	4a11      	ldr	r2, [pc, #68]	; (8001b44 <update_time+0xa0>)
 8001afe:	fb82 1203 	smull	r1, r2, r2, r3
 8001b02:	1092      	asrs	r2, r2, #2
 8001b04:	17db      	asrs	r3, r3, #31
 8001b06:	1ad3      	subs	r3, r2, r3
 8001b08:	4618      	mov	r0, r3
 8001b0a:	f7ff faff 	bl	800110c <draw_D3>
        draw_D4((int)m % 10);
 8001b0e:	683a      	ldr	r2, [r7, #0]
 8001b10:	4b0c      	ldr	r3, [pc, #48]	; (8001b44 <update_time+0xa0>)
 8001b12:	fb83 1302 	smull	r1, r3, r3, r2
 8001b16:	1099      	asrs	r1, r3, #2
 8001b18:	17d3      	asrs	r3, r2, #31
 8001b1a:	1ac9      	subs	r1, r1, r3
 8001b1c:	460b      	mov	r3, r1
 8001b1e:	009b      	lsls	r3, r3, #2
 8001b20:	440b      	add	r3, r1
 8001b22:	005b      	lsls	r3, r3, #1
 8001b24:	1ad1      	subs	r1, r2, r3
 8001b26:	4608      	mov	r0, r1
 8001b28:	f7ff fb3c 	bl	80011a4 <draw_D4>
    }
    else{
        draw_D3(0);
        draw_D4(m);
    }
}
 8001b2c:	e005      	b.n	8001b3a <update_time+0x96>
        draw_D3(0);
 8001b2e:	2000      	movs	r0, #0
 8001b30:	f7ff faec 	bl	800110c <draw_D3>
        draw_D4(m);
 8001b34:	6838      	ldr	r0, [r7, #0]
 8001b36:	f7ff fb35 	bl	80011a4 <draw_D4>
}
 8001b3a:	bf00      	nop
 8001b3c:	3708      	adds	r7, #8
 8001b3e:	46bd      	mov	sp, r7
 8001b40:	bd80      	pop	{r7, pc}
 8001b42:	bf00      	nop
 8001b44:	66666667 	.word	0x66666667

08001b48 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001b48:	480d      	ldr	r0, [pc, #52]	; (8001b80 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001b4a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/

  bl  SystemInit
 8001b4c:	f7ff fa30 	bl	8000fb0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001b50:	480c      	ldr	r0, [pc, #48]	; (8001b84 <LoopForever+0x6>)
  ldr r1, =_edata
 8001b52:	490d      	ldr	r1, [pc, #52]	; (8001b88 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001b54:	4a0d      	ldr	r2, [pc, #52]	; (8001b8c <LoopForever+0xe>)
  movs r3, #0
 8001b56:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001b58:	e002      	b.n	8001b60 <LoopCopyDataInit>

08001b5a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001b5a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001b5c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001b5e:	3304      	adds	r3, #4

08001b60 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001b60:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001b62:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001b64:	d3f9      	bcc.n	8001b5a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001b66:	4a0a      	ldr	r2, [pc, #40]	; (8001b90 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001b68:	4c0a      	ldr	r4, [pc, #40]	; (8001b94 <LoopForever+0x16>)
  movs r3, #0
 8001b6a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001b6c:	e001      	b.n	8001b72 <LoopFillZerobss>

08001b6e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001b6e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001b70:	3204      	adds	r2, #4

08001b72 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001b72:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001b74:	d3fb      	bcc.n	8001b6e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001b76:	f000 f94f 	bl	8001e18 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001b7a:	f7ff f9dd 	bl	8000f38 <main>

08001b7e <LoopForever>:

LoopForever:
  b LoopForever
 8001b7e:	e7fe      	b.n	8001b7e <LoopForever>
  ldr   r0, =_estack
 8001b80:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001b84:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001b88:	20000440 	.word	0x20000440
  ldr r2, =_sidata
 8001b8c:	080047b8 	.word	0x080047b8
  ldr r2, =_sbss
 8001b90:	20000440 	.word	0x20000440
  ldr r4, =_ebss
 8001b94:	200005c8 	.word	0x200005c8

08001b98 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001b98:	e7fe      	b.n	8001b98 <ADC_IRQHandler>
	...

08001b9c <std>:
 8001b9c:	2300      	movs	r3, #0
 8001b9e:	b510      	push	{r4, lr}
 8001ba0:	4604      	mov	r4, r0
 8001ba2:	e9c0 3300 	strd	r3, r3, [r0]
 8001ba6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001baa:	6083      	str	r3, [r0, #8]
 8001bac:	8181      	strh	r1, [r0, #12]
 8001bae:	6643      	str	r3, [r0, #100]	; 0x64
 8001bb0:	81c2      	strh	r2, [r0, #14]
 8001bb2:	6183      	str	r3, [r0, #24]
 8001bb4:	4619      	mov	r1, r3
 8001bb6:	2208      	movs	r2, #8
 8001bb8:	305c      	adds	r0, #92	; 0x5c
 8001bba:	f000 f91f 	bl	8001dfc <memset>
 8001bbe:	4b0d      	ldr	r3, [pc, #52]	; (8001bf4 <std+0x58>)
 8001bc0:	6263      	str	r3, [r4, #36]	; 0x24
 8001bc2:	4b0d      	ldr	r3, [pc, #52]	; (8001bf8 <std+0x5c>)
 8001bc4:	62a3      	str	r3, [r4, #40]	; 0x28
 8001bc6:	4b0d      	ldr	r3, [pc, #52]	; (8001bfc <std+0x60>)
 8001bc8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001bca:	4b0d      	ldr	r3, [pc, #52]	; (8001c00 <std+0x64>)
 8001bcc:	6323      	str	r3, [r4, #48]	; 0x30
 8001bce:	4b0d      	ldr	r3, [pc, #52]	; (8001c04 <std+0x68>)
 8001bd0:	6224      	str	r4, [r4, #32]
 8001bd2:	429c      	cmp	r4, r3
 8001bd4:	d006      	beq.n	8001be4 <std+0x48>
 8001bd6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8001bda:	4294      	cmp	r4, r2
 8001bdc:	d002      	beq.n	8001be4 <std+0x48>
 8001bde:	33d0      	adds	r3, #208	; 0xd0
 8001be0:	429c      	cmp	r4, r3
 8001be2:	d105      	bne.n	8001bf0 <std+0x54>
 8001be4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001be8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bec:	f000 b938 	b.w	8001e60 <__retarget_lock_init_recursive>
 8001bf0:	bd10      	pop	{r4, pc}
 8001bf2:	bf00      	nop
 8001bf4:	080026c1 	.word	0x080026c1
 8001bf8:	080026e3 	.word	0x080026e3
 8001bfc:	0800271b 	.word	0x0800271b
 8001c00:	0800273f 	.word	0x0800273f
 8001c04:	2000047c 	.word	0x2000047c

08001c08 <stdio_exit_handler>:
 8001c08:	4a02      	ldr	r2, [pc, #8]	; (8001c14 <stdio_exit_handler+0xc>)
 8001c0a:	4903      	ldr	r1, [pc, #12]	; (8001c18 <stdio_exit_handler+0x10>)
 8001c0c:	4803      	ldr	r0, [pc, #12]	; (8001c1c <stdio_exit_handler+0x14>)
 8001c0e:	f000 b869 	b.w	8001ce4 <_fwalk_sglue>
 8001c12:	bf00      	nop
 8001c14:	200003d4 	.word	0x200003d4
 8001c18:	08002659 	.word	0x08002659
 8001c1c:	200003e0 	.word	0x200003e0

08001c20 <cleanup_stdio>:
 8001c20:	6841      	ldr	r1, [r0, #4]
 8001c22:	4b0c      	ldr	r3, [pc, #48]	; (8001c54 <cleanup_stdio+0x34>)
 8001c24:	4299      	cmp	r1, r3
 8001c26:	b510      	push	{r4, lr}
 8001c28:	4604      	mov	r4, r0
 8001c2a:	d001      	beq.n	8001c30 <cleanup_stdio+0x10>
 8001c2c:	f000 fd14 	bl	8002658 <_fflush_r>
 8001c30:	68a1      	ldr	r1, [r4, #8]
 8001c32:	4b09      	ldr	r3, [pc, #36]	; (8001c58 <cleanup_stdio+0x38>)
 8001c34:	4299      	cmp	r1, r3
 8001c36:	d002      	beq.n	8001c3e <cleanup_stdio+0x1e>
 8001c38:	4620      	mov	r0, r4
 8001c3a:	f000 fd0d 	bl	8002658 <_fflush_r>
 8001c3e:	68e1      	ldr	r1, [r4, #12]
 8001c40:	4b06      	ldr	r3, [pc, #24]	; (8001c5c <cleanup_stdio+0x3c>)
 8001c42:	4299      	cmp	r1, r3
 8001c44:	d004      	beq.n	8001c50 <cleanup_stdio+0x30>
 8001c46:	4620      	mov	r0, r4
 8001c48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001c4c:	f000 bd04 	b.w	8002658 <_fflush_r>
 8001c50:	bd10      	pop	{r4, pc}
 8001c52:	bf00      	nop
 8001c54:	2000047c 	.word	0x2000047c
 8001c58:	200004e4 	.word	0x200004e4
 8001c5c:	2000054c 	.word	0x2000054c

08001c60 <global_stdio_init.part.0>:
 8001c60:	b510      	push	{r4, lr}
 8001c62:	4b0b      	ldr	r3, [pc, #44]	; (8001c90 <global_stdio_init.part.0+0x30>)
 8001c64:	4c0b      	ldr	r4, [pc, #44]	; (8001c94 <global_stdio_init.part.0+0x34>)
 8001c66:	4a0c      	ldr	r2, [pc, #48]	; (8001c98 <global_stdio_init.part.0+0x38>)
 8001c68:	601a      	str	r2, [r3, #0]
 8001c6a:	4620      	mov	r0, r4
 8001c6c:	2200      	movs	r2, #0
 8001c6e:	2104      	movs	r1, #4
 8001c70:	f7ff ff94 	bl	8001b9c <std>
 8001c74:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8001c78:	2201      	movs	r2, #1
 8001c7a:	2109      	movs	r1, #9
 8001c7c:	f7ff ff8e 	bl	8001b9c <std>
 8001c80:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001c84:	2202      	movs	r2, #2
 8001c86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001c8a:	2112      	movs	r1, #18
 8001c8c:	f7ff bf86 	b.w	8001b9c <std>
 8001c90:	200005b4 	.word	0x200005b4
 8001c94:	2000047c 	.word	0x2000047c
 8001c98:	08001c09 	.word	0x08001c09

08001c9c <__sfp_lock_acquire>:
 8001c9c:	4801      	ldr	r0, [pc, #4]	; (8001ca4 <__sfp_lock_acquire+0x8>)
 8001c9e:	f000 b8e0 	b.w	8001e62 <__retarget_lock_acquire_recursive>
 8001ca2:	bf00      	nop
 8001ca4:	200005b9 	.word	0x200005b9

08001ca8 <__sfp_lock_release>:
 8001ca8:	4801      	ldr	r0, [pc, #4]	; (8001cb0 <__sfp_lock_release+0x8>)
 8001caa:	f000 b8db 	b.w	8001e64 <__retarget_lock_release_recursive>
 8001cae:	bf00      	nop
 8001cb0:	200005b9 	.word	0x200005b9

08001cb4 <__sinit>:
 8001cb4:	b510      	push	{r4, lr}
 8001cb6:	4604      	mov	r4, r0
 8001cb8:	f7ff fff0 	bl	8001c9c <__sfp_lock_acquire>
 8001cbc:	6a23      	ldr	r3, [r4, #32]
 8001cbe:	b11b      	cbz	r3, 8001cc8 <__sinit+0x14>
 8001cc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001cc4:	f7ff bff0 	b.w	8001ca8 <__sfp_lock_release>
 8001cc8:	4b04      	ldr	r3, [pc, #16]	; (8001cdc <__sinit+0x28>)
 8001cca:	6223      	str	r3, [r4, #32]
 8001ccc:	4b04      	ldr	r3, [pc, #16]	; (8001ce0 <__sinit+0x2c>)
 8001cce:	681b      	ldr	r3, [r3, #0]
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d1f5      	bne.n	8001cc0 <__sinit+0xc>
 8001cd4:	f7ff ffc4 	bl	8001c60 <global_stdio_init.part.0>
 8001cd8:	e7f2      	b.n	8001cc0 <__sinit+0xc>
 8001cda:	bf00      	nop
 8001cdc:	08001c21 	.word	0x08001c21
 8001ce0:	200005b4 	.word	0x200005b4

08001ce4 <_fwalk_sglue>:
 8001ce4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001ce8:	4607      	mov	r7, r0
 8001cea:	4688      	mov	r8, r1
 8001cec:	4614      	mov	r4, r2
 8001cee:	2600      	movs	r6, #0
 8001cf0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001cf4:	f1b9 0901 	subs.w	r9, r9, #1
 8001cf8:	d505      	bpl.n	8001d06 <_fwalk_sglue+0x22>
 8001cfa:	6824      	ldr	r4, [r4, #0]
 8001cfc:	2c00      	cmp	r4, #0
 8001cfe:	d1f7      	bne.n	8001cf0 <_fwalk_sglue+0xc>
 8001d00:	4630      	mov	r0, r6
 8001d02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001d06:	89ab      	ldrh	r3, [r5, #12]
 8001d08:	2b01      	cmp	r3, #1
 8001d0a:	d907      	bls.n	8001d1c <_fwalk_sglue+0x38>
 8001d0c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001d10:	3301      	adds	r3, #1
 8001d12:	d003      	beq.n	8001d1c <_fwalk_sglue+0x38>
 8001d14:	4629      	mov	r1, r5
 8001d16:	4638      	mov	r0, r7
 8001d18:	47c0      	blx	r8
 8001d1a:	4306      	orrs	r6, r0
 8001d1c:	3568      	adds	r5, #104	; 0x68
 8001d1e:	e7e9      	b.n	8001cf4 <_fwalk_sglue+0x10>

08001d20 <iprintf>:
 8001d20:	b40f      	push	{r0, r1, r2, r3}
 8001d22:	b507      	push	{r0, r1, r2, lr}
 8001d24:	4906      	ldr	r1, [pc, #24]	; (8001d40 <iprintf+0x20>)
 8001d26:	ab04      	add	r3, sp, #16
 8001d28:	6808      	ldr	r0, [r1, #0]
 8001d2a:	f853 2b04 	ldr.w	r2, [r3], #4
 8001d2e:	6881      	ldr	r1, [r0, #8]
 8001d30:	9301      	str	r3, [sp, #4]
 8001d32:	f000 f8c1 	bl	8001eb8 <_vfiprintf_r>
 8001d36:	b003      	add	sp, #12
 8001d38:	f85d eb04 	ldr.w	lr, [sp], #4
 8001d3c:	b004      	add	sp, #16
 8001d3e:	4770      	bx	lr
 8001d40:	2000042c 	.word	0x2000042c

08001d44 <_puts_r>:
 8001d44:	6a03      	ldr	r3, [r0, #32]
 8001d46:	b570      	push	{r4, r5, r6, lr}
 8001d48:	6884      	ldr	r4, [r0, #8]
 8001d4a:	4605      	mov	r5, r0
 8001d4c:	460e      	mov	r6, r1
 8001d4e:	b90b      	cbnz	r3, 8001d54 <_puts_r+0x10>
 8001d50:	f7ff ffb0 	bl	8001cb4 <__sinit>
 8001d54:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001d56:	07db      	lsls	r3, r3, #31
 8001d58:	d405      	bmi.n	8001d66 <_puts_r+0x22>
 8001d5a:	89a3      	ldrh	r3, [r4, #12]
 8001d5c:	0598      	lsls	r0, r3, #22
 8001d5e:	d402      	bmi.n	8001d66 <_puts_r+0x22>
 8001d60:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001d62:	f000 f87e 	bl	8001e62 <__retarget_lock_acquire_recursive>
 8001d66:	89a3      	ldrh	r3, [r4, #12]
 8001d68:	0719      	lsls	r1, r3, #28
 8001d6a:	d513      	bpl.n	8001d94 <_puts_r+0x50>
 8001d6c:	6923      	ldr	r3, [r4, #16]
 8001d6e:	b18b      	cbz	r3, 8001d94 <_puts_r+0x50>
 8001d70:	3e01      	subs	r6, #1
 8001d72:	68a3      	ldr	r3, [r4, #8]
 8001d74:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001d78:	3b01      	subs	r3, #1
 8001d7a:	60a3      	str	r3, [r4, #8]
 8001d7c:	b9e9      	cbnz	r1, 8001dba <_puts_r+0x76>
 8001d7e:	2b00      	cmp	r3, #0
 8001d80:	da2e      	bge.n	8001de0 <_puts_r+0x9c>
 8001d82:	4622      	mov	r2, r4
 8001d84:	210a      	movs	r1, #10
 8001d86:	4628      	mov	r0, r5
 8001d88:	f000 fcdd 	bl	8002746 <__swbuf_r>
 8001d8c:	3001      	adds	r0, #1
 8001d8e:	d007      	beq.n	8001da0 <_puts_r+0x5c>
 8001d90:	250a      	movs	r5, #10
 8001d92:	e007      	b.n	8001da4 <_puts_r+0x60>
 8001d94:	4621      	mov	r1, r4
 8001d96:	4628      	mov	r0, r5
 8001d98:	f000 fd12 	bl	80027c0 <__swsetup_r>
 8001d9c:	2800      	cmp	r0, #0
 8001d9e:	d0e7      	beq.n	8001d70 <_puts_r+0x2c>
 8001da0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8001da4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001da6:	07da      	lsls	r2, r3, #31
 8001da8:	d405      	bmi.n	8001db6 <_puts_r+0x72>
 8001daa:	89a3      	ldrh	r3, [r4, #12]
 8001dac:	059b      	lsls	r3, r3, #22
 8001dae:	d402      	bmi.n	8001db6 <_puts_r+0x72>
 8001db0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001db2:	f000 f857 	bl	8001e64 <__retarget_lock_release_recursive>
 8001db6:	4628      	mov	r0, r5
 8001db8:	bd70      	pop	{r4, r5, r6, pc}
 8001dba:	2b00      	cmp	r3, #0
 8001dbc:	da04      	bge.n	8001dc8 <_puts_r+0x84>
 8001dbe:	69a2      	ldr	r2, [r4, #24]
 8001dc0:	429a      	cmp	r2, r3
 8001dc2:	dc06      	bgt.n	8001dd2 <_puts_r+0x8e>
 8001dc4:	290a      	cmp	r1, #10
 8001dc6:	d004      	beq.n	8001dd2 <_puts_r+0x8e>
 8001dc8:	6823      	ldr	r3, [r4, #0]
 8001dca:	1c5a      	adds	r2, r3, #1
 8001dcc:	6022      	str	r2, [r4, #0]
 8001dce:	7019      	strb	r1, [r3, #0]
 8001dd0:	e7cf      	b.n	8001d72 <_puts_r+0x2e>
 8001dd2:	4622      	mov	r2, r4
 8001dd4:	4628      	mov	r0, r5
 8001dd6:	f000 fcb6 	bl	8002746 <__swbuf_r>
 8001dda:	3001      	adds	r0, #1
 8001ddc:	d1c9      	bne.n	8001d72 <_puts_r+0x2e>
 8001dde:	e7df      	b.n	8001da0 <_puts_r+0x5c>
 8001de0:	6823      	ldr	r3, [r4, #0]
 8001de2:	250a      	movs	r5, #10
 8001de4:	1c5a      	adds	r2, r3, #1
 8001de6:	6022      	str	r2, [r4, #0]
 8001de8:	701d      	strb	r5, [r3, #0]
 8001dea:	e7db      	b.n	8001da4 <_puts_r+0x60>

08001dec <puts>:
 8001dec:	4b02      	ldr	r3, [pc, #8]	; (8001df8 <puts+0xc>)
 8001dee:	4601      	mov	r1, r0
 8001df0:	6818      	ldr	r0, [r3, #0]
 8001df2:	f7ff bfa7 	b.w	8001d44 <_puts_r>
 8001df6:	bf00      	nop
 8001df8:	2000042c 	.word	0x2000042c

08001dfc <memset>:
 8001dfc:	4402      	add	r2, r0
 8001dfe:	4603      	mov	r3, r0
 8001e00:	4293      	cmp	r3, r2
 8001e02:	d100      	bne.n	8001e06 <memset+0xa>
 8001e04:	4770      	bx	lr
 8001e06:	f803 1b01 	strb.w	r1, [r3], #1
 8001e0a:	e7f9      	b.n	8001e00 <memset+0x4>

08001e0c <__errno>:
 8001e0c:	4b01      	ldr	r3, [pc, #4]	; (8001e14 <__errno+0x8>)
 8001e0e:	6818      	ldr	r0, [r3, #0]
 8001e10:	4770      	bx	lr
 8001e12:	bf00      	nop
 8001e14:	2000042c 	.word	0x2000042c

08001e18 <__libc_init_array>:
 8001e18:	b570      	push	{r4, r5, r6, lr}
 8001e1a:	4d0d      	ldr	r5, [pc, #52]	; (8001e50 <__libc_init_array+0x38>)
 8001e1c:	4c0d      	ldr	r4, [pc, #52]	; (8001e54 <__libc_init_array+0x3c>)
 8001e1e:	1b64      	subs	r4, r4, r5
 8001e20:	10a4      	asrs	r4, r4, #2
 8001e22:	2600      	movs	r6, #0
 8001e24:	42a6      	cmp	r6, r4
 8001e26:	d109      	bne.n	8001e3c <__libc_init_array+0x24>
 8001e28:	4d0b      	ldr	r5, [pc, #44]	; (8001e58 <__libc_init_array+0x40>)
 8001e2a:	4c0c      	ldr	r4, [pc, #48]	; (8001e5c <__libc_init_array+0x44>)
 8001e2c:	f002 fc32 	bl	8004694 <_init>
 8001e30:	1b64      	subs	r4, r4, r5
 8001e32:	10a4      	asrs	r4, r4, #2
 8001e34:	2600      	movs	r6, #0
 8001e36:	42a6      	cmp	r6, r4
 8001e38:	d105      	bne.n	8001e46 <__libc_init_array+0x2e>
 8001e3a:	bd70      	pop	{r4, r5, r6, pc}
 8001e3c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001e40:	4798      	blx	r3
 8001e42:	3601      	adds	r6, #1
 8001e44:	e7ee      	b.n	8001e24 <__libc_init_array+0xc>
 8001e46:	f855 3b04 	ldr.w	r3, [r5], #4
 8001e4a:	4798      	blx	r3
 8001e4c:	3601      	adds	r6, #1
 8001e4e:	e7f2      	b.n	8001e36 <__libc_init_array+0x1e>
 8001e50:	080047b0 	.word	0x080047b0
 8001e54:	080047b0 	.word	0x080047b0
 8001e58:	080047b0 	.word	0x080047b0
 8001e5c:	080047b4 	.word	0x080047b4

08001e60 <__retarget_lock_init_recursive>:
 8001e60:	4770      	bx	lr

08001e62 <__retarget_lock_acquire_recursive>:
 8001e62:	4770      	bx	lr

08001e64 <__retarget_lock_release_recursive>:
 8001e64:	4770      	bx	lr

08001e66 <__sfputc_r>:
 8001e66:	6893      	ldr	r3, [r2, #8]
 8001e68:	3b01      	subs	r3, #1
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	b410      	push	{r4}
 8001e6e:	6093      	str	r3, [r2, #8]
 8001e70:	da08      	bge.n	8001e84 <__sfputc_r+0x1e>
 8001e72:	6994      	ldr	r4, [r2, #24]
 8001e74:	42a3      	cmp	r3, r4
 8001e76:	db01      	blt.n	8001e7c <__sfputc_r+0x16>
 8001e78:	290a      	cmp	r1, #10
 8001e7a:	d103      	bne.n	8001e84 <__sfputc_r+0x1e>
 8001e7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001e80:	f000 bc61 	b.w	8002746 <__swbuf_r>
 8001e84:	6813      	ldr	r3, [r2, #0]
 8001e86:	1c58      	adds	r0, r3, #1
 8001e88:	6010      	str	r0, [r2, #0]
 8001e8a:	7019      	strb	r1, [r3, #0]
 8001e8c:	4608      	mov	r0, r1
 8001e8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001e92:	4770      	bx	lr

08001e94 <__sfputs_r>:
 8001e94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e96:	4606      	mov	r6, r0
 8001e98:	460f      	mov	r7, r1
 8001e9a:	4614      	mov	r4, r2
 8001e9c:	18d5      	adds	r5, r2, r3
 8001e9e:	42ac      	cmp	r4, r5
 8001ea0:	d101      	bne.n	8001ea6 <__sfputs_r+0x12>
 8001ea2:	2000      	movs	r0, #0
 8001ea4:	e007      	b.n	8001eb6 <__sfputs_r+0x22>
 8001ea6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001eaa:	463a      	mov	r2, r7
 8001eac:	4630      	mov	r0, r6
 8001eae:	f7ff ffda 	bl	8001e66 <__sfputc_r>
 8001eb2:	1c43      	adds	r3, r0, #1
 8001eb4:	d1f3      	bne.n	8001e9e <__sfputs_r+0xa>
 8001eb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001eb8 <_vfiprintf_r>:
 8001eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001ebc:	460d      	mov	r5, r1
 8001ebe:	b09d      	sub	sp, #116	; 0x74
 8001ec0:	4614      	mov	r4, r2
 8001ec2:	4698      	mov	r8, r3
 8001ec4:	4606      	mov	r6, r0
 8001ec6:	b118      	cbz	r0, 8001ed0 <_vfiprintf_r+0x18>
 8001ec8:	6a03      	ldr	r3, [r0, #32]
 8001eca:	b90b      	cbnz	r3, 8001ed0 <_vfiprintf_r+0x18>
 8001ecc:	f7ff fef2 	bl	8001cb4 <__sinit>
 8001ed0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001ed2:	07d9      	lsls	r1, r3, #31
 8001ed4:	d405      	bmi.n	8001ee2 <_vfiprintf_r+0x2a>
 8001ed6:	89ab      	ldrh	r3, [r5, #12]
 8001ed8:	059a      	lsls	r2, r3, #22
 8001eda:	d402      	bmi.n	8001ee2 <_vfiprintf_r+0x2a>
 8001edc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001ede:	f7ff ffc0 	bl	8001e62 <__retarget_lock_acquire_recursive>
 8001ee2:	89ab      	ldrh	r3, [r5, #12]
 8001ee4:	071b      	lsls	r3, r3, #28
 8001ee6:	d501      	bpl.n	8001eec <_vfiprintf_r+0x34>
 8001ee8:	692b      	ldr	r3, [r5, #16]
 8001eea:	b99b      	cbnz	r3, 8001f14 <_vfiprintf_r+0x5c>
 8001eec:	4629      	mov	r1, r5
 8001eee:	4630      	mov	r0, r6
 8001ef0:	f000 fc66 	bl	80027c0 <__swsetup_r>
 8001ef4:	b170      	cbz	r0, 8001f14 <_vfiprintf_r+0x5c>
 8001ef6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001ef8:	07dc      	lsls	r4, r3, #31
 8001efa:	d504      	bpl.n	8001f06 <_vfiprintf_r+0x4e>
 8001efc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001f00:	b01d      	add	sp, #116	; 0x74
 8001f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f06:	89ab      	ldrh	r3, [r5, #12]
 8001f08:	0598      	lsls	r0, r3, #22
 8001f0a:	d4f7      	bmi.n	8001efc <_vfiprintf_r+0x44>
 8001f0c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001f0e:	f7ff ffa9 	bl	8001e64 <__retarget_lock_release_recursive>
 8001f12:	e7f3      	b.n	8001efc <_vfiprintf_r+0x44>
 8001f14:	2300      	movs	r3, #0
 8001f16:	9309      	str	r3, [sp, #36]	; 0x24
 8001f18:	2320      	movs	r3, #32
 8001f1a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001f1e:	f8cd 800c 	str.w	r8, [sp, #12]
 8001f22:	2330      	movs	r3, #48	; 0x30
 8001f24:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80020d8 <_vfiprintf_r+0x220>
 8001f28:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001f2c:	f04f 0901 	mov.w	r9, #1
 8001f30:	4623      	mov	r3, r4
 8001f32:	469a      	mov	sl, r3
 8001f34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001f38:	b10a      	cbz	r2, 8001f3e <_vfiprintf_r+0x86>
 8001f3a:	2a25      	cmp	r2, #37	; 0x25
 8001f3c:	d1f9      	bne.n	8001f32 <_vfiprintf_r+0x7a>
 8001f3e:	ebba 0b04 	subs.w	fp, sl, r4
 8001f42:	d00b      	beq.n	8001f5c <_vfiprintf_r+0xa4>
 8001f44:	465b      	mov	r3, fp
 8001f46:	4622      	mov	r2, r4
 8001f48:	4629      	mov	r1, r5
 8001f4a:	4630      	mov	r0, r6
 8001f4c:	f7ff ffa2 	bl	8001e94 <__sfputs_r>
 8001f50:	3001      	adds	r0, #1
 8001f52:	f000 80a9 	beq.w	80020a8 <_vfiprintf_r+0x1f0>
 8001f56:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001f58:	445a      	add	r2, fp
 8001f5a:	9209      	str	r2, [sp, #36]	; 0x24
 8001f5c:	f89a 3000 	ldrb.w	r3, [sl]
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	f000 80a1 	beq.w	80020a8 <_vfiprintf_r+0x1f0>
 8001f66:	2300      	movs	r3, #0
 8001f68:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001f6c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001f70:	f10a 0a01 	add.w	sl, sl, #1
 8001f74:	9304      	str	r3, [sp, #16]
 8001f76:	9307      	str	r3, [sp, #28]
 8001f78:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001f7c:	931a      	str	r3, [sp, #104]	; 0x68
 8001f7e:	4654      	mov	r4, sl
 8001f80:	2205      	movs	r2, #5
 8001f82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001f86:	4854      	ldr	r0, [pc, #336]	; (80020d8 <_vfiprintf_r+0x220>)
 8001f88:	f7fe f92a 	bl	80001e0 <memchr>
 8001f8c:	9a04      	ldr	r2, [sp, #16]
 8001f8e:	b9d8      	cbnz	r0, 8001fc8 <_vfiprintf_r+0x110>
 8001f90:	06d1      	lsls	r1, r2, #27
 8001f92:	bf44      	itt	mi
 8001f94:	2320      	movmi	r3, #32
 8001f96:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001f9a:	0713      	lsls	r3, r2, #28
 8001f9c:	bf44      	itt	mi
 8001f9e:	232b      	movmi	r3, #43	; 0x2b
 8001fa0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001fa4:	f89a 3000 	ldrb.w	r3, [sl]
 8001fa8:	2b2a      	cmp	r3, #42	; 0x2a
 8001faa:	d015      	beq.n	8001fd8 <_vfiprintf_r+0x120>
 8001fac:	9a07      	ldr	r2, [sp, #28]
 8001fae:	4654      	mov	r4, sl
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	f04f 0c0a 	mov.w	ip, #10
 8001fb6:	4621      	mov	r1, r4
 8001fb8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001fbc:	3b30      	subs	r3, #48	; 0x30
 8001fbe:	2b09      	cmp	r3, #9
 8001fc0:	d94d      	bls.n	800205e <_vfiprintf_r+0x1a6>
 8001fc2:	b1b0      	cbz	r0, 8001ff2 <_vfiprintf_r+0x13a>
 8001fc4:	9207      	str	r2, [sp, #28]
 8001fc6:	e014      	b.n	8001ff2 <_vfiprintf_r+0x13a>
 8001fc8:	eba0 0308 	sub.w	r3, r0, r8
 8001fcc:	fa09 f303 	lsl.w	r3, r9, r3
 8001fd0:	4313      	orrs	r3, r2
 8001fd2:	9304      	str	r3, [sp, #16]
 8001fd4:	46a2      	mov	sl, r4
 8001fd6:	e7d2      	b.n	8001f7e <_vfiprintf_r+0xc6>
 8001fd8:	9b03      	ldr	r3, [sp, #12]
 8001fda:	1d19      	adds	r1, r3, #4
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	9103      	str	r1, [sp, #12]
 8001fe0:	2b00      	cmp	r3, #0
 8001fe2:	bfbb      	ittet	lt
 8001fe4:	425b      	neglt	r3, r3
 8001fe6:	f042 0202 	orrlt.w	r2, r2, #2
 8001fea:	9307      	strge	r3, [sp, #28]
 8001fec:	9307      	strlt	r3, [sp, #28]
 8001fee:	bfb8      	it	lt
 8001ff0:	9204      	strlt	r2, [sp, #16]
 8001ff2:	7823      	ldrb	r3, [r4, #0]
 8001ff4:	2b2e      	cmp	r3, #46	; 0x2e
 8001ff6:	d10c      	bne.n	8002012 <_vfiprintf_r+0x15a>
 8001ff8:	7863      	ldrb	r3, [r4, #1]
 8001ffa:	2b2a      	cmp	r3, #42	; 0x2a
 8001ffc:	d134      	bne.n	8002068 <_vfiprintf_r+0x1b0>
 8001ffe:	9b03      	ldr	r3, [sp, #12]
 8002000:	1d1a      	adds	r2, r3, #4
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	9203      	str	r2, [sp, #12]
 8002006:	2b00      	cmp	r3, #0
 8002008:	bfb8      	it	lt
 800200a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800200e:	3402      	adds	r4, #2
 8002010:	9305      	str	r3, [sp, #20]
 8002012:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 80020e8 <_vfiprintf_r+0x230>
 8002016:	7821      	ldrb	r1, [r4, #0]
 8002018:	2203      	movs	r2, #3
 800201a:	4650      	mov	r0, sl
 800201c:	f7fe f8e0 	bl	80001e0 <memchr>
 8002020:	b138      	cbz	r0, 8002032 <_vfiprintf_r+0x17a>
 8002022:	9b04      	ldr	r3, [sp, #16]
 8002024:	eba0 000a 	sub.w	r0, r0, sl
 8002028:	2240      	movs	r2, #64	; 0x40
 800202a:	4082      	lsls	r2, r0
 800202c:	4313      	orrs	r3, r2
 800202e:	3401      	adds	r4, #1
 8002030:	9304      	str	r3, [sp, #16]
 8002032:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002036:	4829      	ldr	r0, [pc, #164]	; (80020dc <_vfiprintf_r+0x224>)
 8002038:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800203c:	2206      	movs	r2, #6
 800203e:	f7fe f8cf 	bl	80001e0 <memchr>
 8002042:	2800      	cmp	r0, #0
 8002044:	d03f      	beq.n	80020c6 <_vfiprintf_r+0x20e>
 8002046:	4b26      	ldr	r3, [pc, #152]	; (80020e0 <_vfiprintf_r+0x228>)
 8002048:	bb1b      	cbnz	r3, 8002092 <_vfiprintf_r+0x1da>
 800204a:	9b03      	ldr	r3, [sp, #12]
 800204c:	3307      	adds	r3, #7
 800204e:	f023 0307 	bic.w	r3, r3, #7
 8002052:	3308      	adds	r3, #8
 8002054:	9303      	str	r3, [sp, #12]
 8002056:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002058:	443b      	add	r3, r7
 800205a:	9309      	str	r3, [sp, #36]	; 0x24
 800205c:	e768      	b.n	8001f30 <_vfiprintf_r+0x78>
 800205e:	fb0c 3202 	mla	r2, ip, r2, r3
 8002062:	460c      	mov	r4, r1
 8002064:	2001      	movs	r0, #1
 8002066:	e7a6      	b.n	8001fb6 <_vfiprintf_r+0xfe>
 8002068:	2300      	movs	r3, #0
 800206a:	3401      	adds	r4, #1
 800206c:	9305      	str	r3, [sp, #20]
 800206e:	4619      	mov	r1, r3
 8002070:	f04f 0c0a 	mov.w	ip, #10
 8002074:	4620      	mov	r0, r4
 8002076:	f810 2b01 	ldrb.w	r2, [r0], #1
 800207a:	3a30      	subs	r2, #48	; 0x30
 800207c:	2a09      	cmp	r2, #9
 800207e:	d903      	bls.n	8002088 <_vfiprintf_r+0x1d0>
 8002080:	2b00      	cmp	r3, #0
 8002082:	d0c6      	beq.n	8002012 <_vfiprintf_r+0x15a>
 8002084:	9105      	str	r1, [sp, #20]
 8002086:	e7c4      	b.n	8002012 <_vfiprintf_r+0x15a>
 8002088:	fb0c 2101 	mla	r1, ip, r1, r2
 800208c:	4604      	mov	r4, r0
 800208e:	2301      	movs	r3, #1
 8002090:	e7f0      	b.n	8002074 <_vfiprintf_r+0x1bc>
 8002092:	ab03      	add	r3, sp, #12
 8002094:	9300      	str	r3, [sp, #0]
 8002096:	462a      	mov	r2, r5
 8002098:	4b12      	ldr	r3, [pc, #72]	; (80020e4 <_vfiprintf_r+0x22c>)
 800209a:	a904      	add	r1, sp, #16
 800209c:	4630      	mov	r0, r6
 800209e:	f3af 8000 	nop.w
 80020a2:	4607      	mov	r7, r0
 80020a4:	1c78      	adds	r0, r7, #1
 80020a6:	d1d6      	bne.n	8002056 <_vfiprintf_r+0x19e>
 80020a8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80020aa:	07d9      	lsls	r1, r3, #31
 80020ac:	d405      	bmi.n	80020ba <_vfiprintf_r+0x202>
 80020ae:	89ab      	ldrh	r3, [r5, #12]
 80020b0:	059a      	lsls	r2, r3, #22
 80020b2:	d402      	bmi.n	80020ba <_vfiprintf_r+0x202>
 80020b4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80020b6:	f7ff fed5 	bl	8001e64 <__retarget_lock_release_recursive>
 80020ba:	89ab      	ldrh	r3, [r5, #12]
 80020bc:	065b      	lsls	r3, r3, #25
 80020be:	f53f af1d 	bmi.w	8001efc <_vfiprintf_r+0x44>
 80020c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80020c4:	e71c      	b.n	8001f00 <_vfiprintf_r+0x48>
 80020c6:	ab03      	add	r3, sp, #12
 80020c8:	9300      	str	r3, [sp, #0]
 80020ca:	462a      	mov	r2, r5
 80020cc:	4b05      	ldr	r3, [pc, #20]	; (80020e4 <_vfiprintf_r+0x22c>)
 80020ce:	a904      	add	r1, sp, #16
 80020d0:	4630      	mov	r0, r6
 80020d2:	f000 f919 	bl	8002308 <_printf_i>
 80020d6:	e7e4      	b.n	80020a2 <_vfiprintf_r+0x1ea>
 80020d8:	08004706 	.word	0x08004706
 80020dc:	08004710 	.word	0x08004710
 80020e0:	00000000 	.word	0x00000000
 80020e4:	08001e95 	.word	0x08001e95
 80020e8:	0800470c 	.word	0x0800470c

080020ec <sbrk_aligned>:
 80020ec:	b570      	push	{r4, r5, r6, lr}
 80020ee:	4e0e      	ldr	r6, [pc, #56]	; (8002128 <sbrk_aligned+0x3c>)
 80020f0:	460c      	mov	r4, r1
 80020f2:	6831      	ldr	r1, [r6, #0]
 80020f4:	4605      	mov	r5, r0
 80020f6:	b911      	cbnz	r1, 80020fe <sbrk_aligned+0x12>
 80020f8:	f000 fc72 	bl	80029e0 <_sbrk_r>
 80020fc:	6030      	str	r0, [r6, #0]
 80020fe:	4621      	mov	r1, r4
 8002100:	4628      	mov	r0, r5
 8002102:	f000 fc6d 	bl	80029e0 <_sbrk_r>
 8002106:	1c43      	adds	r3, r0, #1
 8002108:	d00a      	beq.n	8002120 <sbrk_aligned+0x34>
 800210a:	1cc4      	adds	r4, r0, #3
 800210c:	f024 0403 	bic.w	r4, r4, #3
 8002110:	42a0      	cmp	r0, r4
 8002112:	d007      	beq.n	8002124 <sbrk_aligned+0x38>
 8002114:	1a21      	subs	r1, r4, r0
 8002116:	4628      	mov	r0, r5
 8002118:	f000 fc62 	bl	80029e0 <_sbrk_r>
 800211c:	3001      	adds	r0, #1
 800211e:	d101      	bne.n	8002124 <sbrk_aligned+0x38>
 8002120:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8002124:	4620      	mov	r0, r4
 8002126:	bd70      	pop	{r4, r5, r6, pc}
 8002128:	200005c0 	.word	0x200005c0

0800212c <_malloc_r>:
 800212c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002130:	1ccd      	adds	r5, r1, #3
 8002132:	f025 0503 	bic.w	r5, r5, #3
 8002136:	3508      	adds	r5, #8
 8002138:	2d0c      	cmp	r5, #12
 800213a:	bf38      	it	cc
 800213c:	250c      	movcc	r5, #12
 800213e:	2d00      	cmp	r5, #0
 8002140:	4607      	mov	r7, r0
 8002142:	db01      	blt.n	8002148 <_malloc_r+0x1c>
 8002144:	42a9      	cmp	r1, r5
 8002146:	d905      	bls.n	8002154 <_malloc_r+0x28>
 8002148:	230c      	movs	r3, #12
 800214a:	603b      	str	r3, [r7, #0]
 800214c:	2600      	movs	r6, #0
 800214e:	4630      	mov	r0, r6
 8002150:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002154:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8002228 <_malloc_r+0xfc>
 8002158:	f000 faa6 	bl	80026a8 <__malloc_lock>
 800215c:	f8d8 3000 	ldr.w	r3, [r8]
 8002160:	461c      	mov	r4, r3
 8002162:	bb5c      	cbnz	r4, 80021bc <_malloc_r+0x90>
 8002164:	4629      	mov	r1, r5
 8002166:	4638      	mov	r0, r7
 8002168:	f7ff ffc0 	bl	80020ec <sbrk_aligned>
 800216c:	1c43      	adds	r3, r0, #1
 800216e:	4604      	mov	r4, r0
 8002170:	d155      	bne.n	800221e <_malloc_r+0xf2>
 8002172:	f8d8 4000 	ldr.w	r4, [r8]
 8002176:	4626      	mov	r6, r4
 8002178:	2e00      	cmp	r6, #0
 800217a:	d145      	bne.n	8002208 <_malloc_r+0xdc>
 800217c:	2c00      	cmp	r4, #0
 800217e:	d048      	beq.n	8002212 <_malloc_r+0xe6>
 8002180:	6823      	ldr	r3, [r4, #0]
 8002182:	4631      	mov	r1, r6
 8002184:	4638      	mov	r0, r7
 8002186:	eb04 0903 	add.w	r9, r4, r3
 800218a:	f000 fc29 	bl	80029e0 <_sbrk_r>
 800218e:	4581      	cmp	r9, r0
 8002190:	d13f      	bne.n	8002212 <_malloc_r+0xe6>
 8002192:	6821      	ldr	r1, [r4, #0]
 8002194:	1a6d      	subs	r5, r5, r1
 8002196:	4629      	mov	r1, r5
 8002198:	4638      	mov	r0, r7
 800219a:	f7ff ffa7 	bl	80020ec <sbrk_aligned>
 800219e:	3001      	adds	r0, #1
 80021a0:	d037      	beq.n	8002212 <_malloc_r+0xe6>
 80021a2:	6823      	ldr	r3, [r4, #0]
 80021a4:	442b      	add	r3, r5
 80021a6:	6023      	str	r3, [r4, #0]
 80021a8:	f8d8 3000 	ldr.w	r3, [r8]
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d038      	beq.n	8002222 <_malloc_r+0xf6>
 80021b0:	685a      	ldr	r2, [r3, #4]
 80021b2:	42a2      	cmp	r2, r4
 80021b4:	d12b      	bne.n	800220e <_malloc_r+0xe2>
 80021b6:	2200      	movs	r2, #0
 80021b8:	605a      	str	r2, [r3, #4]
 80021ba:	e00f      	b.n	80021dc <_malloc_r+0xb0>
 80021bc:	6822      	ldr	r2, [r4, #0]
 80021be:	1b52      	subs	r2, r2, r5
 80021c0:	d41f      	bmi.n	8002202 <_malloc_r+0xd6>
 80021c2:	2a0b      	cmp	r2, #11
 80021c4:	d917      	bls.n	80021f6 <_malloc_r+0xca>
 80021c6:	1961      	adds	r1, r4, r5
 80021c8:	42a3      	cmp	r3, r4
 80021ca:	6025      	str	r5, [r4, #0]
 80021cc:	bf18      	it	ne
 80021ce:	6059      	strne	r1, [r3, #4]
 80021d0:	6863      	ldr	r3, [r4, #4]
 80021d2:	bf08      	it	eq
 80021d4:	f8c8 1000 	streq.w	r1, [r8]
 80021d8:	5162      	str	r2, [r4, r5]
 80021da:	604b      	str	r3, [r1, #4]
 80021dc:	4638      	mov	r0, r7
 80021de:	f104 060b 	add.w	r6, r4, #11
 80021e2:	f000 fa67 	bl	80026b4 <__malloc_unlock>
 80021e6:	f026 0607 	bic.w	r6, r6, #7
 80021ea:	1d23      	adds	r3, r4, #4
 80021ec:	1af2      	subs	r2, r6, r3
 80021ee:	d0ae      	beq.n	800214e <_malloc_r+0x22>
 80021f0:	1b9b      	subs	r3, r3, r6
 80021f2:	50a3      	str	r3, [r4, r2]
 80021f4:	e7ab      	b.n	800214e <_malloc_r+0x22>
 80021f6:	42a3      	cmp	r3, r4
 80021f8:	6862      	ldr	r2, [r4, #4]
 80021fa:	d1dd      	bne.n	80021b8 <_malloc_r+0x8c>
 80021fc:	f8c8 2000 	str.w	r2, [r8]
 8002200:	e7ec      	b.n	80021dc <_malloc_r+0xb0>
 8002202:	4623      	mov	r3, r4
 8002204:	6864      	ldr	r4, [r4, #4]
 8002206:	e7ac      	b.n	8002162 <_malloc_r+0x36>
 8002208:	4634      	mov	r4, r6
 800220a:	6876      	ldr	r6, [r6, #4]
 800220c:	e7b4      	b.n	8002178 <_malloc_r+0x4c>
 800220e:	4613      	mov	r3, r2
 8002210:	e7cc      	b.n	80021ac <_malloc_r+0x80>
 8002212:	230c      	movs	r3, #12
 8002214:	603b      	str	r3, [r7, #0]
 8002216:	4638      	mov	r0, r7
 8002218:	f000 fa4c 	bl	80026b4 <__malloc_unlock>
 800221c:	e797      	b.n	800214e <_malloc_r+0x22>
 800221e:	6025      	str	r5, [r4, #0]
 8002220:	e7dc      	b.n	80021dc <_malloc_r+0xb0>
 8002222:	605b      	str	r3, [r3, #4]
 8002224:	deff      	udf	#255	; 0xff
 8002226:	bf00      	nop
 8002228:	200005bc 	.word	0x200005bc

0800222c <_printf_common>:
 800222c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002230:	4616      	mov	r6, r2
 8002232:	4699      	mov	r9, r3
 8002234:	688a      	ldr	r2, [r1, #8]
 8002236:	690b      	ldr	r3, [r1, #16]
 8002238:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800223c:	4293      	cmp	r3, r2
 800223e:	bfb8      	it	lt
 8002240:	4613      	movlt	r3, r2
 8002242:	6033      	str	r3, [r6, #0]
 8002244:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002248:	4607      	mov	r7, r0
 800224a:	460c      	mov	r4, r1
 800224c:	b10a      	cbz	r2, 8002252 <_printf_common+0x26>
 800224e:	3301      	adds	r3, #1
 8002250:	6033      	str	r3, [r6, #0]
 8002252:	6823      	ldr	r3, [r4, #0]
 8002254:	0699      	lsls	r1, r3, #26
 8002256:	bf42      	ittt	mi
 8002258:	6833      	ldrmi	r3, [r6, #0]
 800225a:	3302      	addmi	r3, #2
 800225c:	6033      	strmi	r3, [r6, #0]
 800225e:	6825      	ldr	r5, [r4, #0]
 8002260:	f015 0506 	ands.w	r5, r5, #6
 8002264:	d106      	bne.n	8002274 <_printf_common+0x48>
 8002266:	f104 0a19 	add.w	sl, r4, #25
 800226a:	68e3      	ldr	r3, [r4, #12]
 800226c:	6832      	ldr	r2, [r6, #0]
 800226e:	1a9b      	subs	r3, r3, r2
 8002270:	42ab      	cmp	r3, r5
 8002272:	dc26      	bgt.n	80022c2 <_printf_common+0x96>
 8002274:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002278:	1e13      	subs	r3, r2, #0
 800227a:	6822      	ldr	r2, [r4, #0]
 800227c:	bf18      	it	ne
 800227e:	2301      	movne	r3, #1
 8002280:	0692      	lsls	r2, r2, #26
 8002282:	d42b      	bmi.n	80022dc <_printf_common+0xb0>
 8002284:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002288:	4649      	mov	r1, r9
 800228a:	4638      	mov	r0, r7
 800228c:	47c0      	blx	r8
 800228e:	3001      	adds	r0, #1
 8002290:	d01e      	beq.n	80022d0 <_printf_common+0xa4>
 8002292:	6823      	ldr	r3, [r4, #0]
 8002294:	6922      	ldr	r2, [r4, #16]
 8002296:	f003 0306 	and.w	r3, r3, #6
 800229a:	2b04      	cmp	r3, #4
 800229c:	bf02      	ittt	eq
 800229e:	68e5      	ldreq	r5, [r4, #12]
 80022a0:	6833      	ldreq	r3, [r6, #0]
 80022a2:	1aed      	subeq	r5, r5, r3
 80022a4:	68a3      	ldr	r3, [r4, #8]
 80022a6:	bf0c      	ite	eq
 80022a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80022ac:	2500      	movne	r5, #0
 80022ae:	4293      	cmp	r3, r2
 80022b0:	bfc4      	itt	gt
 80022b2:	1a9b      	subgt	r3, r3, r2
 80022b4:	18ed      	addgt	r5, r5, r3
 80022b6:	2600      	movs	r6, #0
 80022b8:	341a      	adds	r4, #26
 80022ba:	42b5      	cmp	r5, r6
 80022bc:	d11a      	bne.n	80022f4 <_printf_common+0xc8>
 80022be:	2000      	movs	r0, #0
 80022c0:	e008      	b.n	80022d4 <_printf_common+0xa8>
 80022c2:	2301      	movs	r3, #1
 80022c4:	4652      	mov	r2, sl
 80022c6:	4649      	mov	r1, r9
 80022c8:	4638      	mov	r0, r7
 80022ca:	47c0      	blx	r8
 80022cc:	3001      	adds	r0, #1
 80022ce:	d103      	bne.n	80022d8 <_printf_common+0xac>
 80022d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80022d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80022d8:	3501      	adds	r5, #1
 80022da:	e7c6      	b.n	800226a <_printf_common+0x3e>
 80022dc:	18e1      	adds	r1, r4, r3
 80022de:	1c5a      	adds	r2, r3, #1
 80022e0:	2030      	movs	r0, #48	; 0x30
 80022e2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80022e6:	4422      	add	r2, r4
 80022e8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80022ec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80022f0:	3302      	adds	r3, #2
 80022f2:	e7c7      	b.n	8002284 <_printf_common+0x58>
 80022f4:	2301      	movs	r3, #1
 80022f6:	4622      	mov	r2, r4
 80022f8:	4649      	mov	r1, r9
 80022fa:	4638      	mov	r0, r7
 80022fc:	47c0      	blx	r8
 80022fe:	3001      	adds	r0, #1
 8002300:	d0e6      	beq.n	80022d0 <_printf_common+0xa4>
 8002302:	3601      	adds	r6, #1
 8002304:	e7d9      	b.n	80022ba <_printf_common+0x8e>
	...

08002308 <_printf_i>:
 8002308:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800230c:	7e0f      	ldrb	r7, [r1, #24]
 800230e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002310:	2f78      	cmp	r7, #120	; 0x78
 8002312:	4691      	mov	r9, r2
 8002314:	4680      	mov	r8, r0
 8002316:	460c      	mov	r4, r1
 8002318:	469a      	mov	sl, r3
 800231a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800231e:	d807      	bhi.n	8002330 <_printf_i+0x28>
 8002320:	2f62      	cmp	r7, #98	; 0x62
 8002322:	d80a      	bhi.n	800233a <_printf_i+0x32>
 8002324:	2f00      	cmp	r7, #0
 8002326:	f000 80d4 	beq.w	80024d2 <_printf_i+0x1ca>
 800232a:	2f58      	cmp	r7, #88	; 0x58
 800232c:	f000 80c0 	beq.w	80024b0 <_printf_i+0x1a8>
 8002330:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002334:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002338:	e03a      	b.n	80023b0 <_printf_i+0xa8>
 800233a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800233e:	2b15      	cmp	r3, #21
 8002340:	d8f6      	bhi.n	8002330 <_printf_i+0x28>
 8002342:	a101      	add	r1, pc, #4	; (adr r1, 8002348 <_printf_i+0x40>)
 8002344:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002348:	080023a1 	.word	0x080023a1
 800234c:	080023b5 	.word	0x080023b5
 8002350:	08002331 	.word	0x08002331
 8002354:	08002331 	.word	0x08002331
 8002358:	08002331 	.word	0x08002331
 800235c:	08002331 	.word	0x08002331
 8002360:	080023b5 	.word	0x080023b5
 8002364:	08002331 	.word	0x08002331
 8002368:	08002331 	.word	0x08002331
 800236c:	08002331 	.word	0x08002331
 8002370:	08002331 	.word	0x08002331
 8002374:	080024b9 	.word	0x080024b9
 8002378:	080023e1 	.word	0x080023e1
 800237c:	08002473 	.word	0x08002473
 8002380:	08002331 	.word	0x08002331
 8002384:	08002331 	.word	0x08002331
 8002388:	080024db 	.word	0x080024db
 800238c:	08002331 	.word	0x08002331
 8002390:	080023e1 	.word	0x080023e1
 8002394:	08002331 	.word	0x08002331
 8002398:	08002331 	.word	0x08002331
 800239c:	0800247b 	.word	0x0800247b
 80023a0:	682b      	ldr	r3, [r5, #0]
 80023a2:	1d1a      	adds	r2, r3, #4
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	602a      	str	r2, [r5, #0]
 80023a8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80023ac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80023b0:	2301      	movs	r3, #1
 80023b2:	e09f      	b.n	80024f4 <_printf_i+0x1ec>
 80023b4:	6820      	ldr	r0, [r4, #0]
 80023b6:	682b      	ldr	r3, [r5, #0]
 80023b8:	0607      	lsls	r7, r0, #24
 80023ba:	f103 0104 	add.w	r1, r3, #4
 80023be:	6029      	str	r1, [r5, #0]
 80023c0:	d501      	bpl.n	80023c6 <_printf_i+0xbe>
 80023c2:	681e      	ldr	r6, [r3, #0]
 80023c4:	e003      	b.n	80023ce <_printf_i+0xc6>
 80023c6:	0646      	lsls	r6, r0, #25
 80023c8:	d5fb      	bpl.n	80023c2 <_printf_i+0xba>
 80023ca:	f9b3 6000 	ldrsh.w	r6, [r3]
 80023ce:	2e00      	cmp	r6, #0
 80023d0:	da03      	bge.n	80023da <_printf_i+0xd2>
 80023d2:	232d      	movs	r3, #45	; 0x2d
 80023d4:	4276      	negs	r6, r6
 80023d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80023da:	485a      	ldr	r0, [pc, #360]	; (8002544 <_printf_i+0x23c>)
 80023dc:	230a      	movs	r3, #10
 80023de:	e012      	b.n	8002406 <_printf_i+0xfe>
 80023e0:	682b      	ldr	r3, [r5, #0]
 80023e2:	6820      	ldr	r0, [r4, #0]
 80023e4:	1d19      	adds	r1, r3, #4
 80023e6:	6029      	str	r1, [r5, #0]
 80023e8:	0605      	lsls	r5, r0, #24
 80023ea:	d501      	bpl.n	80023f0 <_printf_i+0xe8>
 80023ec:	681e      	ldr	r6, [r3, #0]
 80023ee:	e002      	b.n	80023f6 <_printf_i+0xee>
 80023f0:	0641      	lsls	r1, r0, #25
 80023f2:	d5fb      	bpl.n	80023ec <_printf_i+0xe4>
 80023f4:	881e      	ldrh	r6, [r3, #0]
 80023f6:	4853      	ldr	r0, [pc, #332]	; (8002544 <_printf_i+0x23c>)
 80023f8:	2f6f      	cmp	r7, #111	; 0x6f
 80023fa:	bf0c      	ite	eq
 80023fc:	2308      	moveq	r3, #8
 80023fe:	230a      	movne	r3, #10
 8002400:	2100      	movs	r1, #0
 8002402:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002406:	6865      	ldr	r5, [r4, #4]
 8002408:	60a5      	str	r5, [r4, #8]
 800240a:	2d00      	cmp	r5, #0
 800240c:	bfa2      	ittt	ge
 800240e:	6821      	ldrge	r1, [r4, #0]
 8002410:	f021 0104 	bicge.w	r1, r1, #4
 8002414:	6021      	strge	r1, [r4, #0]
 8002416:	b90e      	cbnz	r6, 800241c <_printf_i+0x114>
 8002418:	2d00      	cmp	r5, #0
 800241a:	d04b      	beq.n	80024b4 <_printf_i+0x1ac>
 800241c:	4615      	mov	r5, r2
 800241e:	fbb6 f1f3 	udiv	r1, r6, r3
 8002422:	fb03 6711 	mls	r7, r3, r1, r6
 8002426:	5dc7      	ldrb	r7, [r0, r7]
 8002428:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800242c:	4637      	mov	r7, r6
 800242e:	42bb      	cmp	r3, r7
 8002430:	460e      	mov	r6, r1
 8002432:	d9f4      	bls.n	800241e <_printf_i+0x116>
 8002434:	2b08      	cmp	r3, #8
 8002436:	d10b      	bne.n	8002450 <_printf_i+0x148>
 8002438:	6823      	ldr	r3, [r4, #0]
 800243a:	07de      	lsls	r6, r3, #31
 800243c:	d508      	bpl.n	8002450 <_printf_i+0x148>
 800243e:	6923      	ldr	r3, [r4, #16]
 8002440:	6861      	ldr	r1, [r4, #4]
 8002442:	4299      	cmp	r1, r3
 8002444:	bfde      	ittt	le
 8002446:	2330      	movle	r3, #48	; 0x30
 8002448:	f805 3c01 	strble.w	r3, [r5, #-1]
 800244c:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8002450:	1b52      	subs	r2, r2, r5
 8002452:	6122      	str	r2, [r4, #16]
 8002454:	f8cd a000 	str.w	sl, [sp]
 8002458:	464b      	mov	r3, r9
 800245a:	aa03      	add	r2, sp, #12
 800245c:	4621      	mov	r1, r4
 800245e:	4640      	mov	r0, r8
 8002460:	f7ff fee4 	bl	800222c <_printf_common>
 8002464:	3001      	adds	r0, #1
 8002466:	d14a      	bne.n	80024fe <_printf_i+0x1f6>
 8002468:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800246c:	b004      	add	sp, #16
 800246e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002472:	6823      	ldr	r3, [r4, #0]
 8002474:	f043 0320 	orr.w	r3, r3, #32
 8002478:	6023      	str	r3, [r4, #0]
 800247a:	4833      	ldr	r0, [pc, #204]	; (8002548 <_printf_i+0x240>)
 800247c:	2778      	movs	r7, #120	; 0x78
 800247e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002482:	6823      	ldr	r3, [r4, #0]
 8002484:	6829      	ldr	r1, [r5, #0]
 8002486:	061f      	lsls	r7, r3, #24
 8002488:	f851 6b04 	ldr.w	r6, [r1], #4
 800248c:	d402      	bmi.n	8002494 <_printf_i+0x18c>
 800248e:	065f      	lsls	r7, r3, #25
 8002490:	bf48      	it	mi
 8002492:	b2b6      	uxthmi	r6, r6
 8002494:	07df      	lsls	r7, r3, #31
 8002496:	bf48      	it	mi
 8002498:	f043 0320 	orrmi.w	r3, r3, #32
 800249c:	6029      	str	r1, [r5, #0]
 800249e:	bf48      	it	mi
 80024a0:	6023      	strmi	r3, [r4, #0]
 80024a2:	b91e      	cbnz	r6, 80024ac <_printf_i+0x1a4>
 80024a4:	6823      	ldr	r3, [r4, #0]
 80024a6:	f023 0320 	bic.w	r3, r3, #32
 80024aa:	6023      	str	r3, [r4, #0]
 80024ac:	2310      	movs	r3, #16
 80024ae:	e7a7      	b.n	8002400 <_printf_i+0xf8>
 80024b0:	4824      	ldr	r0, [pc, #144]	; (8002544 <_printf_i+0x23c>)
 80024b2:	e7e4      	b.n	800247e <_printf_i+0x176>
 80024b4:	4615      	mov	r5, r2
 80024b6:	e7bd      	b.n	8002434 <_printf_i+0x12c>
 80024b8:	682b      	ldr	r3, [r5, #0]
 80024ba:	6826      	ldr	r6, [r4, #0]
 80024bc:	6961      	ldr	r1, [r4, #20]
 80024be:	1d18      	adds	r0, r3, #4
 80024c0:	6028      	str	r0, [r5, #0]
 80024c2:	0635      	lsls	r5, r6, #24
 80024c4:	681b      	ldr	r3, [r3, #0]
 80024c6:	d501      	bpl.n	80024cc <_printf_i+0x1c4>
 80024c8:	6019      	str	r1, [r3, #0]
 80024ca:	e002      	b.n	80024d2 <_printf_i+0x1ca>
 80024cc:	0670      	lsls	r0, r6, #25
 80024ce:	d5fb      	bpl.n	80024c8 <_printf_i+0x1c0>
 80024d0:	8019      	strh	r1, [r3, #0]
 80024d2:	2300      	movs	r3, #0
 80024d4:	6123      	str	r3, [r4, #16]
 80024d6:	4615      	mov	r5, r2
 80024d8:	e7bc      	b.n	8002454 <_printf_i+0x14c>
 80024da:	682b      	ldr	r3, [r5, #0]
 80024dc:	1d1a      	adds	r2, r3, #4
 80024de:	602a      	str	r2, [r5, #0]
 80024e0:	681d      	ldr	r5, [r3, #0]
 80024e2:	6862      	ldr	r2, [r4, #4]
 80024e4:	2100      	movs	r1, #0
 80024e6:	4628      	mov	r0, r5
 80024e8:	f7fd fe7a 	bl	80001e0 <memchr>
 80024ec:	b108      	cbz	r0, 80024f2 <_printf_i+0x1ea>
 80024ee:	1b40      	subs	r0, r0, r5
 80024f0:	6060      	str	r0, [r4, #4]
 80024f2:	6863      	ldr	r3, [r4, #4]
 80024f4:	6123      	str	r3, [r4, #16]
 80024f6:	2300      	movs	r3, #0
 80024f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80024fc:	e7aa      	b.n	8002454 <_printf_i+0x14c>
 80024fe:	6923      	ldr	r3, [r4, #16]
 8002500:	462a      	mov	r2, r5
 8002502:	4649      	mov	r1, r9
 8002504:	4640      	mov	r0, r8
 8002506:	47d0      	blx	sl
 8002508:	3001      	adds	r0, #1
 800250a:	d0ad      	beq.n	8002468 <_printf_i+0x160>
 800250c:	6823      	ldr	r3, [r4, #0]
 800250e:	079b      	lsls	r3, r3, #30
 8002510:	d413      	bmi.n	800253a <_printf_i+0x232>
 8002512:	68e0      	ldr	r0, [r4, #12]
 8002514:	9b03      	ldr	r3, [sp, #12]
 8002516:	4298      	cmp	r0, r3
 8002518:	bfb8      	it	lt
 800251a:	4618      	movlt	r0, r3
 800251c:	e7a6      	b.n	800246c <_printf_i+0x164>
 800251e:	2301      	movs	r3, #1
 8002520:	4632      	mov	r2, r6
 8002522:	4649      	mov	r1, r9
 8002524:	4640      	mov	r0, r8
 8002526:	47d0      	blx	sl
 8002528:	3001      	adds	r0, #1
 800252a:	d09d      	beq.n	8002468 <_printf_i+0x160>
 800252c:	3501      	adds	r5, #1
 800252e:	68e3      	ldr	r3, [r4, #12]
 8002530:	9903      	ldr	r1, [sp, #12]
 8002532:	1a5b      	subs	r3, r3, r1
 8002534:	42ab      	cmp	r3, r5
 8002536:	dcf2      	bgt.n	800251e <_printf_i+0x216>
 8002538:	e7eb      	b.n	8002512 <_printf_i+0x20a>
 800253a:	2500      	movs	r5, #0
 800253c:	f104 0619 	add.w	r6, r4, #25
 8002540:	e7f5      	b.n	800252e <_printf_i+0x226>
 8002542:	bf00      	nop
 8002544:	08004717 	.word	0x08004717
 8002548:	08004728 	.word	0x08004728

0800254c <__sflush_r>:
 800254c:	898a      	ldrh	r2, [r1, #12]
 800254e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002552:	4605      	mov	r5, r0
 8002554:	0710      	lsls	r0, r2, #28
 8002556:	460c      	mov	r4, r1
 8002558:	d458      	bmi.n	800260c <__sflush_r+0xc0>
 800255a:	684b      	ldr	r3, [r1, #4]
 800255c:	2b00      	cmp	r3, #0
 800255e:	dc05      	bgt.n	800256c <__sflush_r+0x20>
 8002560:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8002562:	2b00      	cmp	r3, #0
 8002564:	dc02      	bgt.n	800256c <__sflush_r+0x20>
 8002566:	2000      	movs	r0, #0
 8002568:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800256c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800256e:	2e00      	cmp	r6, #0
 8002570:	d0f9      	beq.n	8002566 <__sflush_r+0x1a>
 8002572:	2300      	movs	r3, #0
 8002574:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8002578:	682f      	ldr	r7, [r5, #0]
 800257a:	6a21      	ldr	r1, [r4, #32]
 800257c:	602b      	str	r3, [r5, #0]
 800257e:	d032      	beq.n	80025e6 <__sflush_r+0x9a>
 8002580:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8002582:	89a3      	ldrh	r3, [r4, #12]
 8002584:	075a      	lsls	r2, r3, #29
 8002586:	d505      	bpl.n	8002594 <__sflush_r+0x48>
 8002588:	6863      	ldr	r3, [r4, #4]
 800258a:	1ac0      	subs	r0, r0, r3
 800258c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800258e:	b10b      	cbz	r3, 8002594 <__sflush_r+0x48>
 8002590:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002592:	1ac0      	subs	r0, r0, r3
 8002594:	2300      	movs	r3, #0
 8002596:	4602      	mov	r2, r0
 8002598:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800259a:	6a21      	ldr	r1, [r4, #32]
 800259c:	4628      	mov	r0, r5
 800259e:	47b0      	blx	r6
 80025a0:	1c43      	adds	r3, r0, #1
 80025a2:	89a3      	ldrh	r3, [r4, #12]
 80025a4:	d106      	bne.n	80025b4 <__sflush_r+0x68>
 80025a6:	6829      	ldr	r1, [r5, #0]
 80025a8:	291d      	cmp	r1, #29
 80025aa:	d82b      	bhi.n	8002604 <__sflush_r+0xb8>
 80025ac:	4a29      	ldr	r2, [pc, #164]	; (8002654 <__sflush_r+0x108>)
 80025ae:	410a      	asrs	r2, r1
 80025b0:	07d6      	lsls	r6, r2, #31
 80025b2:	d427      	bmi.n	8002604 <__sflush_r+0xb8>
 80025b4:	2200      	movs	r2, #0
 80025b6:	6062      	str	r2, [r4, #4]
 80025b8:	04d9      	lsls	r1, r3, #19
 80025ba:	6922      	ldr	r2, [r4, #16]
 80025bc:	6022      	str	r2, [r4, #0]
 80025be:	d504      	bpl.n	80025ca <__sflush_r+0x7e>
 80025c0:	1c42      	adds	r2, r0, #1
 80025c2:	d101      	bne.n	80025c8 <__sflush_r+0x7c>
 80025c4:	682b      	ldr	r3, [r5, #0]
 80025c6:	b903      	cbnz	r3, 80025ca <__sflush_r+0x7e>
 80025c8:	6560      	str	r0, [r4, #84]	; 0x54
 80025ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80025cc:	602f      	str	r7, [r5, #0]
 80025ce:	2900      	cmp	r1, #0
 80025d0:	d0c9      	beq.n	8002566 <__sflush_r+0x1a>
 80025d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80025d6:	4299      	cmp	r1, r3
 80025d8:	d002      	beq.n	80025e0 <__sflush_r+0x94>
 80025da:	4628      	mov	r0, r5
 80025dc:	f000 fa22 	bl	8002a24 <_free_r>
 80025e0:	2000      	movs	r0, #0
 80025e2:	6360      	str	r0, [r4, #52]	; 0x34
 80025e4:	e7c0      	b.n	8002568 <__sflush_r+0x1c>
 80025e6:	2301      	movs	r3, #1
 80025e8:	4628      	mov	r0, r5
 80025ea:	47b0      	blx	r6
 80025ec:	1c41      	adds	r1, r0, #1
 80025ee:	d1c8      	bne.n	8002582 <__sflush_r+0x36>
 80025f0:	682b      	ldr	r3, [r5, #0]
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d0c5      	beq.n	8002582 <__sflush_r+0x36>
 80025f6:	2b1d      	cmp	r3, #29
 80025f8:	d001      	beq.n	80025fe <__sflush_r+0xb2>
 80025fa:	2b16      	cmp	r3, #22
 80025fc:	d101      	bne.n	8002602 <__sflush_r+0xb6>
 80025fe:	602f      	str	r7, [r5, #0]
 8002600:	e7b1      	b.n	8002566 <__sflush_r+0x1a>
 8002602:	89a3      	ldrh	r3, [r4, #12]
 8002604:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002608:	81a3      	strh	r3, [r4, #12]
 800260a:	e7ad      	b.n	8002568 <__sflush_r+0x1c>
 800260c:	690f      	ldr	r7, [r1, #16]
 800260e:	2f00      	cmp	r7, #0
 8002610:	d0a9      	beq.n	8002566 <__sflush_r+0x1a>
 8002612:	0793      	lsls	r3, r2, #30
 8002614:	680e      	ldr	r6, [r1, #0]
 8002616:	bf08      	it	eq
 8002618:	694b      	ldreq	r3, [r1, #20]
 800261a:	600f      	str	r7, [r1, #0]
 800261c:	bf18      	it	ne
 800261e:	2300      	movne	r3, #0
 8002620:	eba6 0807 	sub.w	r8, r6, r7
 8002624:	608b      	str	r3, [r1, #8]
 8002626:	f1b8 0f00 	cmp.w	r8, #0
 800262a:	dd9c      	ble.n	8002566 <__sflush_r+0x1a>
 800262c:	6a21      	ldr	r1, [r4, #32]
 800262e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8002630:	4643      	mov	r3, r8
 8002632:	463a      	mov	r2, r7
 8002634:	4628      	mov	r0, r5
 8002636:	47b0      	blx	r6
 8002638:	2800      	cmp	r0, #0
 800263a:	dc06      	bgt.n	800264a <__sflush_r+0xfe>
 800263c:	89a3      	ldrh	r3, [r4, #12]
 800263e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002642:	81a3      	strh	r3, [r4, #12]
 8002644:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002648:	e78e      	b.n	8002568 <__sflush_r+0x1c>
 800264a:	4407      	add	r7, r0
 800264c:	eba8 0800 	sub.w	r8, r8, r0
 8002650:	e7e9      	b.n	8002626 <__sflush_r+0xda>
 8002652:	bf00      	nop
 8002654:	dfbffffe 	.word	0xdfbffffe

08002658 <_fflush_r>:
 8002658:	b538      	push	{r3, r4, r5, lr}
 800265a:	690b      	ldr	r3, [r1, #16]
 800265c:	4605      	mov	r5, r0
 800265e:	460c      	mov	r4, r1
 8002660:	b913      	cbnz	r3, 8002668 <_fflush_r+0x10>
 8002662:	2500      	movs	r5, #0
 8002664:	4628      	mov	r0, r5
 8002666:	bd38      	pop	{r3, r4, r5, pc}
 8002668:	b118      	cbz	r0, 8002672 <_fflush_r+0x1a>
 800266a:	6a03      	ldr	r3, [r0, #32]
 800266c:	b90b      	cbnz	r3, 8002672 <_fflush_r+0x1a>
 800266e:	f7ff fb21 	bl	8001cb4 <__sinit>
 8002672:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002676:	2b00      	cmp	r3, #0
 8002678:	d0f3      	beq.n	8002662 <_fflush_r+0xa>
 800267a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800267c:	07d0      	lsls	r0, r2, #31
 800267e:	d404      	bmi.n	800268a <_fflush_r+0x32>
 8002680:	0599      	lsls	r1, r3, #22
 8002682:	d402      	bmi.n	800268a <_fflush_r+0x32>
 8002684:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002686:	f7ff fbec 	bl	8001e62 <__retarget_lock_acquire_recursive>
 800268a:	4628      	mov	r0, r5
 800268c:	4621      	mov	r1, r4
 800268e:	f7ff ff5d 	bl	800254c <__sflush_r>
 8002692:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002694:	07da      	lsls	r2, r3, #31
 8002696:	4605      	mov	r5, r0
 8002698:	d4e4      	bmi.n	8002664 <_fflush_r+0xc>
 800269a:	89a3      	ldrh	r3, [r4, #12]
 800269c:	059b      	lsls	r3, r3, #22
 800269e:	d4e1      	bmi.n	8002664 <_fflush_r+0xc>
 80026a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80026a2:	f7ff fbdf 	bl	8001e64 <__retarget_lock_release_recursive>
 80026a6:	e7dd      	b.n	8002664 <_fflush_r+0xc>

080026a8 <__malloc_lock>:
 80026a8:	4801      	ldr	r0, [pc, #4]	; (80026b0 <__malloc_lock+0x8>)
 80026aa:	f7ff bbda 	b.w	8001e62 <__retarget_lock_acquire_recursive>
 80026ae:	bf00      	nop
 80026b0:	200005b8 	.word	0x200005b8

080026b4 <__malloc_unlock>:
 80026b4:	4801      	ldr	r0, [pc, #4]	; (80026bc <__malloc_unlock+0x8>)
 80026b6:	f7ff bbd5 	b.w	8001e64 <__retarget_lock_release_recursive>
 80026ba:	bf00      	nop
 80026bc:	200005b8 	.word	0x200005b8

080026c0 <__sread>:
 80026c0:	b510      	push	{r4, lr}
 80026c2:	460c      	mov	r4, r1
 80026c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80026c8:	f000 f978 	bl	80029bc <_read_r>
 80026cc:	2800      	cmp	r0, #0
 80026ce:	bfab      	itete	ge
 80026d0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80026d2:	89a3      	ldrhlt	r3, [r4, #12]
 80026d4:	181b      	addge	r3, r3, r0
 80026d6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80026da:	bfac      	ite	ge
 80026dc:	6563      	strge	r3, [r4, #84]	; 0x54
 80026de:	81a3      	strhlt	r3, [r4, #12]
 80026e0:	bd10      	pop	{r4, pc}

080026e2 <__swrite>:
 80026e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80026e6:	461f      	mov	r7, r3
 80026e8:	898b      	ldrh	r3, [r1, #12]
 80026ea:	05db      	lsls	r3, r3, #23
 80026ec:	4605      	mov	r5, r0
 80026ee:	460c      	mov	r4, r1
 80026f0:	4616      	mov	r6, r2
 80026f2:	d505      	bpl.n	8002700 <__swrite+0x1e>
 80026f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80026f8:	2302      	movs	r3, #2
 80026fa:	2200      	movs	r2, #0
 80026fc:	f000 f94c 	bl	8002998 <_lseek_r>
 8002700:	89a3      	ldrh	r3, [r4, #12]
 8002702:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002706:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800270a:	81a3      	strh	r3, [r4, #12]
 800270c:	4632      	mov	r2, r6
 800270e:	463b      	mov	r3, r7
 8002710:	4628      	mov	r0, r5
 8002712:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002716:	f000 b973 	b.w	8002a00 <_write_r>

0800271a <__sseek>:
 800271a:	b510      	push	{r4, lr}
 800271c:	460c      	mov	r4, r1
 800271e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002722:	f000 f939 	bl	8002998 <_lseek_r>
 8002726:	1c43      	adds	r3, r0, #1
 8002728:	89a3      	ldrh	r3, [r4, #12]
 800272a:	bf15      	itete	ne
 800272c:	6560      	strne	r0, [r4, #84]	; 0x54
 800272e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002732:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002736:	81a3      	strheq	r3, [r4, #12]
 8002738:	bf18      	it	ne
 800273a:	81a3      	strhne	r3, [r4, #12]
 800273c:	bd10      	pop	{r4, pc}

0800273e <__sclose>:
 800273e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002742:	f000 b8f7 	b.w	8002934 <_close_r>

08002746 <__swbuf_r>:
 8002746:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002748:	460e      	mov	r6, r1
 800274a:	4614      	mov	r4, r2
 800274c:	4605      	mov	r5, r0
 800274e:	b118      	cbz	r0, 8002758 <__swbuf_r+0x12>
 8002750:	6a03      	ldr	r3, [r0, #32]
 8002752:	b90b      	cbnz	r3, 8002758 <__swbuf_r+0x12>
 8002754:	f7ff faae 	bl	8001cb4 <__sinit>
 8002758:	69a3      	ldr	r3, [r4, #24]
 800275a:	60a3      	str	r3, [r4, #8]
 800275c:	89a3      	ldrh	r3, [r4, #12]
 800275e:	071a      	lsls	r2, r3, #28
 8002760:	d525      	bpl.n	80027ae <__swbuf_r+0x68>
 8002762:	6923      	ldr	r3, [r4, #16]
 8002764:	b31b      	cbz	r3, 80027ae <__swbuf_r+0x68>
 8002766:	6823      	ldr	r3, [r4, #0]
 8002768:	6922      	ldr	r2, [r4, #16]
 800276a:	1a98      	subs	r0, r3, r2
 800276c:	6963      	ldr	r3, [r4, #20]
 800276e:	b2f6      	uxtb	r6, r6
 8002770:	4283      	cmp	r3, r0
 8002772:	4637      	mov	r7, r6
 8002774:	dc04      	bgt.n	8002780 <__swbuf_r+0x3a>
 8002776:	4621      	mov	r1, r4
 8002778:	4628      	mov	r0, r5
 800277a:	f7ff ff6d 	bl	8002658 <_fflush_r>
 800277e:	b9e0      	cbnz	r0, 80027ba <__swbuf_r+0x74>
 8002780:	68a3      	ldr	r3, [r4, #8]
 8002782:	3b01      	subs	r3, #1
 8002784:	60a3      	str	r3, [r4, #8]
 8002786:	6823      	ldr	r3, [r4, #0]
 8002788:	1c5a      	adds	r2, r3, #1
 800278a:	6022      	str	r2, [r4, #0]
 800278c:	701e      	strb	r6, [r3, #0]
 800278e:	6962      	ldr	r2, [r4, #20]
 8002790:	1c43      	adds	r3, r0, #1
 8002792:	429a      	cmp	r2, r3
 8002794:	d004      	beq.n	80027a0 <__swbuf_r+0x5a>
 8002796:	89a3      	ldrh	r3, [r4, #12]
 8002798:	07db      	lsls	r3, r3, #31
 800279a:	d506      	bpl.n	80027aa <__swbuf_r+0x64>
 800279c:	2e0a      	cmp	r6, #10
 800279e:	d104      	bne.n	80027aa <__swbuf_r+0x64>
 80027a0:	4621      	mov	r1, r4
 80027a2:	4628      	mov	r0, r5
 80027a4:	f7ff ff58 	bl	8002658 <_fflush_r>
 80027a8:	b938      	cbnz	r0, 80027ba <__swbuf_r+0x74>
 80027aa:	4638      	mov	r0, r7
 80027ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80027ae:	4621      	mov	r1, r4
 80027b0:	4628      	mov	r0, r5
 80027b2:	f000 f805 	bl	80027c0 <__swsetup_r>
 80027b6:	2800      	cmp	r0, #0
 80027b8:	d0d5      	beq.n	8002766 <__swbuf_r+0x20>
 80027ba:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80027be:	e7f4      	b.n	80027aa <__swbuf_r+0x64>

080027c0 <__swsetup_r>:
 80027c0:	b538      	push	{r3, r4, r5, lr}
 80027c2:	4b2a      	ldr	r3, [pc, #168]	; (800286c <__swsetup_r+0xac>)
 80027c4:	4605      	mov	r5, r0
 80027c6:	6818      	ldr	r0, [r3, #0]
 80027c8:	460c      	mov	r4, r1
 80027ca:	b118      	cbz	r0, 80027d4 <__swsetup_r+0x14>
 80027cc:	6a03      	ldr	r3, [r0, #32]
 80027ce:	b90b      	cbnz	r3, 80027d4 <__swsetup_r+0x14>
 80027d0:	f7ff fa70 	bl	8001cb4 <__sinit>
 80027d4:	89a3      	ldrh	r3, [r4, #12]
 80027d6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80027da:	0718      	lsls	r0, r3, #28
 80027dc:	d422      	bmi.n	8002824 <__swsetup_r+0x64>
 80027de:	06d9      	lsls	r1, r3, #27
 80027e0:	d407      	bmi.n	80027f2 <__swsetup_r+0x32>
 80027e2:	2309      	movs	r3, #9
 80027e4:	602b      	str	r3, [r5, #0]
 80027e6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80027ea:	81a3      	strh	r3, [r4, #12]
 80027ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80027f0:	e034      	b.n	800285c <__swsetup_r+0x9c>
 80027f2:	0758      	lsls	r0, r3, #29
 80027f4:	d512      	bpl.n	800281c <__swsetup_r+0x5c>
 80027f6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80027f8:	b141      	cbz	r1, 800280c <__swsetup_r+0x4c>
 80027fa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80027fe:	4299      	cmp	r1, r3
 8002800:	d002      	beq.n	8002808 <__swsetup_r+0x48>
 8002802:	4628      	mov	r0, r5
 8002804:	f000 f90e 	bl	8002a24 <_free_r>
 8002808:	2300      	movs	r3, #0
 800280a:	6363      	str	r3, [r4, #52]	; 0x34
 800280c:	89a3      	ldrh	r3, [r4, #12]
 800280e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8002812:	81a3      	strh	r3, [r4, #12]
 8002814:	2300      	movs	r3, #0
 8002816:	6063      	str	r3, [r4, #4]
 8002818:	6923      	ldr	r3, [r4, #16]
 800281a:	6023      	str	r3, [r4, #0]
 800281c:	89a3      	ldrh	r3, [r4, #12]
 800281e:	f043 0308 	orr.w	r3, r3, #8
 8002822:	81a3      	strh	r3, [r4, #12]
 8002824:	6923      	ldr	r3, [r4, #16]
 8002826:	b94b      	cbnz	r3, 800283c <__swsetup_r+0x7c>
 8002828:	89a3      	ldrh	r3, [r4, #12]
 800282a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800282e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002832:	d003      	beq.n	800283c <__swsetup_r+0x7c>
 8002834:	4621      	mov	r1, r4
 8002836:	4628      	mov	r0, r5
 8002838:	f000 f840 	bl	80028bc <__smakebuf_r>
 800283c:	89a0      	ldrh	r0, [r4, #12]
 800283e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002842:	f010 0301 	ands.w	r3, r0, #1
 8002846:	d00a      	beq.n	800285e <__swsetup_r+0x9e>
 8002848:	2300      	movs	r3, #0
 800284a:	60a3      	str	r3, [r4, #8]
 800284c:	6963      	ldr	r3, [r4, #20]
 800284e:	425b      	negs	r3, r3
 8002850:	61a3      	str	r3, [r4, #24]
 8002852:	6923      	ldr	r3, [r4, #16]
 8002854:	b943      	cbnz	r3, 8002868 <__swsetup_r+0xa8>
 8002856:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800285a:	d1c4      	bne.n	80027e6 <__swsetup_r+0x26>
 800285c:	bd38      	pop	{r3, r4, r5, pc}
 800285e:	0781      	lsls	r1, r0, #30
 8002860:	bf58      	it	pl
 8002862:	6963      	ldrpl	r3, [r4, #20]
 8002864:	60a3      	str	r3, [r4, #8]
 8002866:	e7f4      	b.n	8002852 <__swsetup_r+0x92>
 8002868:	2000      	movs	r0, #0
 800286a:	e7f7      	b.n	800285c <__swsetup_r+0x9c>
 800286c:	2000042c 	.word	0x2000042c

08002870 <__swhatbuf_r>:
 8002870:	b570      	push	{r4, r5, r6, lr}
 8002872:	460c      	mov	r4, r1
 8002874:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002878:	2900      	cmp	r1, #0
 800287a:	b096      	sub	sp, #88	; 0x58
 800287c:	4615      	mov	r5, r2
 800287e:	461e      	mov	r6, r3
 8002880:	da0d      	bge.n	800289e <__swhatbuf_r+0x2e>
 8002882:	89a3      	ldrh	r3, [r4, #12]
 8002884:	f013 0f80 	tst.w	r3, #128	; 0x80
 8002888:	f04f 0100 	mov.w	r1, #0
 800288c:	bf0c      	ite	eq
 800288e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8002892:	2340      	movne	r3, #64	; 0x40
 8002894:	2000      	movs	r0, #0
 8002896:	6031      	str	r1, [r6, #0]
 8002898:	602b      	str	r3, [r5, #0]
 800289a:	b016      	add	sp, #88	; 0x58
 800289c:	bd70      	pop	{r4, r5, r6, pc}
 800289e:	466a      	mov	r2, sp
 80028a0:	f000 f858 	bl	8002954 <_fstat_r>
 80028a4:	2800      	cmp	r0, #0
 80028a6:	dbec      	blt.n	8002882 <__swhatbuf_r+0x12>
 80028a8:	9901      	ldr	r1, [sp, #4]
 80028aa:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80028ae:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80028b2:	4259      	negs	r1, r3
 80028b4:	4159      	adcs	r1, r3
 80028b6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80028ba:	e7eb      	b.n	8002894 <__swhatbuf_r+0x24>

080028bc <__smakebuf_r>:
 80028bc:	898b      	ldrh	r3, [r1, #12]
 80028be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80028c0:	079d      	lsls	r5, r3, #30
 80028c2:	4606      	mov	r6, r0
 80028c4:	460c      	mov	r4, r1
 80028c6:	d507      	bpl.n	80028d8 <__smakebuf_r+0x1c>
 80028c8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80028cc:	6023      	str	r3, [r4, #0]
 80028ce:	6123      	str	r3, [r4, #16]
 80028d0:	2301      	movs	r3, #1
 80028d2:	6163      	str	r3, [r4, #20]
 80028d4:	b002      	add	sp, #8
 80028d6:	bd70      	pop	{r4, r5, r6, pc}
 80028d8:	ab01      	add	r3, sp, #4
 80028da:	466a      	mov	r2, sp
 80028dc:	f7ff ffc8 	bl	8002870 <__swhatbuf_r>
 80028e0:	9900      	ldr	r1, [sp, #0]
 80028e2:	4605      	mov	r5, r0
 80028e4:	4630      	mov	r0, r6
 80028e6:	f7ff fc21 	bl	800212c <_malloc_r>
 80028ea:	b948      	cbnz	r0, 8002900 <__smakebuf_r+0x44>
 80028ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80028f0:	059a      	lsls	r2, r3, #22
 80028f2:	d4ef      	bmi.n	80028d4 <__smakebuf_r+0x18>
 80028f4:	f023 0303 	bic.w	r3, r3, #3
 80028f8:	f043 0302 	orr.w	r3, r3, #2
 80028fc:	81a3      	strh	r3, [r4, #12]
 80028fe:	e7e3      	b.n	80028c8 <__smakebuf_r+0xc>
 8002900:	89a3      	ldrh	r3, [r4, #12]
 8002902:	6020      	str	r0, [r4, #0]
 8002904:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002908:	81a3      	strh	r3, [r4, #12]
 800290a:	9b00      	ldr	r3, [sp, #0]
 800290c:	6163      	str	r3, [r4, #20]
 800290e:	9b01      	ldr	r3, [sp, #4]
 8002910:	6120      	str	r0, [r4, #16]
 8002912:	b15b      	cbz	r3, 800292c <__smakebuf_r+0x70>
 8002914:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002918:	4630      	mov	r0, r6
 800291a:	f000 f82d 	bl	8002978 <_isatty_r>
 800291e:	b128      	cbz	r0, 800292c <__smakebuf_r+0x70>
 8002920:	89a3      	ldrh	r3, [r4, #12]
 8002922:	f023 0303 	bic.w	r3, r3, #3
 8002926:	f043 0301 	orr.w	r3, r3, #1
 800292a:	81a3      	strh	r3, [r4, #12]
 800292c:	89a3      	ldrh	r3, [r4, #12]
 800292e:	431d      	orrs	r5, r3
 8002930:	81a5      	strh	r5, [r4, #12]
 8002932:	e7cf      	b.n	80028d4 <__smakebuf_r+0x18>

08002934 <_close_r>:
 8002934:	b538      	push	{r3, r4, r5, lr}
 8002936:	4d06      	ldr	r5, [pc, #24]	; (8002950 <_close_r+0x1c>)
 8002938:	2300      	movs	r3, #0
 800293a:	4604      	mov	r4, r0
 800293c:	4608      	mov	r0, r1
 800293e:	602b      	str	r3, [r5, #0]
 8002940:	f7fe ffb5 	bl	80018ae <_close>
 8002944:	1c43      	adds	r3, r0, #1
 8002946:	d102      	bne.n	800294e <_close_r+0x1a>
 8002948:	682b      	ldr	r3, [r5, #0]
 800294a:	b103      	cbz	r3, 800294e <_close_r+0x1a>
 800294c:	6023      	str	r3, [r4, #0]
 800294e:	bd38      	pop	{r3, r4, r5, pc}
 8002950:	200005c4 	.word	0x200005c4

08002954 <_fstat_r>:
 8002954:	b538      	push	{r3, r4, r5, lr}
 8002956:	4d07      	ldr	r5, [pc, #28]	; (8002974 <_fstat_r+0x20>)
 8002958:	2300      	movs	r3, #0
 800295a:	4604      	mov	r4, r0
 800295c:	4608      	mov	r0, r1
 800295e:	4611      	mov	r1, r2
 8002960:	602b      	str	r3, [r5, #0]
 8002962:	f7fe ffb0 	bl	80018c6 <_fstat>
 8002966:	1c43      	adds	r3, r0, #1
 8002968:	d102      	bne.n	8002970 <_fstat_r+0x1c>
 800296a:	682b      	ldr	r3, [r5, #0]
 800296c:	b103      	cbz	r3, 8002970 <_fstat_r+0x1c>
 800296e:	6023      	str	r3, [r4, #0]
 8002970:	bd38      	pop	{r3, r4, r5, pc}
 8002972:	bf00      	nop
 8002974:	200005c4 	.word	0x200005c4

08002978 <_isatty_r>:
 8002978:	b538      	push	{r3, r4, r5, lr}
 800297a:	4d06      	ldr	r5, [pc, #24]	; (8002994 <_isatty_r+0x1c>)
 800297c:	2300      	movs	r3, #0
 800297e:	4604      	mov	r4, r0
 8002980:	4608      	mov	r0, r1
 8002982:	602b      	str	r3, [r5, #0]
 8002984:	f7fe ffaf 	bl	80018e6 <_isatty>
 8002988:	1c43      	adds	r3, r0, #1
 800298a:	d102      	bne.n	8002992 <_isatty_r+0x1a>
 800298c:	682b      	ldr	r3, [r5, #0]
 800298e:	b103      	cbz	r3, 8002992 <_isatty_r+0x1a>
 8002990:	6023      	str	r3, [r4, #0]
 8002992:	bd38      	pop	{r3, r4, r5, pc}
 8002994:	200005c4 	.word	0x200005c4

08002998 <_lseek_r>:
 8002998:	b538      	push	{r3, r4, r5, lr}
 800299a:	4d07      	ldr	r5, [pc, #28]	; (80029b8 <_lseek_r+0x20>)
 800299c:	4604      	mov	r4, r0
 800299e:	4608      	mov	r0, r1
 80029a0:	4611      	mov	r1, r2
 80029a2:	2200      	movs	r2, #0
 80029a4:	602a      	str	r2, [r5, #0]
 80029a6:	461a      	mov	r2, r3
 80029a8:	f7fe ffa8 	bl	80018fc <_lseek>
 80029ac:	1c43      	adds	r3, r0, #1
 80029ae:	d102      	bne.n	80029b6 <_lseek_r+0x1e>
 80029b0:	682b      	ldr	r3, [r5, #0]
 80029b2:	b103      	cbz	r3, 80029b6 <_lseek_r+0x1e>
 80029b4:	6023      	str	r3, [r4, #0]
 80029b6:	bd38      	pop	{r3, r4, r5, pc}
 80029b8:	200005c4 	.word	0x200005c4

080029bc <_read_r>:
 80029bc:	b538      	push	{r3, r4, r5, lr}
 80029be:	4d07      	ldr	r5, [pc, #28]	; (80029dc <_read_r+0x20>)
 80029c0:	4604      	mov	r4, r0
 80029c2:	4608      	mov	r0, r1
 80029c4:	4611      	mov	r1, r2
 80029c6:	2200      	movs	r2, #0
 80029c8:	602a      	str	r2, [r5, #0]
 80029ca:	461a      	mov	r2, r3
 80029cc:	f7fe ff36 	bl	800183c <_read>
 80029d0:	1c43      	adds	r3, r0, #1
 80029d2:	d102      	bne.n	80029da <_read_r+0x1e>
 80029d4:	682b      	ldr	r3, [r5, #0]
 80029d6:	b103      	cbz	r3, 80029da <_read_r+0x1e>
 80029d8:	6023      	str	r3, [r4, #0]
 80029da:	bd38      	pop	{r3, r4, r5, pc}
 80029dc:	200005c4 	.word	0x200005c4

080029e0 <_sbrk_r>:
 80029e0:	b538      	push	{r3, r4, r5, lr}
 80029e2:	4d06      	ldr	r5, [pc, #24]	; (80029fc <_sbrk_r+0x1c>)
 80029e4:	2300      	movs	r3, #0
 80029e6:	4604      	mov	r4, r0
 80029e8:	4608      	mov	r0, r1
 80029ea:	602b      	str	r3, [r5, #0]
 80029ec:	f7fe ff94 	bl	8001918 <_sbrk>
 80029f0:	1c43      	adds	r3, r0, #1
 80029f2:	d102      	bne.n	80029fa <_sbrk_r+0x1a>
 80029f4:	682b      	ldr	r3, [r5, #0]
 80029f6:	b103      	cbz	r3, 80029fa <_sbrk_r+0x1a>
 80029f8:	6023      	str	r3, [r4, #0]
 80029fa:	bd38      	pop	{r3, r4, r5, pc}
 80029fc:	200005c4 	.word	0x200005c4

08002a00 <_write_r>:
 8002a00:	b538      	push	{r3, r4, r5, lr}
 8002a02:	4d07      	ldr	r5, [pc, #28]	; (8002a20 <_write_r+0x20>)
 8002a04:	4604      	mov	r4, r0
 8002a06:	4608      	mov	r0, r1
 8002a08:	4611      	mov	r1, r2
 8002a0a:	2200      	movs	r2, #0
 8002a0c:	602a      	str	r2, [r5, #0]
 8002a0e:	461a      	mov	r2, r3
 8002a10:	f7fe ff31 	bl	8001876 <_write>
 8002a14:	1c43      	adds	r3, r0, #1
 8002a16:	d102      	bne.n	8002a1e <_write_r+0x1e>
 8002a18:	682b      	ldr	r3, [r5, #0]
 8002a1a:	b103      	cbz	r3, 8002a1e <_write_r+0x1e>
 8002a1c:	6023      	str	r3, [r4, #0]
 8002a1e:	bd38      	pop	{r3, r4, r5, pc}
 8002a20:	200005c4 	.word	0x200005c4

08002a24 <_free_r>:
 8002a24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002a26:	2900      	cmp	r1, #0
 8002a28:	d044      	beq.n	8002ab4 <_free_r+0x90>
 8002a2a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002a2e:	9001      	str	r0, [sp, #4]
 8002a30:	2b00      	cmp	r3, #0
 8002a32:	f1a1 0404 	sub.w	r4, r1, #4
 8002a36:	bfb8      	it	lt
 8002a38:	18e4      	addlt	r4, r4, r3
 8002a3a:	f7ff fe35 	bl	80026a8 <__malloc_lock>
 8002a3e:	4a1e      	ldr	r2, [pc, #120]	; (8002ab8 <_free_r+0x94>)
 8002a40:	9801      	ldr	r0, [sp, #4]
 8002a42:	6813      	ldr	r3, [r2, #0]
 8002a44:	b933      	cbnz	r3, 8002a54 <_free_r+0x30>
 8002a46:	6063      	str	r3, [r4, #4]
 8002a48:	6014      	str	r4, [r2, #0]
 8002a4a:	b003      	add	sp, #12
 8002a4c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8002a50:	f7ff be30 	b.w	80026b4 <__malloc_unlock>
 8002a54:	42a3      	cmp	r3, r4
 8002a56:	d908      	bls.n	8002a6a <_free_r+0x46>
 8002a58:	6825      	ldr	r5, [r4, #0]
 8002a5a:	1961      	adds	r1, r4, r5
 8002a5c:	428b      	cmp	r3, r1
 8002a5e:	bf01      	itttt	eq
 8002a60:	6819      	ldreq	r1, [r3, #0]
 8002a62:	685b      	ldreq	r3, [r3, #4]
 8002a64:	1949      	addeq	r1, r1, r5
 8002a66:	6021      	streq	r1, [r4, #0]
 8002a68:	e7ed      	b.n	8002a46 <_free_r+0x22>
 8002a6a:	461a      	mov	r2, r3
 8002a6c:	685b      	ldr	r3, [r3, #4]
 8002a6e:	b10b      	cbz	r3, 8002a74 <_free_r+0x50>
 8002a70:	42a3      	cmp	r3, r4
 8002a72:	d9fa      	bls.n	8002a6a <_free_r+0x46>
 8002a74:	6811      	ldr	r1, [r2, #0]
 8002a76:	1855      	adds	r5, r2, r1
 8002a78:	42a5      	cmp	r5, r4
 8002a7a:	d10b      	bne.n	8002a94 <_free_r+0x70>
 8002a7c:	6824      	ldr	r4, [r4, #0]
 8002a7e:	4421      	add	r1, r4
 8002a80:	1854      	adds	r4, r2, r1
 8002a82:	42a3      	cmp	r3, r4
 8002a84:	6011      	str	r1, [r2, #0]
 8002a86:	d1e0      	bne.n	8002a4a <_free_r+0x26>
 8002a88:	681c      	ldr	r4, [r3, #0]
 8002a8a:	685b      	ldr	r3, [r3, #4]
 8002a8c:	6053      	str	r3, [r2, #4]
 8002a8e:	440c      	add	r4, r1
 8002a90:	6014      	str	r4, [r2, #0]
 8002a92:	e7da      	b.n	8002a4a <_free_r+0x26>
 8002a94:	d902      	bls.n	8002a9c <_free_r+0x78>
 8002a96:	230c      	movs	r3, #12
 8002a98:	6003      	str	r3, [r0, #0]
 8002a9a:	e7d6      	b.n	8002a4a <_free_r+0x26>
 8002a9c:	6825      	ldr	r5, [r4, #0]
 8002a9e:	1961      	adds	r1, r4, r5
 8002aa0:	428b      	cmp	r3, r1
 8002aa2:	bf04      	itt	eq
 8002aa4:	6819      	ldreq	r1, [r3, #0]
 8002aa6:	685b      	ldreq	r3, [r3, #4]
 8002aa8:	6063      	str	r3, [r4, #4]
 8002aaa:	bf04      	itt	eq
 8002aac:	1949      	addeq	r1, r1, r5
 8002aae:	6021      	streq	r1, [r4, #0]
 8002ab0:	6054      	str	r4, [r2, #4]
 8002ab2:	e7ca      	b.n	8002a4a <_free_r+0x26>
 8002ab4:	b003      	add	sp, #12
 8002ab6:	bd30      	pop	{r4, r5, pc}
 8002ab8:	200005bc 	.word	0x200005bc

08002abc <acos>:
 8002abc:	b538      	push	{r3, r4, r5, lr}
 8002abe:	ed2d 8b02 	vpush	{d8}
 8002ac2:	ec55 4b10 	vmov	r4, r5, d0
 8002ac6:	f000 f863 	bl	8002b90 <__ieee754_acos>
 8002aca:	4622      	mov	r2, r4
 8002acc:	462b      	mov	r3, r5
 8002ace:	4620      	mov	r0, r4
 8002ad0:	4629      	mov	r1, r5
 8002ad2:	eeb0 8a40 	vmov.f32	s16, s0
 8002ad6:	eef0 8a60 	vmov.f32	s17, s1
 8002ada:	f7fe f827 	bl	8000b2c <__aeabi_dcmpun>
 8002ade:	b9a8      	cbnz	r0, 8002b0c <acos+0x50>
 8002ae0:	ec45 4b10 	vmov	d0, r4, r5
 8002ae4:	f000 ff04 	bl	80038f0 <fabs>
 8002ae8:	4b0c      	ldr	r3, [pc, #48]	; (8002b1c <acos+0x60>)
 8002aea:	ec51 0b10 	vmov	r0, r1, d0
 8002aee:	2200      	movs	r2, #0
 8002af0:	f7fe f812 	bl	8000b18 <__aeabi_dcmpgt>
 8002af4:	b150      	cbz	r0, 8002b0c <acos+0x50>
 8002af6:	f7ff f989 	bl	8001e0c <__errno>
 8002afa:	ecbd 8b02 	vpop	{d8}
 8002afe:	2321      	movs	r3, #33	; 0x21
 8002b00:	6003      	str	r3, [r0, #0]
 8002b02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002b06:	4806      	ldr	r0, [pc, #24]	; (8002b20 <acos+0x64>)
 8002b08:	f000 bfe2 	b.w	8003ad0 <nan>
 8002b0c:	eeb0 0a48 	vmov.f32	s0, s16
 8002b10:	eef0 0a68 	vmov.f32	s1, s17
 8002b14:	ecbd 8b02 	vpop	{d8}
 8002b18:	bd38      	pop	{r3, r4, r5, pc}
 8002b1a:	bf00      	nop
 8002b1c:	3ff00000 	.word	0x3ff00000
 8002b20:	0800470b 	.word	0x0800470b

08002b24 <asin>:
 8002b24:	b538      	push	{r3, r4, r5, lr}
 8002b26:	ed2d 8b02 	vpush	{d8}
 8002b2a:	ec55 4b10 	vmov	r4, r5, d0
 8002b2e:	f000 fa8f 	bl	8003050 <__ieee754_asin>
 8002b32:	4622      	mov	r2, r4
 8002b34:	462b      	mov	r3, r5
 8002b36:	4620      	mov	r0, r4
 8002b38:	4629      	mov	r1, r5
 8002b3a:	eeb0 8a40 	vmov.f32	s16, s0
 8002b3e:	eef0 8a60 	vmov.f32	s17, s1
 8002b42:	f7fd fff3 	bl	8000b2c <__aeabi_dcmpun>
 8002b46:	b9a8      	cbnz	r0, 8002b74 <asin+0x50>
 8002b48:	ec45 4b10 	vmov	d0, r4, r5
 8002b4c:	f000 fed0 	bl	80038f0 <fabs>
 8002b50:	4b0c      	ldr	r3, [pc, #48]	; (8002b84 <asin+0x60>)
 8002b52:	ec51 0b10 	vmov	r0, r1, d0
 8002b56:	2200      	movs	r2, #0
 8002b58:	f7fd ffde 	bl	8000b18 <__aeabi_dcmpgt>
 8002b5c:	b150      	cbz	r0, 8002b74 <asin+0x50>
 8002b5e:	f7ff f955 	bl	8001e0c <__errno>
 8002b62:	ecbd 8b02 	vpop	{d8}
 8002b66:	2321      	movs	r3, #33	; 0x21
 8002b68:	6003      	str	r3, [r0, #0]
 8002b6a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002b6e:	4806      	ldr	r0, [pc, #24]	; (8002b88 <asin+0x64>)
 8002b70:	f000 bfae 	b.w	8003ad0 <nan>
 8002b74:	eeb0 0a48 	vmov.f32	s0, s16
 8002b78:	eef0 0a68 	vmov.f32	s1, s17
 8002b7c:	ecbd 8b02 	vpop	{d8}
 8002b80:	bd38      	pop	{r3, r4, r5, pc}
 8002b82:	bf00      	nop
 8002b84:	3ff00000 	.word	0x3ff00000
 8002b88:	0800470b 	.word	0x0800470b
 8002b8c:	00000000 	.word	0x00000000

08002b90 <__ieee754_acos>:
 8002b90:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b94:	ec55 4b10 	vmov	r4, r5, d0
 8002b98:	49b7      	ldr	r1, [pc, #732]	; (8002e78 <__ieee754_acos+0x2e8>)
 8002b9a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8002b9e:	428b      	cmp	r3, r1
 8002ba0:	dd1b      	ble.n	8002bda <__ieee754_acos+0x4a>
 8002ba2:	f103 4340 	add.w	r3, r3, #3221225472	; 0xc0000000
 8002ba6:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8002baa:	4323      	orrs	r3, r4
 8002bac:	d106      	bne.n	8002bbc <__ieee754_acos+0x2c>
 8002bae:	2d00      	cmp	r5, #0
 8002bb0:	f300 8211 	bgt.w	8002fd6 <__ieee754_acos+0x446>
 8002bb4:	ed9f 0b96 	vldr	d0, [pc, #600]	; 8002e10 <__ieee754_acos+0x280>
 8002bb8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bbc:	ee10 2a10 	vmov	r2, s0
 8002bc0:	462b      	mov	r3, r5
 8002bc2:	ee10 0a10 	vmov	r0, s0
 8002bc6:	4629      	mov	r1, r5
 8002bc8:	f7fd fb5e 	bl	8000288 <__aeabi_dsub>
 8002bcc:	4602      	mov	r2, r0
 8002bce:	460b      	mov	r3, r1
 8002bd0:	f7fd fe3c 	bl	800084c <__aeabi_ddiv>
 8002bd4:	ec41 0b10 	vmov	d0, r0, r1
 8002bd8:	e7ee      	b.n	8002bb8 <__ieee754_acos+0x28>
 8002bda:	49a8      	ldr	r1, [pc, #672]	; (8002e7c <__ieee754_acos+0x2ec>)
 8002bdc:	428b      	cmp	r3, r1
 8002bde:	f300 8087 	bgt.w	8002cf0 <__ieee754_acos+0x160>
 8002be2:	4aa7      	ldr	r2, [pc, #668]	; (8002e80 <__ieee754_acos+0x2f0>)
 8002be4:	4293      	cmp	r3, r2
 8002be6:	f340 81f9 	ble.w	8002fdc <__ieee754_acos+0x44c>
 8002bea:	ee10 2a10 	vmov	r2, s0
 8002bee:	ee10 0a10 	vmov	r0, s0
 8002bf2:	462b      	mov	r3, r5
 8002bf4:	4629      	mov	r1, r5
 8002bf6:	f7fd fcff 	bl	80005f8 <__aeabi_dmul>
 8002bfa:	a387      	add	r3, pc, #540	; (adr r3, 8002e18 <__ieee754_acos+0x288>)
 8002bfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c00:	4606      	mov	r6, r0
 8002c02:	460f      	mov	r7, r1
 8002c04:	f7fd fcf8 	bl	80005f8 <__aeabi_dmul>
 8002c08:	a385      	add	r3, pc, #532	; (adr r3, 8002e20 <__ieee754_acos+0x290>)
 8002c0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c0e:	f7fd fb3d 	bl	800028c <__adddf3>
 8002c12:	4632      	mov	r2, r6
 8002c14:	463b      	mov	r3, r7
 8002c16:	f7fd fcef 	bl	80005f8 <__aeabi_dmul>
 8002c1a:	a383      	add	r3, pc, #524	; (adr r3, 8002e28 <__ieee754_acos+0x298>)
 8002c1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c20:	f7fd fb32 	bl	8000288 <__aeabi_dsub>
 8002c24:	4632      	mov	r2, r6
 8002c26:	463b      	mov	r3, r7
 8002c28:	f7fd fce6 	bl	80005f8 <__aeabi_dmul>
 8002c2c:	a380      	add	r3, pc, #512	; (adr r3, 8002e30 <__ieee754_acos+0x2a0>)
 8002c2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c32:	f7fd fb2b 	bl	800028c <__adddf3>
 8002c36:	4632      	mov	r2, r6
 8002c38:	463b      	mov	r3, r7
 8002c3a:	f7fd fcdd 	bl	80005f8 <__aeabi_dmul>
 8002c3e:	a37e      	add	r3, pc, #504	; (adr r3, 8002e38 <__ieee754_acos+0x2a8>)
 8002c40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c44:	f7fd fb20 	bl	8000288 <__aeabi_dsub>
 8002c48:	4632      	mov	r2, r6
 8002c4a:	463b      	mov	r3, r7
 8002c4c:	f7fd fcd4 	bl	80005f8 <__aeabi_dmul>
 8002c50:	a37b      	add	r3, pc, #492	; (adr r3, 8002e40 <__ieee754_acos+0x2b0>)
 8002c52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c56:	f7fd fb19 	bl	800028c <__adddf3>
 8002c5a:	4632      	mov	r2, r6
 8002c5c:	463b      	mov	r3, r7
 8002c5e:	f7fd fccb 	bl	80005f8 <__aeabi_dmul>
 8002c62:	a379      	add	r3, pc, #484	; (adr r3, 8002e48 <__ieee754_acos+0x2b8>)
 8002c64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c68:	4680      	mov	r8, r0
 8002c6a:	4689      	mov	r9, r1
 8002c6c:	4630      	mov	r0, r6
 8002c6e:	4639      	mov	r1, r7
 8002c70:	f7fd fcc2 	bl	80005f8 <__aeabi_dmul>
 8002c74:	a376      	add	r3, pc, #472	; (adr r3, 8002e50 <__ieee754_acos+0x2c0>)
 8002c76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c7a:	f7fd fb05 	bl	8000288 <__aeabi_dsub>
 8002c7e:	4632      	mov	r2, r6
 8002c80:	463b      	mov	r3, r7
 8002c82:	f7fd fcb9 	bl	80005f8 <__aeabi_dmul>
 8002c86:	a374      	add	r3, pc, #464	; (adr r3, 8002e58 <__ieee754_acos+0x2c8>)
 8002c88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c8c:	f7fd fafe 	bl	800028c <__adddf3>
 8002c90:	4632      	mov	r2, r6
 8002c92:	463b      	mov	r3, r7
 8002c94:	f7fd fcb0 	bl	80005f8 <__aeabi_dmul>
 8002c98:	a371      	add	r3, pc, #452	; (adr r3, 8002e60 <__ieee754_acos+0x2d0>)
 8002c9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c9e:	f7fd faf3 	bl	8000288 <__aeabi_dsub>
 8002ca2:	4632      	mov	r2, r6
 8002ca4:	463b      	mov	r3, r7
 8002ca6:	f7fd fca7 	bl	80005f8 <__aeabi_dmul>
 8002caa:	4b76      	ldr	r3, [pc, #472]	; (8002e84 <__ieee754_acos+0x2f4>)
 8002cac:	2200      	movs	r2, #0
 8002cae:	f7fd faed 	bl	800028c <__adddf3>
 8002cb2:	4602      	mov	r2, r0
 8002cb4:	460b      	mov	r3, r1
 8002cb6:	4640      	mov	r0, r8
 8002cb8:	4649      	mov	r1, r9
 8002cba:	f7fd fdc7 	bl	800084c <__aeabi_ddiv>
 8002cbe:	4622      	mov	r2, r4
 8002cc0:	462b      	mov	r3, r5
 8002cc2:	f7fd fc99 	bl	80005f8 <__aeabi_dmul>
 8002cc6:	4602      	mov	r2, r0
 8002cc8:	460b      	mov	r3, r1
 8002cca:	a167      	add	r1, pc, #412	; (adr r1, 8002e68 <__ieee754_acos+0x2d8>)
 8002ccc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002cd0:	f7fd fada 	bl	8000288 <__aeabi_dsub>
 8002cd4:	4602      	mov	r2, r0
 8002cd6:	460b      	mov	r3, r1
 8002cd8:	4620      	mov	r0, r4
 8002cda:	4629      	mov	r1, r5
 8002cdc:	f7fd fad4 	bl	8000288 <__aeabi_dsub>
 8002ce0:	4602      	mov	r2, r0
 8002ce2:	460b      	mov	r3, r1
 8002ce4:	a162      	add	r1, pc, #392	; (adr r1, 8002e70 <__ieee754_acos+0x2e0>)
 8002ce6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002cea:	f7fd facd 	bl	8000288 <__aeabi_dsub>
 8002cee:	e771      	b.n	8002bd4 <__ieee754_acos+0x44>
 8002cf0:	2d00      	cmp	r5, #0
 8002cf2:	f280 80cb 	bge.w	8002e8c <__ieee754_acos+0x2fc>
 8002cf6:	ee10 0a10 	vmov	r0, s0
 8002cfa:	4b62      	ldr	r3, [pc, #392]	; (8002e84 <__ieee754_acos+0x2f4>)
 8002cfc:	2200      	movs	r2, #0
 8002cfe:	4629      	mov	r1, r5
 8002d00:	f7fd fac4 	bl	800028c <__adddf3>
 8002d04:	4b60      	ldr	r3, [pc, #384]	; (8002e88 <__ieee754_acos+0x2f8>)
 8002d06:	2200      	movs	r2, #0
 8002d08:	f7fd fc76 	bl	80005f8 <__aeabi_dmul>
 8002d0c:	a342      	add	r3, pc, #264	; (adr r3, 8002e18 <__ieee754_acos+0x288>)
 8002d0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d12:	4604      	mov	r4, r0
 8002d14:	460d      	mov	r5, r1
 8002d16:	f7fd fc6f 	bl	80005f8 <__aeabi_dmul>
 8002d1a:	a341      	add	r3, pc, #260	; (adr r3, 8002e20 <__ieee754_acos+0x290>)
 8002d1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d20:	f7fd fab4 	bl	800028c <__adddf3>
 8002d24:	4622      	mov	r2, r4
 8002d26:	462b      	mov	r3, r5
 8002d28:	f7fd fc66 	bl	80005f8 <__aeabi_dmul>
 8002d2c:	a33e      	add	r3, pc, #248	; (adr r3, 8002e28 <__ieee754_acos+0x298>)
 8002d2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d32:	f7fd faa9 	bl	8000288 <__aeabi_dsub>
 8002d36:	4622      	mov	r2, r4
 8002d38:	462b      	mov	r3, r5
 8002d3a:	f7fd fc5d 	bl	80005f8 <__aeabi_dmul>
 8002d3e:	a33c      	add	r3, pc, #240	; (adr r3, 8002e30 <__ieee754_acos+0x2a0>)
 8002d40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d44:	f7fd faa2 	bl	800028c <__adddf3>
 8002d48:	4622      	mov	r2, r4
 8002d4a:	462b      	mov	r3, r5
 8002d4c:	f7fd fc54 	bl	80005f8 <__aeabi_dmul>
 8002d50:	a339      	add	r3, pc, #228	; (adr r3, 8002e38 <__ieee754_acos+0x2a8>)
 8002d52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d56:	f7fd fa97 	bl	8000288 <__aeabi_dsub>
 8002d5a:	4622      	mov	r2, r4
 8002d5c:	462b      	mov	r3, r5
 8002d5e:	f7fd fc4b 	bl	80005f8 <__aeabi_dmul>
 8002d62:	a337      	add	r3, pc, #220	; (adr r3, 8002e40 <__ieee754_acos+0x2b0>)
 8002d64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d68:	f7fd fa90 	bl	800028c <__adddf3>
 8002d6c:	4622      	mov	r2, r4
 8002d6e:	462b      	mov	r3, r5
 8002d70:	f7fd fc42 	bl	80005f8 <__aeabi_dmul>
 8002d74:	ec45 4b10 	vmov	d0, r4, r5
 8002d78:	4680      	mov	r8, r0
 8002d7a:	4689      	mov	r9, r1
 8002d7c:	f000 fdcc 	bl	8003918 <__ieee754_sqrt>
 8002d80:	a331      	add	r3, pc, #196	; (adr r3, 8002e48 <__ieee754_acos+0x2b8>)
 8002d82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d86:	4620      	mov	r0, r4
 8002d88:	4629      	mov	r1, r5
 8002d8a:	ec57 6b10 	vmov	r6, r7, d0
 8002d8e:	f7fd fc33 	bl	80005f8 <__aeabi_dmul>
 8002d92:	a32f      	add	r3, pc, #188	; (adr r3, 8002e50 <__ieee754_acos+0x2c0>)
 8002d94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d98:	f7fd fa76 	bl	8000288 <__aeabi_dsub>
 8002d9c:	4622      	mov	r2, r4
 8002d9e:	462b      	mov	r3, r5
 8002da0:	f7fd fc2a 	bl	80005f8 <__aeabi_dmul>
 8002da4:	a32c      	add	r3, pc, #176	; (adr r3, 8002e58 <__ieee754_acos+0x2c8>)
 8002da6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002daa:	f7fd fa6f 	bl	800028c <__adddf3>
 8002dae:	4622      	mov	r2, r4
 8002db0:	462b      	mov	r3, r5
 8002db2:	f7fd fc21 	bl	80005f8 <__aeabi_dmul>
 8002db6:	a32a      	add	r3, pc, #168	; (adr r3, 8002e60 <__ieee754_acos+0x2d0>)
 8002db8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dbc:	f7fd fa64 	bl	8000288 <__aeabi_dsub>
 8002dc0:	4622      	mov	r2, r4
 8002dc2:	462b      	mov	r3, r5
 8002dc4:	f7fd fc18 	bl	80005f8 <__aeabi_dmul>
 8002dc8:	4b2e      	ldr	r3, [pc, #184]	; (8002e84 <__ieee754_acos+0x2f4>)
 8002dca:	2200      	movs	r2, #0
 8002dcc:	f7fd fa5e 	bl	800028c <__adddf3>
 8002dd0:	4602      	mov	r2, r0
 8002dd2:	460b      	mov	r3, r1
 8002dd4:	4640      	mov	r0, r8
 8002dd6:	4649      	mov	r1, r9
 8002dd8:	f7fd fd38 	bl	800084c <__aeabi_ddiv>
 8002ddc:	4632      	mov	r2, r6
 8002dde:	463b      	mov	r3, r7
 8002de0:	f7fd fc0a 	bl	80005f8 <__aeabi_dmul>
 8002de4:	a320      	add	r3, pc, #128	; (adr r3, 8002e68 <__ieee754_acos+0x2d8>)
 8002de6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dea:	f7fd fa4d 	bl	8000288 <__aeabi_dsub>
 8002dee:	4632      	mov	r2, r6
 8002df0:	463b      	mov	r3, r7
 8002df2:	f7fd fa4b 	bl	800028c <__adddf3>
 8002df6:	4602      	mov	r2, r0
 8002df8:	460b      	mov	r3, r1
 8002dfa:	f7fd fa47 	bl	800028c <__adddf3>
 8002dfe:	4602      	mov	r2, r0
 8002e00:	460b      	mov	r3, r1
 8002e02:	a103      	add	r1, pc, #12	; (adr r1, 8002e10 <__ieee754_acos+0x280>)
 8002e04:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002e08:	e76f      	b.n	8002cea <__ieee754_acos+0x15a>
 8002e0a:	bf00      	nop
 8002e0c:	f3af 8000 	nop.w
 8002e10:	54442d18 	.word	0x54442d18
 8002e14:	400921fb 	.word	0x400921fb
 8002e18:	0dfdf709 	.word	0x0dfdf709
 8002e1c:	3f023de1 	.word	0x3f023de1
 8002e20:	7501b288 	.word	0x7501b288
 8002e24:	3f49efe0 	.word	0x3f49efe0
 8002e28:	b5688f3b 	.word	0xb5688f3b
 8002e2c:	3fa48228 	.word	0x3fa48228
 8002e30:	0e884455 	.word	0x0e884455
 8002e34:	3fc9c155 	.word	0x3fc9c155
 8002e38:	03eb6f7d 	.word	0x03eb6f7d
 8002e3c:	3fd4d612 	.word	0x3fd4d612
 8002e40:	55555555 	.word	0x55555555
 8002e44:	3fc55555 	.word	0x3fc55555
 8002e48:	b12e9282 	.word	0xb12e9282
 8002e4c:	3fb3b8c5 	.word	0x3fb3b8c5
 8002e50:	1b8d0159 	.word	0x1b8d0159
 8002e54:	3fe6066c 	.word	0x3fe6066c
 8002e58:	9c598ac8 	.word	0x9c598ac8
 8002e5c:	40002ae5 	.word	0x40002ae5
 8002e60:	1c8a2d4b 	.word	0x1c8a2d4b
 8002e64:	40033a27 	.word	0x40033a27
 8002e68:	33145c07 	.word	0x33145c07
 8002e6c:	3c91a626 	.word	0x3c91a626
 8002e70:	54442d18 	.word	0x54442d18
 8002e74:	3ff921fb 	.word	0x3ff921fb
 8002e78:	3fefffff 	.word	0x3fefffff
 8002e7c:	3fdfffff 	.word	0x3fdfffff
 8002e80:	3c600000 	.word	0x3c600000
 8002e84:	3ff00000 	.word	0x3ff00000
 8002e88:	3fe00000 	.word	0x3fe00000
 8002e8c:	ee10 2a10 	vmov	r2, s0
 8002e90:	462b      	mov	r3, r5
 8002e92:	496d      	ldr	r1, [pc, #436]	; (8003048 <__ieee754_acos+0x4b8>)
 8002e94:	2000      	movs	r0, #0
 8002e96:	f7fd f9f7 	bl	8000288 <__aeabi_dsub>
 8002e9a:	4b6c      	ldr	r3, [pc, #432]	; (800304c <__ieee754_acos+0x4bc>)
 8002e9c:	2200      	movs	r2, #0
 8002e9e:	f7fd fbab 	bl	80005f8 <__aeabi_dmul>
 8002ea2:	4604      	mov	r4, r0
 8002ea4:	460d      	mov	r5, r1
 8002ea6:	ec45 4b10 	vmov	d0, r4, r5
 8002eaa:	f000 fd35 	bl	8003918 <__ieee754_sqrt>
 8002eae:	a34e      	add	r3, pc, #312	; (adr r3, 8002fe8 <__ieee754_acos+0x458>)
 8002eb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002eb4:	4620      	mov	r0, r4
 8002eb6:	4629      	mov	r1, r5
 8002eb8:	ec59 8b10 	vmov	r8, r9, d0
 8002ebc:	f7fd fb9c 	bl	80005f8 <__aeabi_dmul>
 8002ec0:	a34b      	add	r3, pc, #300	; (adr r3, 8002ff0 <__ieee754_acos+0x460>)
 8002ec2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ec6:	f7fd f9e1 	bl	800028c <__adddf3>
 8002eca:	4622      	mov	r2, r4
 8002ecc:	462b      	mov	r3, r5
 8002ece:	f7fd fb93 	bl	80005f8 <__aeabi_dmul>
 8002ed2:	a349      	add	r3, pc, #292	; (adr r3, 8002ff8 <__ieee754_acos+0x468>)
 8002ed4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ed8:	f7fd f9d6 	bl	8000288 <__aeabi_dsub>
 8002edc:	4622      	mov	r2, r4
 8002ede:	462b      	mov	r3, r5
 8002ee0:	f7fd fb8a 	bl	80005f8 <__aeabi_dmul>
 8002ee4:	a346      	add	r3, pc, #280	; (adr r3, 8003000 <__ieee754_acos+0x470>)
 8002ee6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002eea:	f7fd f9cf 	bl	800028c <__adddf3>
 8002eee:	4622      	mov	r2, r4
 8002ef0:	462b      	mov	r3, r5
 8002ef2:	f7fd fb81 	bl	80005f8 <__aeabi_dmul>
 8002ef6:	a344      	add	r3, pc, #272	; (adr r3, 8003008 <__ieee754_acos+0x478>)
 8002ef8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002efc:	f7fd f9c4 	bl	8000288 <__aeabi_dsub>
 8002f00:	4622      	mov	r2, r4
 8002f02:	462b      	mov	r3, r5
 8002f04:	f7fd fb78 	bl	80005f8 <__aeabi_dmul>
 8002f08:	a341      	add	r3, pc, #260	; (adr r3, 8003010 <__ieee754_acos+0x480>)
 8002f0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f0e:	f7fd f9bd 	bl	800028c <__adddf3>
 8002f12:	4622      	mov	r2, r4
 8002f14:	462b      	mov	r3, r5
 8002f16:	f7fd fb6f 	bl	80005f8 <__aeabi_dmul>
 8002f1a:	a33f      	add	r3, pc, #252	; (adr r3, 8003018 <__ieee754_acos+0x488>)
 8002f1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f20:	4682      	mov	sl, r0
 8002f22:	468b      	mov	fp, r1
 8002f24:	4620      	mov	r0, r4
 8002f26:	4629      	mov	r1, r5
 8002f28:	f7fd fb66 	bl	80005f8 <__aeabi_dmul>
 8002f2c:	a33c      	add	r3, pc, #240	; (adr r3, 8003020 <__ieee754_acos+0x490>)
 8002f2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f32:	f7fd f9a9 	bl	8000288 <__aeabi_dsub>
 8002f36:	4622      	mov	r2, r4
 8002f38:	462b      	mov	r3, r5
 8002f3a:	f7fd fb5d 	bl	80005f8 <__aeabi_dmul>
 8002f3e:	a33a      	add	r3, pc, #232	; (adr r3, 8003028 <__ieee754_acos+0x498>)
 8002f40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f44:	f7fd f9a2 	bl	800028c <__adddf3>
 8002f48:	4622      	mov	r2, r4
 8002f4a:	462b      	mov	r3, r5
 8002f4c:	f7fd fb54 	bl	80005f8 <__aeabi_dmul>
 8002f50:	a337      	add	r3, pc, #220	; (adr r3, 8003030 <__ieee754_acos+0x4a0>)
 8002f52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f56:	f7fd f997 	bl	8000288 <__aeabi_dsub>
 8002f5a:	4622      	mov	r2, r4
 8002f5c:	462b      	mov	r3, r5
 8002f5e:	f7fd fb4b 	bl	80005f8 <__aeabi_dmul>
 8002f62:	4b39      	ldr	r3, [pc, #228]	; (8003048 <__ieee754_acos+0x4b8>)
 8002f64:	2200      	movs	r2, #0
 8002f66:	f7fd f991 	bl	800028c <__adddf3>
 8002f6a:	4602      	mov	r2, r0
 8002f6c:	460b      	mov	r3, r1
 8002f6e:	4650      	mov	r0, sl
 8002f70:	4659      	mov	r1, fp
 8002f72:	f7fd fc6b 	bl	800084c <__aeabi_ddiv>
 8002f76:	4642      	mov	r2, r8
 8002f78:	464b      	mov	r3, r9
 8002f7a:	f7fd fb3d 	bl	80005f8 <__aeabi_dmul>
 8002f7e:	2600      	movs	r6, #0
 8002f80:	4682      	mov	sl, r0
 8002f82:	468b      	mov	fp, r1
 8002f84:	4632      	mov	r2, r6
 8002f86:	464b      	mov	r3, r9
 8002f88:	4630      	mov	r0, r6
 8002f8a:	4649      	mov	r1, r9
 8002f8c:	f7fd fb34 	bl	80005f8 <__aeabi_dmul>
 8002f90:	4602      	mov	r2, r0
 8002f92:	460b      	mov	r3, r1
 8002f94:	4620      	mov	r0, r4
 8002f96:	4629      	mov	r1, r5
 8002f98:	f7fd f976 	bl	8000288 <__aeabi_dsub>
 8002f9c:	4632      	mov	r2, r6
 8002f9e:	4604      	mov	r4, r0
 8002fa0:	460d      	mov	r5, r1
 8002fa2:	464b      	mov	r3, r9
 8002fa4:	4640      	mov	r0, r8
 8002fa6:	4649      	mov	r1, r9
 8002fa8:	f7fd f970 	bl	800028c <__adddf3>
 8002fac:	4602      	mov	r2, r0
 8002fae:	460b      	mov	r3, r1
 8002fb0:	4620      	mov	r0, r4
 8002fb2:	4629      	mov	r1, r5
 8002fb4:	f7fd fc4a 	bl	800084c <__aeabi_ddiv>
 8002fb8:	4602      	mov	r2, r0
 8002fba:	460b      	mov	r3, r1
 8002fbc:	4650      	mov	r0, sl
 8002fbe:	4659      	mov	r1, fp
 8002fc0:	f7fd f964 	bl	800028c <__adddf3>
 8002fc4:	4632      	mov	r2, r6
 8002fc6:	464b      	mov	r3, r9
 8002fc8:	f7fd f960 	bl	800028c <__adddf3>
 8002fcc:	4602      	mov	r2, r0
 8002fce:	460b      	mov	r3, r1
 8002fd0:	f7fd f95c 	bl	800028c <__adddf3>
 8002fd4:	e5fe      	b.n	8002bd4 <__ieee754_acos+0x44>
 8002fd6:	ed9f 0b18 	vldr	d0, [pc, #96]	; 8003038 <__ieee754_acos+0x4a8>
 8002fda:	e5ed      	b.n	8002bb8 <__ieee754_acos+0x28>
 8002fdc:	ed9f 0b18 	vldr	d0, [pc, #96]	; 8003040 <__ieee754_acos+0x4b0>
 8002fe0:	e5ea      	b.n	8002bb8 <__ieee754_acos+0x28>
 8002fe2:	bf00      	nop
 8002fe4:	f3af 8000 	nop.w
 8002fe8:	0dfdf709 	.word	0x0dfdf709
 8002fec:	3f023de1 	.word	0x3f023de1
 8002ff0:	7501b288 	.word	0x7501b288
 8002ff4:	3f49efe0 	.word	0x3f49efe0
 8002ff8:	b5688f3b 	.word	0xb5688f3b
 8002ffc:	3fa48228 	.word	0x3fa48228
 8003000:	0e884455 	.word	0x0e884455
 8003004:	3fc9c155 	.word	0x3fc9c155
 8003008:	03eb6f7d 	.word	0x03eb6f7d
 800300c:	3fd4d612 	.word	0x3fd4d612
 8003010:	55555555 	.word	0x55555555
 8003014:	3fc55555 	.word	0x3fc55555
 8003018:	b12e9282 	.word	0xb12e9282
 800301c:	3fb3b8c5 	.word	0x3fb3b8c5
 8003020:	1b8d0159 	.word	0x1b8d0159
 8003024:	3fe6066c 	.word	0x3fe6066c
 8003028:	9c598ac8 	.word	0x9c598ac8
 800302c:	40002ae5 	.word	0x40002ae5
 8003030:	1c8a2d4b 	.word	0x1c8a2d4b
 8003034:	40033a27 	.word	0x40033a27
	...
 8003040:	54442d18 	.word	0x54442d18
 8003044:	3ff921fb 	.word	0x3ff921fb
 8003048:	3ff00000 	.word	0x3ff00000
 800304c:	3fe00000 	.word	0x3fe00000

08003050 <__ieee754_asin>:
 8003050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003054:	ed2d 8b04 	vpush	{d8-d9}
 8003058:	ec55 4b10 	vmov	r4, r5, d0
 800305c:	4bcc      	ldr	r3, [pc, #816]	; (8003390 <__ieee754_asin+0x340>)
 800305e:	b083      	sub	sp, #12
 8003060:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8003064:	4598      	cmp	r8, r3
 8003066:	9501      	str	r5, [sp, #4]
 8003068:	dd33      	ble.n	80030d2 <__ieee754_asin+0x82>
 800306a:	f108 4840 	add.w	r8, r8, #3221225472	; 0xc0000000
 800306e:	f508 1880 	add.w	r8, r8, #1048576	; 0x100000
 8003072:	ea58 0804 	orrs.w	r8, r8, r4
 8003076:	d117      	bne.n	80030a8 <__ieee754_asin+0x58>
 8003078:	a3ab      	add	r3, pc, #684	; (adr r3, 8003328 <__ieee754_asin+0x2d8>)
 800307a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800307e:	ee10 0a10 	vmov	r0, s0
 8003082:	4629      	mov	r1, r5
 8003084:	f7fd fab8 	bl	80005f8 <__aeabi_dmul>
 8003088:	a3a9      	add	r3, pc, #676	; (adr r3, 8003330 <__ieee754_asin+0x2e0>)
 800308a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800308e:	4606      	mov	r6, r0
 8003090:	460f      	mov	r7, r1
 8003092:	4620      	mov	r0, r4
 8003094:	4629      	mov	r1, r5
 8003096:	f7fd faaf 	bl	80005f8 <__aeabi_dmul>
 800309a:	4602      	mov	r2, r0
 800309c:	460b      	mov	r3, r1
 800309e:	4630      	mov	r0, r6
 80030a0:	4639      	mov	r1, r7
 80030a2:	f7fd f8f3 	bl	800028c <__adddf3>
 80030a6:	e00b      	b.n	80030c0 <__ieee754_asin+0x70>
 80030a8:	ee10 2a10 	vmov	r2, s0
 80030ac:	462b      	mov	r3, r5
 80030ae:	ee10 0a10 	vmov	r0, s0
 80030b2:	4629      	mov	r1, r5
 80030b4:	f7fd f8e8 	bl	8000288 <__aeabi_dsub>
 80030b8:	4602      	mov	r2, r0
 80030ba:	460b      	mov	r3, r1
 80030bc:	f7fd fbc6 	bl	800084c <__aeabi_ddiv>
 80030c0:	4604      	mov	r4, r0
 80030c2:	460d      	mov	r5, r1
 80030c4:	ec45 4b10 	vmov	d0, r4, r5
 80030c8:	b003      	add	sp, #12
 80030ca:	ecbd 8b04 	vpop	{d8-d9}
 80030ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030d2:	4bb0      	ldr	r3, [pc, #704]	; (8003394 <__ieee754_asin+0x344>)
 80030d4:	4598      	cmp	r8, r3
 80030d6:	dc11      	bgt.n	80030fc <__ieee754_asin+0xac>
 80030d8:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 80030dc:	f280 80ae 	bge.w	800323c <__ieee754_asin+0x1ec>
 80030e0:	a395      	add	r3, pc, #596	; (adr r3, 8003338 <__ieee754_asin+0x2e8>)
 80030e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80030e6:	ee10 0a10 	vmov	r0, s0
 80030ea:	4629      	mov	r1, r5
 80030ec:	f7fd f8ce 	bl	800028c <__adddf3>
 80030f0:	4ba9      	ldr	r3, [pc, #676]	; (8003398 <__ieee754_asin+0x348>)
 80030f2:	2200      	movs	r2, #0
 80030f4:	f7fd fd10 	bl	8000b18 <__aeabi_dcmpgt>
 80030f8:	2800      	cmp	r0, #0
 80030fa:	d1e3      	bne.n	80030c4 <__ieee754_asin+0x74>
 80030fc:	ec45 4b10 	vmov	d0, r4, r5
 8003100:	f000 fbf6 	bl	80038f0 <fabs>
 8003104:	49a4      	ldr	r1, [pc, #656]	; (8003398 <__ieee754_asin+0x348>)
 8003106:	ec53 2b10 	vmov	r2, r3, d0
 800310a:	2000      	movs	r0, #0
 800310c:	f7fd f8bc 	bl	8000288 <__aeabi_dsub>
 8003110:	4ba2      	ldr	r3, [pc, #648]	; (800339c <__ieee754_asin+0x34c>)
 8003112:	2200      	movs	r2, #0
 8003114:	f7fd fa70 	bl	80005f8 <__aeabi_dmul>
 8003118:	a389      	add	r3, pc, #548	; (adr r3, 8003340 <__ieee754_asin+0x2f0>)
 800311a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800311e:	4604      	mov	r4, r0
 8003120:	460d      	mov	r5, r1
 8003122:	f7fd fa69 	bl	80005f8 <__aeabi_dmul>
 8003126:	a388      	add	r3, pc, #544	; (adr r3, 8003348 <__ieee754_asin+0x2f8>)
 8003128:	e9d3 2300 	ldrd	r2, r3, [r3]
 800312c:	f7fd f8ae 	bl	800028c <__adddf3>
 8003130:	4622      	mov	r2, r4
 8003132:	462b      	mov	r3, r5
 8003134:	f7fd fa60 	bl	80005f8 <__aeabi_dmul>
 8003138:	a385      	add	r3, pc, #532	; (adr r3, 8003350 <__ieee754_asin+0x300>)
 800313a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800313e:	f7fd f8a3 	bl	8000288 <__aeabi_dsub>
 8003142:	4622      	mov	r2, r4
 8003144:	462b      	mov	r3, r5
 8003146:	f7fd fa57 	bl	80005f8 <__aeabi_dmul>
 800314a:	a383      	add	r3, pc, #524	; (adr r3, 8003358 <__ieee754_asin+0x308>)
 800314c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003150:	f7fd f89c 	bl	800028c <__adddf3>
 8003154:	4622      	mov	r2, r4
 8003156:	462b      	mov	r3, r5
 8003158:	f7fd fa4e 	bl	80005f8 <__aeabi_dmul>
 800315c:	a380      	add	r3, pc, #512	; (adr r3, 8003360 <__ieee754_asin+0x310>)
 800315e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003162:	f7fd f891 	bl	8000288 <__aeabi_dsub>
 8003166:	4622      	mov	r2, r4
 8003168:	462b      	mov	r3, r5
 800316a:	f7fd fa45 	bl	80005f8 <__aeabi_dmul>
 800316e:	a37e      	add	r3, pc, #504	; (adr r3, 8003368 <__ieee754_asin+0x318>)
 8003170:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003174:	f7fd f88a 	bl	800028c <__adddf3>
 8003178:	4622      	mov	r2, r4
 800317a:	462b      	mov	r3, r5
 800317c:	f7fd fa3c 	bl	80005f8 <__aeabi_dmul>
 8003180:	a37b      	add	r3, pc, #492	; (adr r3, 8003370 <__ieee754_asin+0x320>)
 8003182:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003186:	ec41 0b18 	vmov	d8, r0, r1
 800318a:	4620      	mov	r0, r4
 800318c:	4629      	mov	r1, r5
 800318e:	f7fd fa33 	bl	80005f8 <__aeabi_dmul>
 8003192:	a379      	add	r3, pc, #484	; (adr r3, 8003378 <__ieee754_asin+0x328>)
 8003194:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003198:	f7fd f876 	bl	8000288 <__aeabi_dsub>
 800319c:	4622      	mov	r2, r4
 800319e:	462b      	mov	r3, r5
 80031a0:	f7fd fa2a 	bl	80005f8 <__aeabi_dmul>
 80031a4:	a376      	add	r3, pc, #472	; (adr r3, 8003380 <__ieee754_asin+0x330>)
 80031a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031aa:	f7fd f86f 	bl	800028c <__adddf3>
 80031ae:	4622      	mov	r2, r4
 80031b0:	462b      	mov	r3, r5
 80031b2:	f7fd fa21 	bl	80005f8 <__aeabi_dmul>
 80031b6:	a374      	add	r3, pc, #464	; (adr r3, 8003388 <__ieee754_asin+0x338>)
 80031b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031bc:	f7fd f864 	bl	8000288 <__aeabi_dsub>
 80031c0:	4622      	mov	r2, r4
 80031c2:	462b      	mov	r3, r5
 80031c4:	f7fd fa18 	bl	80005f8 <__aeabi_dmul>
 80031c8:	4b73      	ldr	r3, [pc, #460]	; (8003398 <__ieee754_asin+0x348>)
 80031ca:	2200      	movs	r2, #0
 80031cc:	f7fd f85e 	bl	800028c <__adddf3>
 80031d0:	ec45 4b10 	vmov	d0, r4, r5
 80031d4:	4606      	mov	r6, r0
 80031d6:	460f      	mov	r7, r1
 80031d8:	f000 fb9e 	bl	8003918 <__ieee754_sqrt>
 80031dc:	4b70      	ldr	r3, [pc, #448]	; (80033a0 <__ieee754_asin+0x350>)
 80031de:	4598      	cmp	r8, r3
 80031e0:	ec5b ab10 	vmov	sl, fp, d0
 80031e4:	f340 80de 	ble.w	80033a4 <__ieee754_asin+0x354>
 80031e8:	4632      	mov	r2, r6
 80031ea:	463b      	mov	r3, r7
 80031ec:	ec51 0b18 	vmov	r0, r1, d8
 80031f0:	f7fd fb2c 	bl	800084c <__aeabi_ddiv>
 80031f4:	4652      	mov	r2, sl
 80031f6:	465b      	mov	r3, fp
 80031f8:	f7fd f9fe 	bl	80005f8 <__aeabi_dmul>
 80031fc:	4652      	mov	r2, sl
 80031fe:	465b      	mov	r3, fp
 8003200:	f7fd f844 	bl	800028c <__adddf3>
 8003204:	4602      	mov	r2, r0
 8003206:	460b      	mov	r3, r1
 8003208:	f7fd f840 	bl	800028c <__adddf3>
 800320c:	a348      	add	r3, pc, #288	; (adr r3, 8003330 <__ieee754_asin+0x2e0>)
 800320e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003212:	f7fd f839 	bl	8000288 <__aeabi_dsub>
 8003216:	4602      	mov	r2, r0
 8003218:	460b      	mov	r3, r1
 800321a:	a143      	add	r1, pc, #268	; (adr r1, 8003328 <__ieee754_asin+0x2d8>)
 800321c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003220:	f7fd f832 	bl	8000288 <__aeabi_dsub>
 8003224:	9b01      	ldr	r3, [sp, #4]
 8003226:	2b00      	cmp	r3, #0
 8003228:	bfdc      	itt	le
 800322a:	4602      	movle	r2, r0
 800322c:	f101 4300 	addle.w	r3, r1, #2147483648	; 0x80000000
 8003230:	4604      	mov	r4, r0
 8003232:	460d      	mov	r5, r1
 8003234:	bfdc      	itt	le
 8003236:	4614      	movle	r4, r2
 8003238:	461d      	movle	r5, r3
 800323a:	e743      	b.n	80030c4 <__ieee754_asin+0x74>
 800323c:	ee10 2a10 	vmov	r2, s0
 8003240:	ee10 0a10 	vmov	r0, s0
 8003244:	462b      	mov	r3, r5
 8003246:	4629      	mov	r1, r5
 8003248:	f7fd f9d6 	bl	80005f8 <__aeabi_dmul>
 800324c:	a33c      	add	r3, pc, #240	; (adr r3, 8003340 <__ieee754_asin+0x2f0>)
 800324e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003252:	4606      	mov	r6, r0
 8003254:	460f      	mov	r7, r1
 8003256:	f7fd f9cf 	bl	80005f8 <__aeabi_dmul>
 800325a:	a33b      	add	r3, pc, #236	; (adr r3, 8003348 <__ieee754_asin+0x2f8>)
 800325c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003260:	f7fd f814 	bl	800028c <__adddf3>
 8003264:	4632      	mov	r2, r6
 8003266:	463b      	mov	r3, r7
 8003268:	f7fd f9c6 	bl	80005f8 <__aeabi_dmul>
 800326c:	a338      	add	r3, pc, #224	; (adr r3, 8003350 <__ieee754_asin+0x300>)
 800326e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003272:	f7fd f809 	bl	8000288 <__aeabi_dsub>
 8003276:	4632      	mov	r2, r6
 8003278:	463b      	mov	r3, r7
 800327a:	f7fd f9bd 	bl	80005f8 <__aeabi_dmul>
 800327e:	a336      	add	r3, pc, #216	; (adr r3, 8003358 <__ieee754_asin+0x308>)
 8003280:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003284:	f7fd f802 	bl	800028c <__adddf3>
 8003288:	4632      	mov	r2, r6
 800328a:	463b      	mov	r3, r7
 800328c:	f7fd f9b4 	bl	80005f8 <__aeabi_dmul>
 8003290:	a333      	add	r3, pc, #204	; (adr r3, 8003360 <__ieee754_asin+0x310>)
 8003292:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003296:	f7fc fff7 	bl	8000288 <__aeabi_dsub>
 800329a:	4632      	mov	r2, r6
 800329c:	463b      	mov	r3, r7
 800329e:	f7fd f9ab 	bl	80005f8 <__aeabi_dmul>
 80032a2:	a331      	add	r3, pc, #196	; (adr r3, 8003368 <__ieee754_asin+0x318>)
 80032a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032a8:	f7fc fff0 	bl	800028c <__adddf3>
 80032ac:	4632      	mov	r2, r6
 80032ae:	463b      	mov	r3, r7
 80032b0:	f7fd f9a2 	bl	80005f8 <__aeabi_dmul>
 80032b4:	a32e      	add	r3, pc, #184	; (adr r3, 8003370 <__ieee754_asin+0x320>)
 80032b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032ba:	4680      	mov	r8, r0
 80032bc:	4689      	mov	r9, r1
 80032be:	4630      	mov	r0, r6
 80032c0:	4639      	mov	r1, r7
 80032c2:	f7fd f999 	bl	80005f8 <__aeabi_dmul>
 80032c6:	a32c      	add	r3, pc, #176	; (adr r3, 8003378 <__ieee754_asin+0x328>)
 80032c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032cc:	f7fc ffdc 	bl	8000288 <__aeabi_dsub>
 80032d0:	4632      	mov	r2, r6
 80032d2:	463b      	mov	r3, r7
 80032d4:	f7fd f990 	bl	80005f8 <__aeabi_dmul>
 80032d8:	a329      	add	r3, pc, #164	; (adr r3, 8003380 <__ieee754_asin+0x330>)
 80032da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032de:	f7fc ffd5 	bl	800028c <__adddf3>
 80032e2:	4632      	mov	r2, r6
 80032e4:	463b      	mov	r3, r7
 80032e6:	f7fd f987 	bl	80005f8 <__aeabi_dmul>
 80032ea:	a327      	add	r3, pc, #156	; (adr r3, 8003388 <__ieee754_asin+0x338>)
 80032ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032f0:	f7fc ffca 	bl	8000288 <__aeabi_dsub>
 80032f4:	4632      	mov	r2, r6
 80032f6:	463b      	mov	r3, r7
 80032f8:	f7fd f97e 	bl	80005f8 <__aeabi_dmul>
 80032fc:	4b26      	ldr	r3, [pc, #152]	; (8003398 <__ieee754_asin+0x348>)
 80032fe:	2200      	movs	r2, #0
 8003300:	f7fc ffc4 	bl	800028c <__adddf3>
 8003304:	4602      	mov	r2, r0
 8003306:	460b      	mov	r3, r1
 8003308:	4640      	mov	r0, r8
 800330a:	4649      	mov	r1, r9
 800330c:	f7fd fa9e 	bl	800084c <__aeabi_ddiv>
 8003310:	4622      	mov	r2, r4
 8003312:	462b      	mov	r3, r5
 8003314:	f7fd f970 	bl	80005f8 <__aeabi_dmul>
 8003318:	4602      	mov	r2, r0
 800331a:	460b      	mov	r3, r1
 800331c:	4620      	mov	r0, r4
 800331e:	4629      	mov	r1, r5
 8003320:	e6bf      	b.n	80030a2 <__ieee754_asin+0x52>
 8003322:	bf00      	nop
 8003324:	f3af 8000 	nop.w
 8003328:	54442d18 	.word	0x54442d18
 800332c:	3ff921fb 	.word	0x3ff921fb
 8003330:	33145c07 	.word	0x33145c07
 8003334:	3c91a626 	.word	0x3c91a626
 8003338:	8800759c 	.word	0x8800759c
 800333c:	7e37e43c 	.word	0x7e37e43c
 8003340:	0dfdf709 	.word	0x0dfdf709
 8003344:	3f023de1 	.word	0x3f023de1
 8003348:	7501b288 	.word	0x7501b288
 800334c:	3f49efe0 	.word	0x3f49efe0
 8003350:	b5688f3b 	.word	0xb5688f3b
 8003354:	3fa48228 	.word	0x3fa48228
 8003358:	0e884455 	.word	0x0e884455
 800335c:	3fc9c155 	.word	0x3fc9c155
 8003360:	03eb6f7d 	.word	0x03eb6f7d
 8003364:	3fd4d612 	.word	0x3fd4d612
 8003368:	55555555 	.word	0x55555555
 800336c:	3fc55555 	.word	0x3fc55555
 8003370:	b12e9282 	.word	0xb12e9282
 8003374:	3fb3b8c5 	.word	0x3fb3b8c5
 8003378:	1b8d0159 	.word	0x1b8d0159
 800337c:	3fe6066c 	.word	0x3fe6066c
 8003380:	9c598ac8 	.word	0x9c598ac8
 8003384:	40002ae5 	.word	0x40002ae5
 8003388:	1c8a2d4b 	.word	0x1c8a2d4b
 800338c:	40033a27 	.word	0x40033a27
 8003390:	3fefffff 	.word	0x3fefffff
 8003394:	3fdfffff 	.word	0x3fdfffff
 8003398:	3ff00000 	.word	0x3ff00000
 800339c:	3fe00000 	.word	0x3fe00000
 80033a0:	3fef3332 	.word	0x3fef3332
 80033a4:	ee10 2a10 	vmov	r2, s0
 80033a8:	ee10 0a10 	vmov	r0, s0
 80033ac:	465b      	mov	r3, fp
 80033ae:	4659      	mov	r1, fp
 80033b0:	f7fc ff6c 	bl	800028c <__adddf3>
 80033b4:	4632      	mov	r2, r6
 80033b6:	463b      	mov	r3, r7
 80033b8:	ec41 0b19 	vmov	d9, r0, r1
 80033bc:	ec51 0b18 	vmov	r0, r1, d8
 80033c0:	f7fd fa44 	bl	800084c <__aeabi_ddiv>
 80033c4:	4602      	mov	r2, r0
 80033c6:	460b      	mov	r3, r1
 80033c8:	ec51 0b19 	vmov	r0, r1, d9
 80033cc:	f7fd f914 	bl	80005f8 <__aeabi_dmul>
 80033d0:	f04f 0800 	mov.w	r8, #0
 80033d4:	4606      	mov	r6, r0
 80033d6:	460f      	mov	r7, r1
 80033d8:	4642      	mov	r2, r8
 80033da:	465b      	mov	r3, fp
 80033dc:	4640      	mov	r0, r8
 80033de:	4659      	mov	r1, fp
 80033e0:	f7fd f90a 	bl	80005f8 <__aeabi_dmul>
 80033e4:	4602      	mov	r2, r0
 80033e6:	460b      	mov	r3, r1
 80033e8:	4620      	mov	r0, r4
 80033ea:	4629      	mov	r1, r5
 80033ec:	f7fc ff4c 	bl	8000288 <__aeabi_dsub>
 80033f0:	4642      	mov	r2, r8
 80033f2:	4604      	mov	r4, r0
 80033f4:	460d      	mov	r5, r1
 80033f6:	465b      	mov	r3, fp
 80033f8:	4650      	mov	r0, sl
 80033fa:	4659      	mov	r1, fp
 80033fc:	f7fc ff46 	bl	800028c <__adddf3>
 8003400:	4602      	mov	r2, r0
 8003402:	460b      	mov	r3, r1
 8003404:	4620      	mov	r0, r4
 8003406:	4629      	mov	r1, r5
 8003408:	f7fd fa20 	bl	800084c <__aeabi_ddiv>
 800340c:	4602      	mov	r2, r0
 800340e:	460b      	mov	r3, r1
 8003410:	f7fc ff3c 	bl	800028c <__adddf3>
 8003414:	4602      	mov	r2, r0
 8003416:	460b      	mov	r3, r1
 8003418:	a113      	add	r1, pc, #76	; (adr r1, 8003468 <__ieee754_asin+0x418>)
 800341a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800341e:	f7fc ff33 	bl	8000288 <__aeabi_dsub>
 8003422:	4602      	mov	r2, r0
 8003424:	460b      	mov	r3, r1
 8003426:	4630      	mov	r0, r6
 8003428:	4639      	mov	r1, r7
 800342a:	f7fc ff2d 	bl	8000288 <__aeabi_dsub>
 800342e:	4642      	mov	r2, r8
 8003430:	4604      	mov	r4, r0
 8003432:	460d      	mov	r5, r1
 8003434:	465b      	mov	r3, fp
 8003436:	4640      	mov	r0, r8
 8003438:	4659      	mov	r1, fp
 800343a:	f7fc ff27 	bl	800028c <__adddf3>
 800343e:	4602      	mov	r2, r0
 8003440:	460b      	mov	r3, r1
 8003442:	a10b      	add	r1, pc, #44	; (adr r1, 8003470 <__ieee754_asin+0x420>)
 8003444:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003448:	f7fc ff1e 	bl	8000288 <__aeabi_dsub>
 800344c:	4602      	mov	r2, r0
 800344e:	460b      	mov	r3, r1
 8003450:	4620      	mov	r0, r4
 8003452:	4629      	mov	r1, r5
 8003454:	f7fc ff18 	bl	8000288 <__aeabi_dsub>
 8003458:	4602      	mov	r2, r0
 800345a:	460b      	mov	r3, r1
 800345c:	a104      	add	r1, pc, #16	; (adr r1, 8003470 <__ieee754_asin+0x420>)
 800345e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003462:	e6dd      	b.n	8003220 <__ieee754_asin+0x1d0>
 8003464:	f3af 8000 	nop.w
 8003468:	33145c07 	.word	0x33145c07
 800346c:	3c91a626 	.word	0x3c91a626
 8003470:	54442d18 	.word	0x54442d18
 8003474:	3fe921fb 	.word	0x3fe921fb

08003478 <pow>:
 8003478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800347a:	ed2d 8b02 	vpush	{d8}
 800347e:	eeb0 8a40 	vmov.f32	s16, s0
 8003482:	eef0 8a60 	vmov.f32	s17, s1
 8003486:	ec55 4b11 	vmov	r4, r5, d1
 800348a:	f000 fb29 	bl	8003ae0 <__ieee754_pow>
 800348e:	4622      	mov	r2, r4
 8003490:	462b      	mov	r3, r5
 8003492:	4620      	mov	r0, r4
 8003494:	4629      	mov	r1, r5
 8003496:	ec57 6b10 	vmov	r6, r7, d0
 800349a:	f7fd fb47 	bl	8000b2c <__aeabi_dcmpun>
 800349e:	2800      	cmp	r0, #0
 80034a0:	d13b      	bne.n	800351a <pow+0xa2>
 80034a2:	ec51 0b18 	vmov	r0, r1, d8
 80034a6:	2200      	movs	r2, #0
 80034a8:	2300      	movs	r3, #0
 80034aa:	f7fd fb0d 	bl	8000ac8 <__aeabi_dcmpeq>
 80034ae:	b1b8      	cbz	r0, 80034e0 <pow+0x68>
 80034b0:	2200      	movs	r2, #0
 80034b2:	2300      	movs	r3, #0
 80034b4:	4620      	mov	r0, r4
 80034b6:	4629      	mov	r1, r5
 80034b8:	f7fd fb06 	bl	8000ac8 <__aeabi_dcmpeq>
 80034bc:	2800      	cmp	r0, #0
 80034be:	d146      	bne.n	800354e <pow+0xd6>
 80034c0:	ec45 4b10 	vmov	d0, r4, r5
 80034c4:	f000 fa1d 	bl	8003902 <finite>
 80034c8:	b338      	cbz	r0, 800351a <pow+0xa2>
 80034ca:	2200      	movs	r2, #0
 80034cc:	2300      	movs	r3, #0
 80034ce:	4620      	mov	r0, r4
 80034d0:	4629      	mov	r1, r5
 80034d2:	f7fd fb03 	bl	8000adc <__aeabi_dcmplt>
 80034d6:	b300      	cbz	r0, 800351a <pow+0xa2>
 80034d8:	f7fe fc98 	bl	8001e0c <__errno>
 80034dc:	2322      	movs	r3, #34	; 0x22
 80034de:	e01b      	b.n	8003518 <pow+0xa0>
 80034e0:	ec47 6b10 	vmov	d0, r6, r7
 80034e4:	f000 fa0d 	bl	8003902 <finite>
 80034e8:	b9e0      	cbnz	r0, 8003524 <pow+0xac>
 80034ea:	eeb0 0a48 	vmov.f32	s0, s16
 80034ee:	eef0 0a68 	vmov.f32	s1, s17
 80034f2:	f000 fa06 	bl	8003902 <finite>
 80034f6:	b1a8      	cbz	r0, 8003524 <pow+0xac>
 80034f8:	ec45 4b10 	vmov	d0, r4, r5
 80034fc:	f000 fa01 	bl	8003902 <finite>
 8003500:	b180      	cbz	r0, 8003524 <pow+0xac>
 8003502:	4632      	mov	r2, r6
 8003504:	463b      	mov	r3, r7
 8003506:	4630      	mov	r0, r6
 8003508:	4639      	mov	r1, r7
 800350a:	f7fd fb0f 	bl	8000b2c <__aeabi_dcmpun>
 800350e:	2800      	cmp	r0, #0
 8003510:	d0e2      	beq.n	80034d8 <pow+0x60>
 8003512:	f7fe fc7b 	bl	8001e0c <__errno>
 8003516:	2321      	movs	r3, #33	; 0x21
 8003518:	6003      	str	r3, [r0, #0]
 800351a:	ecbd 8b02 	vpop	{d8}
 800351e:	ec47 6b10 	vmov	d0, r6, r7
 8003522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003524:	2200      	movs	r2, #0
 8003526:	2300      	movs	r3, #0
 8003528:	4630      	mov	r0, r6
 800352a:	4639      	mov	r1, r7
 800352c:	f7fd facc 	bl	8000ac8 <__aeabi_dcmpeq>
 8003530:	2800      	cmp	r0, #0
 8003532:	d0f2      	beq.n	800351a <pow+0xa2>
 8003534:	eeb0 0a48 	vmov.f32	s0, s16
 8003538:	eef0 0a68 	vmov.f32	s1, s17
 800353c:	f000 f9e1 	bl	8003902 <finite>
 8003540:	2800      	cmp	r0, #0
 8003542:	d0ea      	beq.n	800351a <pow+0xa2>
 8003544:	ec45 4b10 	vmov	d0, r4, r5
 8003548:	f000 f9db 	bl	8003902 <finite>
 800354c:	e7c3      	b.n	80034d6 <pow+0x5e>
 800354e:	4f01      	ldr	r7, [pc, #4]	; (8003554 <pow+0xdc>)
 8003550:	2600      	movs	r6, #0
 8003552:	e7e2      	b.n	800351a <pow+0xa2>
 8003554:	3ff00000 	.word	0x3ff00000

08003558 <sqrt>:
 8003558:	b538      	push	{r3, r4, r5, lr}
 800355a:	ed2d 8b02 	vpush	{d8}
 800355e:	ec55 4b10 	vmov	r4, r5, d0
 8003562:	f000 f9d9 	bl	8003918 <__ieee754_sqrt>
 8003566:	4622      	mov	r2, r4
 8003568:	462b      	mov	r3, r5
 800356a:	4620      	mov	r0, r4
 800356c:	4629      	mov	r1, r5
 800356e:	eeb0 8a40 	vmov.f32	s16, s0
 8003572:	eef0 8a60 	vmov.f32	s17, s1
 8003576:	f7fd fad9 	bl	8000b2c <__aeabi_dcmpun>
 800357a:	b990      	cbnz	r0, 80035a2 <sqrt+0x4a>
 800357c:	2200      	movs	r2, #0
 800357e:	2300      	movs	r3, #0
 8003580:	4620      	mov	r0, r4
 8003582:	4629      	mov	r1, r5
 8003584:	f7fd faaa 	bl	8000adc <__aeabi_dcmplt>
 8003588:	b158      	cbz	r0, 80035a2 <sqrt+0x4a>
 800358a:	f7fe fc3f 	bl	8001e0c <__errno>
 800358e:	2321      	movs	r3, #33	; 0x21
 8003590:	6003      	str	r3, [r0, #0]
 8003592:	2200      	movs	r2, #0
 8003594:	2300      	movs	r3, #0
 8003596:	4610      	mov	r0, r2
 8003598:	4619      	mov	r1, r3
 800359a:	f7fd f957 	bl	800084c <__aeabi_ddiv>
 800359e:	ec41 0b18 	vmov	d8, r0, r1
 80035a2:	eeb0 0a48 	vmov.f32	s0, s16
 80035a6:	eef0 0a68 	vmov.f32	s1, s17
 80035aa:	ecbd 8b02 	vpop	{d8}
 80035ae:	bd38      	pop	{r3, r4, r5, pc}

080035b0 <atan>:
 80035b0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035b4:	ec55 4b10 	vmov	r4, r5, d0
 80035b8:	4bc3      	ldr	r3, [pc, #780]	; (80038c8 <atan+0x318>)
 80035ba:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80035be:	429e      	cmp	r6, r3
 80035c0:	46ab      	mov	fp, r5
 80035c2:	dd18      	ble.n	80035f6 <atan+0x46>
 80035c4:	4bc1      	ldr	r3, [pc, #772]	; (80038cc <atan+0x31c>)
 80035c6:	429e      	cmp	r6, r3
 80035c8:	dc01      	bgt.n	80035ce <atan+0x1e>
 80035ca:	d109      	bne.n	80035e0 <atan+0x30>
 80035cc:	b144      	cbz	r4, 80035e0 <atan+0x30>
 80035ce:	4622      	mov	r2, r4
 80035d0:	462b      	mov	r3, r5
 80035d2:	4620      	mov	r0, r4
 80035d4:	4629      	mov	r1, r5
 80035d6:	f7fc fe59 	bl	800028c <__adddf3>
 80035da:	4604      	mov	r4, r0
 80035dc:	460d      	mov	r5, r1
 80035de:	e006      	b.n	80035ee <atan+0x3e>
 80035e0:	f1bb 0f00 	cmp.w	fp, #0
 80035e4:	f300 8131 	bgt.w	800384a <atan+0x29a>
 80035e8:	a59b      	add	r5, pc, #620	; (adr r5, 8003858 <atan+0x2a8>)
 80035ea:	e9d5 4500 	ldrd	r4, r5, [r5]
 80035ee:	ec45 4b10 	vmov	d0, r4, r5
 80035f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035f6:	4bb6      	ldr	r3, [pc, #728]	; (80038d0 <atan+0x320>)
 80035f8:	429e      	cmp	r6, r3
 80035fa:	dc14      	bgt.n	8003626 <atan+0x76>
 80035fc:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8003600:	429e      	cmp	r6, r3
 8003602:	dc0d      	bgt.n	8003620 <atan+0x70>
 8003604:	a396      	add	r3, pc, #600	; (adr r3, 8003860 <atan+0x2b0>)
 8003606:	e9d3 2300 	ldrd	r2, r3, [r3]
 800360a:	ee10 0a10 	vmov	r0, s0
 800360e:	4629      	mov	r1, r5
 8003610:	f7fc fe3c 	bl	800028c <__adddf3>
 8003614:	4baf      	ldr	r3, [pc, #700]	; (80038d4 <atan+0x324>)
 8003616:	2200      	movs	r2, #0
 8003618:	f7fd fa7e 	bl	8000b18 <__aeabi_dcmpgt>
 800361c:	2800      	cmp	r0, #0
 800361e:	d1e6      	bne.n	80035ee <atan+0x3e>
 8003620:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
 8003624:	e02b      	b.n	800367e <atan+0xce>
 8003626:	f000 f963 	bl	80038f0 <fabs>
 800362a:	4bab      	ldr	r3, [pc, #684]	; (80038d8 <atan+0x328>)
 800362c:	429e      	cmp	r6, r3
 800362e:	ec55 4b10 	vmov	r4, r5, d0
 8003632:	f300 80bf 	bgt.w	80037b4 <atan+0x204>
 8003636:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800363a:	429e      	cmp	r6, r3
 800363c:	f300 80a0 	bgt.w	8003780 <atan+0x1d0>
 8003640:	ee10 2a10 	vmov	r2, s0
 8003644:	ee10 0a10 	vmov	r0, s0
 8003648:	462b      	mov	r3, r5
 800364a:	4629      	mov	r1, r5
 800364c:	f7fc fe1e 	bl	800028c <__adddf3>
 8003650:	4ba0      	ldr	r3, [pc, #640]	; (80038d4 <atan+0x324>)
 8003652:	2200      	movs	r2, #0
 8003654:	f7fc fe18 	bl	8000288 <__aeabi_dsub>
 8003658:	2200      	movs	r2, #0
 800365a:	4606      	mov	r6, r0
 800365c:	460f      	mov	r7, r1
 800365e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003662:	4620      	mov	r0, r4
 8003664:	4629      	mov	r1, r5
 8003666:	f7fc fe11 	bl	800028c <__adddf3>
 800366a:	4602      	mov	r2, r0
 800366c:	460b      	mov	r3, r1
 800366e:	4630      	mov	r0, r6
 8003670:	4639      	mov	r1, r7
 8003672:	f7fd f8eb 	bl	800084c <__aeabi_ddiv>
 8003676:	f04f 0a00 	mov.w	sl, #0
 800367a:	4604      	mov	r4, r0
 800367c:	460d      	mov	r5, r1
 800367e:	4622      	mov	r2, r4
 8003680:	462b      	mov	r3, r5
 8003682:	4620      	mov	r0, r4
 8003684:	4629      	mov	r1, r5
 8003686:	f7fc ffb7 	bl	80005f8 <__aeabi_dmul>
 800368a:	4602      	mov	r2, r0
 800368c:	460b      	mov	r3, r1
 800368e:	4680      	mov	r8, r0
 8003690:	4689      	mov	r9, r1
 8003692:	f7fc ffb1 	bl	80005f8 <__aeabi_dmul>
 8003696:	a374      	add	r3, pc, #464	; (adr r3, 8003868 <atan+0x2b8>)
 8003698:	e9d3 2300 	ldrd	r2, r3, [r3]
 800369c:	4606      	mov	r6, r0
 800369e:	460f      	mov	r7, r1
 80036a0:	f7fc ffaa 	bl	80005f8 <__aeabi_dmul>
 80036a4:	a372      	add	r3, pc, #456	; (adr r3, 8003870 <atan+0x2c0>)
 80036a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036aa:	f7fc fdef 	bl	800028c <__adddf3>
 80036ae:	4632      	mov	r2, r6
 80036b0:	463b      	mov	r3, r7
 80036b2:	f7fc ffa1 	bl	80005f8 <__aeabi_dmul>
 80036b6:	a370      	add	r3, pc, #448	; (adr r3, 8003878 <atan+0x2c8>)
 80036b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036bc:	f7fc fde6 	bl	800028c <__adddf3>
 80036c0:	4632      	mov	r2, r6
 80036c2:	463b      	mov	r3, r7
 80036c4:	f7fc ff98 	bl	80005f8 <__aeabi_dmul>
 80036c8:	a36d      	add	r3, pc, #436	; (adr r3, 8003880 <atan+0x2d0>)
 80036ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036ce:	f7fc fddd 	bl	800028c <__adddf3>
 80036d2:	4632      	mov	r2, r6
 80036d4:	463b      	mov	r3, r7
 80036d6:	f7fc ff8f 	bl	80005f8 <__aeabi_dmul>
 80036da:	a36b      	add	r3, pc, #428	; (adr r3, 8003888 <atan+0x2d8>)
 80036dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036e0:	f7fc fdd4 	bl	800028c <__adddf3>
 80036e4:	4632      	mov	r2, r6
 80036e6:	463b      	mov	r3, r7
 80036e8:	f7fc ff86 	bl	80005f8 <__aeabi_dmul>
 80036ec:	a368      	add	r3, pc, #416	; (adr r3, 8003890 <atan+0x2e0>)
 80036ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036f2:	f7fc fdcb 	bl	800028c <__adddf3>
 80036f6:	4642      	mov	r2, r8
 80036f8:	464b      	mov	r3, r9
 80036fa:	f7fc ff7d 	bl	80005f8 <__aeabi_dmul>
 80036fe:	a366      	add	r3, pc, #408	; (adr r3, 8003898 <atan+0x2e8>)
 8003700:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003704:	4680      	mov	r8, r0
 8003706:	4689      	mov	r9, r1
 8003708:	4630      	mov	r0, r6
 800370a:	4639      	mov	r1, r7
 800370c:	f7fc ff74 	bl	80005f8 <__aeabi_dmul>
 8003710:	a363      	add	r3, pc, #396	; (adr r3, 80038a0 <atan+0x2f0>)
 8003712:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003716:	f7fc fdb7 	bl	8000288 <__aeabi_dsub>
 800371a:	4632      	mov	r2, r6
 800371c:	463b      	mov	r3, r7
 800371e:	f7fc ff6b 	bl	80005f8 <__aeabi_dmul>
 8003722:	a361      	add	r3, pc, #388	; (adr r3, 80038a8 <atan+0x2f8>)
 8003724:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003728:	f7fc fdae 	bl	8000288 <__aeabi_dsub>
 800372c:	4632      	mov	r2, r6
 800372e:	463b      	mov	r3, r7
 8003730:	f7fc ff62 	bl	80005f8 <__aeabi_dmul>
 8003734:	a35e      	add	r3, pc, #376	; (adr r3, 80038b0 <atan+0x300>)
 8003736:	e9d3 2300 	ldrd	r2, r3, [r3]
 800373a:	f7fc fda5 	bl	8000288 <__aeabi_dsub>
 800373e:	4632      	mov	r2, r6
 8003740:	463b      	mov	r3, r7
 8003742:	f7fc ff59 	bl	80005f8 <__aeabi_dmul>
 8003746:	a35c      	add	r3, pc, #368	; (adr r3, 80038b8 <atan+0x308>)
 8003748:	e9d3 2300 	ldrd	r2, r3, [r3]
 800374c:	f7fc fd9c 	bl	8000288 <__aeabi_dsub>
 8003750:	4632      	mov	r2, r6
 8003752:	463b      	mov	r3, r7
 8003754:	f7fc ff50 	bl	80005f8 <__aeabi_dmul>
 8003758:	4602      	mov	r2, r0
 800375a:	460b      	mov	r3, r1
 800375c:	4640      	mov	r0, r8
 800375e:	4649      	mov	r1, r9
 8003760:	f7fc fd94 	bl	800028c <__adddf3>
 8003764:	4622      	mov	r2, r4
 8003766:	462b      	mov	r3, r5
 8003768:	f7fc ff46 	bl	80005f8 <__aeabi_dmul>
 800376c:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
 8003770:	4602      	mov	r2, r0
 8003772:	460b      	mov	r3, r1
 8003774:	d14b      	bne.n	800380e <atan+0x25e>
 8003776:	4620      	mov	r0, r4
 8003778:	4629      	mov	r1, r5
 800377a:	f7fc fd85 	bl	8000288 <__aeabi_dsub>
 800377e:	e72c      	b.n	80035da <atan+0x2a>
 8003780:	ee10 0a10 	vmov	r0, s0
 8003784:	4b53      	ldr	r3, [pc, #332]	; (80038d4 <atan+0x324>)
 8003786:	2200      	movs	r2, #0
 8003788:	4629      	mov	r1, r5
 800378a:	f7fc fd7d 	bl	8000288 <__aeabi_dsub>
 800378e:	4b51      	ldr	r3, [pc, #324]	; (80038d4 <atan+0x324>)
 8003790:	4606      	mov	r6, r0
 8003792:	460f      	mov	r7, r1
 8003794:	2200      	movs	r2, #0
 8003796:	4620      	mov	r0, r4
 8003798:	4629      	mov	r1, r5
 800379a:	f7fc fd77 	bl	800028c <__adddf3>
 800379e:	4602      	mov	r2, r0
 80037a0:	460b      	mov	r3, r1
 80037a2:	4630      	mov	r0, r6
 80037a4:	4639      	mov	r1, r7
 80037a6:	f7fd f851 	bl	800084c <__aeabi_ddiv>
 80037aa:	f04f 0a01 	mov.w	sl, #1
 80037ae:	4604      	mov	r4, r0
 80037b0:	460d      	mov	r5, r1
 80037b2:	e764      	b.n	800367e <atan+0xce>
 80037b4:	4b49      	ldr	r3, [pc, #292]	; (80038dc <atan+0x32c>)
 80037b6:	429e      	cmp	r6, r3
 80037b8:	da1d      	bge.n	80037f6 <atan+0x246>
 80037ba:	ee10 0a10 	vmov	r0, s0
 80037be:	4b48      	ldr	r3, [pc, #288]	; (80038e0 <atan+0x330>)
 80037c0:	2200      	movs	r2, #0
 80037c2:	4629      	mov	r1, r5
 80037c4:	f7fc fd60 	bl	8000288 <__aeabi_dsub>
 80037c8:	4b45      	ldr	r3, [pc, #276]	; (80038e0 <atan+0x330>)
 80037ca:	4606      	mov	r6, r0
 80037cc:	460f      	mov	r7, r1
 80037ce:	2200      	movs	r2, #0
 80037d0:	4620      	mov	r0, r4
 80037d2:	4629      	mov	r1, r5
 80037d4:	f7fc ff10 	bl	80005f8 <__aeabi_dmul>
 80037d8:	4b3e      	ldr	r3, [pc, #248]	; (80038d4 <atan+0x324>)
 80037da:	2200      	movs	r2, #0
 80037dc:	f7fc fd56 	bl	800028c <__adddf3>
 80037e0:	4602      	mov	r2, r0
 80037e2:	460b      	mov	r3, r1
 80037e4:	4630      	mov	r0, r6
 80037e6:	4639      	mov	r1, r7
 80037e8:	f7fd f830 	bl	800084c <__aeabi_ddiv>
 80037ec:	f04f 0a02 	mov.w	sl, #2
 80037f0:	4604      	mov	r4, r0
 80037f2:	460d      	mov	r5, r1
 80037f4:	e743      	b.n	800367e <atan+0xce>
 80037f6:	462b      	mov	r3, r5
 80037f8:	ee10 2a10 	vmov	r2, s0
 80037fc:	4939      	ldr	r1, [pc, #228]	; (80038e4 <atan+0x334>)
 80037fe:	2000      	movs	r0, #0
 8003800:	f7fd f824 	bl	800084c <__aeabi_ddiv>
 8003804:	f04f 0a03 	mov.w	sl, #3
 8003808:	4604      	mov	r4, r0
 800380a:	460d      	mov	r5, r1
 800380c:	e737      	b.n	800367e <atan+0xce>
 800380e:	4b36      	ldr	r3, [pc, #216]	; (80038e8 <atan+0x338>)
 8003810:	4e36      	ldr	r6, [pc, #216]	; (80038ec <atan+0x33c>)
 8003812:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8003816:	e9d3 2300 	ldrd	r2, r3, [r3]
 800381a:	f7fc fd35 	bl	8000288 <__aeabi_dsub>
 800381e:	4622      	mov	r2, r4
 8003820:	462b      	mov	r3, r5
 8003822:	f7fc fd31 	bl	8000288 <__aeabi_dsub>
 8003826:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800382a:	4602      	mov	r2, r0
 800382c:	460b      	mov	r3, r1
 800382e:	e9d6 0100 	ldrd	r0, r1, [r6]
 8003832:	f7fc fd29 	bl	8000288 <__aeabi_dsub>
 8003836:	f1bb 0f00 	cmp.w	fp, #0
 800383a:	4604      	mov	r4, r0
 800383c:	460d      	mov	r5, r1
 800383e:	f6bf aed6 	bge.w	80035ee <atan+0x3e>
 8003842:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003846:	461d      	mov	r5, r3
 8003848:	e6d1      	b.n	80035ee <atan+0x3e>
 800384a:	a51d      	add	r5, pc, #116	; (adr r5, 80038c0 <atan+0x310>)
 800384c:	e9d5 4500 	ldrd	r4, r5, [r5]
 8003850:	e6cd      	b.n	80035ee <atan+0x3e>
 8003852:	bf00      	nop
 8003854:	f3af 8000 	nop.w
 8003858:	54442d18 	.word	0x54442d18
 800385c:	bff921fb 	.word	0xbff921fb
 8003860:	8800759c 	.word	0x8800759c
 8003864:	7e37e43c 	.word	0x7e37e43c
 8003868:	e322da11 	.word	0xe322da11
 800386c:	3f90ad3a 	.word	0x3f90ad3a
 8003870:	24760deb 	.word	0x24760deb
 8003874:	3fa97b4b 	.word	0x3fa97b4b
 8003878:	a0d03d51 	.word	0xa0d03d51
 800387c:	3fb10d66 	.word	0x3fb10d66
 8003880:	c54c206e 	.word	0xc54c206e
 8003884:	3fb745cd 	.word	0x3fb745cd
 8003888:	920083ff 	.word	0x920083ff
 800388c:	3fc24924 	.word	0x3fc24924
 8003890:	5555550d 	.word	0x5555550d
 8003894:	3fd55555 	.word	0x3fd55555
 8003898:	2c6a6c2f 	.word	0x2c6a6c2f
 800389c:	bfa2b444 	.word	0xbfa2b444
 80038a0:	52defd9a 	.word	0x52defd9a
 80038a4:	3fadde2d 	.word	0x3fadde2d
 80038a8:	af749a6d 	.word	0xaf749a6d
 80038ac:	3fb3b0f2 	.word	0x3fb3b0f2
 80038b0:	fe231671 	.word	0xfe231671
 80038b4:	3fbc71c6 	.word	0x3fbc71c6
 80038b8:	9998ebc4 	.word	0x9998ebc4
 80038bc:	3fc99999 	.word	0x3fc99999
 80038c0:	54442d18 	.word	0x54442d18
 80038c4:	3ff921fb 	.word	0x3ff921fb
 80038c8:	440fffff 	.word	0x440fffff
 80038cc:	7ff00000 	.word	0x7ff00000
 80038d0:	3fdbffff 	.word	0x3fdbffff
 80038d4:	3ff00000 	.word	0x3ff00000
 80038d8:	3ff2ffff 	.word	0x3ff2ffff
 80038dc:	40038000 	.word	0x40038000
 80038e0:	3ff80000 	.word	0x3ff80000
 80038e4:	bff00000 	.word	0xbff00000
 80038e8:	08004760 	.word	0x08004760
 80038ec:	08004740 	.word	0x08004740

080038f0 <fabs>:
 80038f0:	ec51 0b10 	vmov	r0, r1, d0
 80038f4:	ee10 2a10 	vmov	r2, s0
 80038f8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80038fc:	ec43 2b10 	vmov	d0, r2, r3
 8003900:	4770      	bx	lr

08003902 <finite>:
 8003902:	b082      	sub	sp, #8
 8003904:	ed8d 0b00 	vstr	d0, [sp]
 8003908:	9801      	ldr	r0, [sp, #4]
 800390a:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 800390e:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8003912:	0fc0      	lsrs	r0, r0, #31
 8003914:	b002      	add	sp, #8
 8003916:	4770      	bx	lr

08003918 <__ieee754_sqrt>:
 8003918:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800391c:	ec55 4b10 	vmov	r4, r5, d0
 8003920:	4e67      	ldr	r6, [pc, #412]	; (8003ac0 <__ieee754_sqrt+0x1a8>)
 8003922:	43ae      	bics	r6, r5
 8003924:	ee10 0a10 	vmov	r0, s0
 8003928:	ee10 2a10 	vmov	r2, s0
 800392c:	4629      	mov	r1, r5
 800392e:	462b      	mov	r3, r5
 8003930:	d10d      	bne.n	800394e <__ieee754_sqrt+0x36>
 8003932:	f7fc fe61 	bl	80005f8 <__aeabi_dmul>
 8003936:	4602      	mov	r2, r0
 8003938:	460b      	mov	r3, r1
 800393a:	4620      	mov	r0, r4
 800393c:	4629      	mov	r1, r5
 800393e:	f7fc fca5 	bl	800028c <__adddf3>
 8003942:	4604      	mov	r4, r0
 8003944:	460d      	mov	r5, r1
 8003946:	ec45 4b10 	vmov	d0, r4, r5
 800394a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800394e:	2d00      	cmp	r5, #0
 8003950:	dc0b      	bgt.n	800396a <__ieee754_sqrt+0x52>
 8003952:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8003956:	4326      	orrs	r6, r4
 8003958:	d0f5      	beq.n	8003946 <__ieee754_sqrt+0x2e>
 800395a:	b135      	cbz	r5, 800396a <__ieee754_sqrt+0x52>
 800395c:	f7fc fc94 	bl	8000288 <__aeabi_dsub>
 8003960:	4602      	mov	r2, r0
 8003962:	460b      	mov	r3, r1
 8003964:	f7fc ff72 	bl	800084c <__aeabi_ddiv>
 8003968:	e7eb      	b.n	8003942 <__ieee754_sqrt+0x2a>
 800396a:	1509      	asrs	r1, r1, #20
 800396c:	f000 808d 	beq.w	8003a8a <__ieee754_sqrt+0x172>
 8003970:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003974:	f2a1 36ff 	subw	r6, r1, #1023	; 0x3ff
 8003978:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800397c:	07c9      	lsls	r1, r1, #31
 800397e:	bf5c      	itt	pl
 8003980:	005b      	lslpl	r3, r3, #1
 8003982:	eb03 73d2 	addpl.w	r3, r3, r2, lsr #31
 8003986:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800398a:	bf58      	it	pl
 800398c:	0052      	lslpl	r2, r2, #1
 800398e:	2500      	movs	r5, #0
 8003990:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8003994:	1076      	asrs	r6, r6, #1
 8003996:	0052      	lsls	r2, r2, #1
 8003998:	f04f 0e16 	mov.w	lr, #22
 800399c:	46ac      	mov	ip, r5
 800399e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80039a2:	eb0c 0001 	add.w	r0, ip, r1
 80039a6:	4298      	cmp	r0, r3
 80039a8:	bfde      	ittt	le
 80039aa:	1a1b      	suble	r3, r3, r0
 80039ac:	eb00 0c01 	addle.w	ip, r0, r1
 80039b0:	186d      	addle	r5, r5, r1
 80039b2:	005b      	lsls	r3, r3, #1
 80039b4:	f1be 0e01 	subs.w	lr, lr, #1
 80039b8:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 80039bc:	ea4f 0151 	mov.w	r1, r1, lsr #1
 80039c0:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80039c4:	d1ed      	bne.n	80039a2 <__ieee754_sqrt+0x8a>
 80039c6:	4674      	mov	r4, lr
 80039c8:	2720      	movs	r7, #32
 80039ca:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80039ce:	4563      	cmp	r3, ip
 80039d0:	eb01 000e 	add.w	r0, r1, lr
 80039d4:	dc02      	bgt.n	80039dc <__ieee754_sqrt+0xc4>
 80039d6:	d113      	bne.n	8003a00 <__ieee754_sqrt+0xe8>
 80039d8:	4290      	cmp	r0, r2
 80039da:	d811      	bhi.n	8003a00 <__ieee754_sqrt+0xe8>
 80039dc:	2800      	cmp	r0, #0
 80039de:	eb00 0e01 	add.w	lr, r0, r1
 80039e2:	da57      	bge.n	8003a94 <__ieee754_sqrt+0x17c>
 80039e4:	f1be 0f00 	cmp.w	lr, #0
 80039e8:	db54      	blt.n	8003a94 <__ieee754_sqrt+0x17c>
 80039ea:	f10c 0801 	add.w	r8, ip, #1
 80039ee:	eba3 030c 	sub.w	r3, r3, ip
 80039f2:	4290      	cmp	r0, r2
 80039f4:	bf88      	it	hi
 80039f6:	f103 33ff 	addhi.w	r3, r3, #4294967295	; 0xffffffff
 80039fa:	1a12      	subs	r2, r2, r0
 80039fc:	440c      	add	r4, r1
 80039fe:	46c4      	mov	ip, r8
 8003a00:	005b      	lsls	r3, r3, #1
 8003a02:	3f01      	subs	r7, #1
 8003a04:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8003a08:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8003a0c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8003a10:	d1dd      	bne.n	80039ce <__ieee754_sqrt+0xb6>
 8003a12:	4313      	orrs	r3, r2
 8003a14:	d01b      	beq.n	8003a4e <__ieee754_sqrt+0x136>
 8003a16:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 8003ac4 <__ieee754_sqrt+0x1ac>
 8003a1a:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8003ac8 <__ieee754_sqrt+0x1b0>
 8003a1e:	e9da 0100 	ldrd	r0, r1, [sl]
 8003a22:	e9db 2300 	ldrd	r2, r3, [fp]
 8003a26:	f7fc fc2f 	bl	8000288 <__aeabi_dsub>
 8003a2a:	e9da 8900 	ldrd	r8, r9, [sl]
 8003a2e:	4602      	mov	r2, r0
 8003a30:	460b      	mov	r3, r1
 8003a32:	4640      	mov	r0, r8
 8003a34:	4649      	mov	r1, r9
 8003a36:	f7fd f85b 	bl	8000af0 <__aeabi_dcmple>
 8003a3a:	b140      	cbz	r0, 8003a4e <__ieee754_sqrt+0x136>
 8003a3c:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 8003a40:	e9da 0100 	ldrd	r0, r1, [sl]
 8003a44:	e9db 2300 	ldrd	r2, r3, [fp]
 8003a48:	d126      	bne.n	8003a98 <__ieee754_sqrt+0x180>
 8003a4a:	3501      	adds	r5, #1
 8003a4c:	463c      	mov	r4, r7
 8003a4e:	106a      	asrs	r2, r5, #1
 8003a50:	0863      	lsrs	r3, r4, #1
 8003a52:	07e9      	lsls	r1, r5, #31
 8003a54:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 8003a58:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 8003a5c:	bf48      	it	mi
 8003a5e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8003a62:	eb02 5506 	add.w	r5, r2, r6, lsl #20
 8003a66:	461c      	mov	r4, r3
 8003a68:	e76d      	b.n	8003946 <__ieee754_sqrt+0x2e>
 8003a6a:	0ad3      	lsrs	r3, r2, #11
 8003a6c:	3815      	subs	r0, #21
 8003a6e:	0552      	lsls	r2, r2, #21
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	d0fa      	beq.n	8003a6a <__ieee754_sqrt+0x152>
 8003a74:	02dc      	lsls	r4, r3, #11
 8003a76:	d50a      	bpl.n	8003a8e <__ieee754_sqrt+0x176>
 8003a78:	f1c1 0420 	rsb	r4, r1, #32
 8003a7c:	fa22 f404 	lsr.w	r4, r2, r4
 8003a80:	1e4d      	subs	r5, r1, #1
 8003a82:	408a      	lsls	r2, r1
 8003a84:	4323      	orrs	r3, r4
 8003a86:	1b41      	subs	r1, r0, r5
 8003a88:	e772      	b.n	8003970 <__ieee754_sqrt+0x58>
 8003a8a:	4608      	mov	r0, r1
 8003a8c:	e7f0      	b.n	8003a70 <__ieee754_sqrt+0x158>
 8003a8e:	005b      	lsls	r3, r3, #1
 8003a90:	3101      	adds	r1, #1
 8003a92:	e7ef      	b.n	8003a74 <__ieee754_sqrt+0x15c>
 8003a94:	46e0      	mov	r8, ip
 8003a96:	e7aa      	b.n	80039ee <__ieee754_sqrt+0xd6>
 8003a98:	f7fc fbf8 	bl	800028c <__adddf3>
 8003a9c:	e9da 8900 	ldrd	r8, r9, [sl]
 8003aa0:	4602      	mov	r2, r0
 8003aa2:	460b      	mov	r3, r1
 8003aa4:	4640      	mov	r0, r8
 8003aa6:	4649      	mov	r1, r9
 8003aa8:	f7fd f818 	bl	8000adc <__aeabi_dcmplt>
 8003aac:	b120      	cbz	r0, 8003ab8 <__ieee754_sqrt+0x1a0>
 8003aae:	1ca0      	adds	r0, r4, #2
 8003ab0:	bf08      	it	eq
 8003ab2:	3501      	addeq	r5, #1
 8003ab4:	3402      	adds	r4, #2
 8003ab6:	e7ca      	b.n	8003a4e <__ieee754_sqrt+0x136>
 8003ab8:	3401      	adds	r4, #1
 8003aba:	f024 0401 	bic.w	r4, r4, #1
 8003abe:	e7c6      	b.n	8003a4e <__ieee754_sqrt+0x136>
 8003ac0:	7ff00000 	.word	0x7ff00000
 8003ac4:	20000430 	.word	0x20000430
 8003ac8:	20000438 	.word	0x20000438
 8003acc:	00000000 	.word	0x00000000

08003ad0 <nan>:
 8003ad0:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8003ad8 <nan+0x8>
 8003ad4:	4770      	bx	lr
 8003ad6:	bf00      	nop
 8003ad8:	00000000 	.word	0x00000000
 8003adc:	7ff80000 	.word	0x7ff80000

08003ae0 <__ieee754_pow>:
 8003ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ae4:	ed2d 8b06 	vpush	{d8-d10}
 8003ae8:	b089      	sub	sp, #36	; 0x24
 8003aea:	ed8d 1b00 	vstr	d1, [sp]
 8003aee:	e9dd 2900 	ldrd	r2, r9, [sp]
 8003af2:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 8003af6:	ea58 0102 	orrs.w	r1, r8, r2
 8003afa:	ec57 6b10 	vmov	r6, r7, d0
 8003afe:	d115      	bne.n	8003b2c <__ieee754_pow+0x4c>
 8003b00:	19b3      	adds	r3, r6, r6
 8003b02:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 8003b06:	4152      	adcs	r2, r2
 8003b08:	4299      	cmp	r1, r3
 8003b0a:	4b89      	ldr	r3, [pc, #548]	; (8003d30 <__ieee754_pow+0x250>)
 8003b0c:	4193      	sbcs	r3, r2
 8003b0e:	f080 84d1 	bcs.w	80044b4 <__ieee754_pow+0x9d4>
 8003b12:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003b16:	4630      	mov	r0, r6
 8003b18:	4639      	mov	r1, r7
 8003b1a:	f7fc fbb7 	bl	800028c <__adddf3>
 8003b1e:	ec41 0b10 	vmov	d0, r0, r1
 8003b22:	b009      	add	sp, #36	; 0x24
 8003b24:	ecbd 8b06 	vpop	{d8-d10}
 8003b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b2c:	4b81      	ldr	r3, [pc, #516]	; (8003d34 <__ieee754_pow+0x254>)
 8003b2e:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 8003b32:	429c      	cmp	r4, r3
 8003b34:	ee10 aa10 	vmov	sl, s0
 8003b38:	463d      	mov	r5, r7
 8003b3a:	dc06      	bgt.n	8003b4a <__ieee754_pow+0x6a>
 8003b3c:	d101      	bne.n	8003b42 <__ieee754_pow+0x62>
 8003b3e:	2e00      	cmp	r6, #0
 8003b40:	d1e7      	bne.n	8003b12 <__ieee754_pow+0x32>
 8003b42:	4598      	cmp	r8, r3
 8003b44:	dc01      	bgt.n	8003b4a <__ieee754_pow+0x6a>
 8003b46:	d10f      	bne.n	8003b68 <__ieee754_pow+0x88>
 8003b48:	b172      	cbz	r2, 8003b68 <__ieee754_pow+0x88>
 8003b4a:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 8003b4e:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 8003b52:	ea55 050a 	orrs.w	r5, r5, sl
 8003b56:	d1dc      	bne.n	8003b12 <__ieee754_pow+0x32>
 8003b58:	e9dd 3200 	ldrd	r3, r2, [sp]
 8003b5c:	18db      	adds	r3, r3, r3
 8003b5e:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 8003b62:	4152      	adcs	r2, r2
 8003b64:	429d      	cmp	r5, r3
 8003b66:	e7d0      	b.n	8003b0a <__ieee754_pow+0x2a>
 8003b68:	2d00      	cmp	r5, #0
 8003b6a:	da3b      	bge.n	8003be4 <__ieee754_pow+0x104>
 8003b6c:	4b72      	ldr	r3, [pc, #456]	; (8003d38 <__ieee754_pow+0x258>)
 8003b6e:	4598      	cmp	r8, r3
 8003b70:	dc51      	bgt.n	8003c16 <__ieee754_pow+0x136>
 8003b72:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8003b76:	4598      	cmp	r8, r3
 8003b78:	f340 84ab 	ble.w	80044d2 <__ieee754_pow+0x9f2>
 8003b7c:	ea4f 5328 	mov.w	r3, r8, asr #20
 8003b80:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8003b84:	2b14      	cmp	r3, #20
 8003b86:	dd0f      	ble.n	8003ba8 <__ieee754_pow+0xc8>
 8003b88:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8003b8c:	fa22 f103 	lsr.w	r1, r2, r3
 8003b90:	fa01 f303 	lsl.w	r3, r1, r3
 8003b94:	4293      	cmp	r3, r2
 8003b96:	f040 849c 	bne.w	80044d2 <__ieee754_pow+0x9f2>
 8003b9a:	f001 0101 	and.w	r1, r1, #1
 8003b9e:	f1c1 0302 	rsb	r3, r1, #2
 8003ba2:	9304      	str	r3, [sp, #16]
 8003ba4:	b182      	cbz	r2, 8003bc8 <__ieee754_pow+0xe8>
 8003ba6:	e05f      	b.n	8003c68 <__ieee754_pow+0x188>
 8003ba8:	2a00      	cmp	r2, #0
 8003baa:	d15b      	bne.n	8003c64 <__ieee754_pow+0x184>
 8003bac:	f1c3 0314 	rsb	r3, r3, #20
 8003bb0:	fa48 f103 	asr.w	r1, r8, r3
 8003bb4:	fa01 f303 	lsl.w	r3, r1, r3
 8003bb8:	4543      	cmp	r3, r8
 8003bba:	f040 8487 	bne.w	80044cc <__ieee754_pow+0x9ec>
 8003bbe:	f001 0101 	and.w	r1, r1, #1
 8003bc2:	f1c1 0302 	rsb	r3, r1, #2
 8003bc6:	9304      	str	r3, [sp, #16]
 8003bc8:	4b5c      	ldr	r3, [pc, #368]	; (8003d3c <__ieee754_pow+0x25c>)
 8003bca:	4598      	cmp	r8, r3
 8003bcc:	d132      	bne.n	8003c34 <__ieee754_pow+0x154>
 8003bce:	f1b9 0f00 	cmp.w	r9, #0
 8003bd2:	f280 8477 	bge.w	80044c4 <__ieee754_pow+0x9e4>
 8003bd6:	4959      	ldr	r1, [pc, #356]	; (8003d3c <__ieee754_pow+0x25c>)
 8003bd8:	4632      	mov	r2, r6
 8003bda:	463b      	mov	r3, r7
 8003bdc:	2000      	movs	r0, #0
 8003bde:	f7fc fe35 	bl	800084c <__aeabi_ddiv>
 8003be2:	e79c      	b.n	8003b1e <__ieee754_pow+0x3e>
 8003be4:	2300      	movs	r3, #0
 8003be6:	9304      	str	r3, [sp, #16]
 8003be8:	2a00      	cmp	r2, #0
 8003bea:	d13d      	bne.n	8003c68 <__ieee754_pow+0x188>
 8003bec:	4b51      	ldr	r3, [pc, #324]	; (8003d34 <__ieee754_pow+0x254>)
 8003bee:	4598      	cmp	r8, r3
 8003bf0:	d1ea      	bne.n	8003bc8 <__ieee754_pow+0xe8>
 8003bf2:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8003bf6:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8003bfa:	ea53 030a 	orrs.w	r3, r3, sl
 8003bfe:	f000 8459 	beq.w	80044b4 <__ieee754_pow+0x9d4>
 8003c02:	4b4f      	ldr	r3, [pc, #316]	; (8003d40 <__ieee754_pow+0x260>)
 8003c04:	429c      	cmp	r4, r3
 8003c06:	dd08      	ble.n	8003c1a <__ieee754_pow+0x13a>
 8003c08:	f1b9 0f00 	cmp.w	r9, #0
 8003c0c:	f2c0 8456 	blt.w	80044bc <__ieee754_pow+0x9dc>
 8003c10:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003c14:	e783      	b.n	8003b1e <__ieee754_pow+0x3e>
 8003c16:	2302      	movs	r3, #2
 8003c18:	e7e5      	b.n	8003be6 <__ieee754_pow+0x106>
 8003c1a:	f1b9 0f00 	cmp.w	r9, #0
 8003c1e:	f04f 0000 	mov.w	r0, #0
 8003c22:	f04f 0100 	mov.w	r1, #0
 8003c26:	f6bf af7a 	bge.w	8003b1e <__ieee754_pow+0x3e>
 8003c2a:	e9dd 0300 	ldrd	r0, r3, [sp]
 8003c2e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8003c32:	e774      	b.n	8003b1e <__ieee754_pow+0x3e>
 8003c34:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 8003c38:	d106      	bne.n	8003c48 <__ieee754_pow+0x168>
 8003c3a:	4632      	mov	r2, r6
 8003c3c:	463b      	mov	r3, r7
 8003c3e:	4630      	mov	r0, r6
 8003c40:	4639      	mov	r1, r7
 8003c42:	f7fc fcd9 	bl	80005f8 <__aeabi_dmul>
 8003c46:	e76a      	b.n	8003b1e <__ieee754_pow+0x3e>
 8003c48:	4b3e      	ldr	r3, [pc, #248]	; (8003d44 <__ieee754_pow+0x264>)
 8003c4a:	4599      	cmp	r9, r3
 8003c4c:	d10c      	bne.n	8003c68 <__ieee754_pow+0x188>
 8003c4e:	2d00      	cmp	r5, #0
 8003c50:	db0a      	blt.n	8003c68 <__ieee754_pow+0x188>
 8003c52:	ec47 6b10 	vmov	d0, r6, r7
 8003c56:	b009      	add	sp, #36	; 0x24
 8003c58:	ecbd 8b06 	vpop	{d8-d10}
 8003c5c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c60:	f7ff be5a 	b.w	8003918 <__ieee754_sqrt>
 8003c64:	2300      	movs	r3, #0
 8003c66:	9304      	str	r3, [sp, #16]
 8003c68:	ec47 6b10 	vmov	d0, r6, r7
 8003c6c:	f7ff fe40 	bl	80038f0 <fabs>
 8003c70:	ec51 0b10 	vmov	r0, r1, d0
 8003c74:	f1ba 0f00 	cmp.w	sl, #0
 8003c78:	d129      	bne.n	8003cce <__ieee754_pow+0x1ee>
 8003c7a:	b124      	cbz	r4, 8003c86 <__ieee754_pow+0x1a6>
 8003c7c:	4b2f      	ldr	r3, [pc, #188]	; (8003d3c <__ieee754_pow+0x25c>)
 8003c7e:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 8003c82:	429a      	cmp	r2, r3
 8003c84:	d123      	bne.n	8003cce <__ieee754_pow+0x1ee>
 8003c86:	f1b9 0f00 	cmp.w	r9, #0
 8003c8a:	da05      	bge.n	8003c98 <__ieee754_pow+0x1b8>
 8003c8c:	4602      	mov	r2, r0
 8003c8e:	460b      	mov	r3, r1
 8003c90:	2000      	movs	r0, #0
 8003c92:	492a      	ldr	r1, [pc, #168]	; (8003d3c <__ieee754_pow+0x25c>)
 8003c94:	f7fc fdda 	bl	800084c <__aeabi_ddiv>
 8003c98:	2d00      	cmp	r5, #0
 8003c9a:	f6bf af40 	bge.w	8003b1e <__ieee754_pow+0x3e>
 8003c9e:	9b04      	ldr	r3, [sp, #16]
 8003ca0:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8003ca4:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8003ca8:	431c      	orrs	r4, r3
 8003caa:	d108      	bne.n	8003cbe <__ieee754_pow+0x1de>
 8003cac:	4602      	mov	r2, r0
 8003cae:	460b      	mov	r3, r1
 8003cb0:	4610      	mov	r0, r2
 8003cb2:	4619      	mov	r1, r3
 8003cb4:	f7fc fae8 	bl	8000288 <__aeabi_dsub>
 8003cb8:	4602      	mov	r2, r0
 8003cba:	460b      	mov	r3, r1
 8003cbc:	e78f      	b.n	8003bde <__ieee754_pow+0xfe>
 8003cbe:	9b04      	ldr	r3, [sp, #16]
 8003cc0:	2b01      	cmp	r3, #1
 8003cc2:	f47f af2c 	bne.w	8003b1e <__ieee754_pow+0x3e>
 8003cc6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003cca:	4619      	mov	r1, r3
 8003ccc:	e727      	b.n	8003b1e <__ieee754_pow+0x3e>
 8003cce:	0feb      	lsrs	r3, r5, #31
 8003cd0:	3b01      	subs	r3, #1
 8003cd2:	9306      	str	r3, [sp, #24]
 8003cd4:	9a06      	ldr	r2, [sp, #24]
 8003cd6:	9b04      	ldr	r3, [sp, #16]
 8003cd8:	4313      	orrs	r3, r2
 8003cda:	d102      	bne.n	8003ce2 <__ieee754_pow+0x202>
 8003cdc:	4632      	mov	r2, r6
 8003cde:	463b      	mov	r3, r7
 8003ce0:	e7e6      	b.n	8003cb0 <__ieee754_pow+0x1d0>
 8003ce2:	4b19      	ldr	r3, [pc, #100]	; (8003d48 <__ieee754_pow+0x268>)
 8003ce4:	4598      	cmp	r8, r3
 8003ce6:	f340 80fb 	ble.w	8003ee0 <__ieee754_pow+0x400>
 8003cea:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8003cee:	4598      	cmp	r8, r3
 8003cf0:	4b13      	ldr	r3, [pc, #76]	; (8003d40 <__ieee754_pow+0x260>)
 8003cf2:	dd0c      	ble.n	8003d0e <__ieee754_pow+0x22e>
 8003cf4:	429c      	cmp	r4, r3
 8003cf6:	dc0f      	bgt.n	8003d18 <__ieee754_pow+0x238>
 8003cf8:	f1b9 0f00 	cmp.w	r9, #0
 8003cfc:	da0f      	bge.n	8003d1e <__ieee754_pow+0x23e>
 8003cfe:	2000      	movs	r0, #0
 8003d00:	b009      	add	sp, #36	; 0x24
 8003d02:	ecbd 8b06 	vpop	{d8-d10}
 8003d06:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d0a:	f000 bc3a 	b.w	8004582 <__math_oflow>
 8003d0e:	429c      	cmp	r4, r3
 8003d10:	dbf2      	blt.n	8003cf8 <__ieee754_pow+0x218>
 8003d12:	4b0a      	ldr	r3, [pc, #40]	; (8003d3c <__ieee754_pow+0x25c>)
 8003d14:	429c      	cmp	r4, r3
 8003d16:	dd19      	ble.n	8003d4c <__ieee754_pow+0x26c>
 8003d18:	f1b9 0f00 	cmp.w	r9, #0
 8003d1c:	dcef      	bgt.n	8003cfe <__ieee754_pow+0x21e>
 8003d1e:	2000      	movs	r0, #0
 8003d20:	b009      	add	sp, #36	; 0x24
 8003d22:	ecbd 8b06 	vpop	{d8-d10}
 8003d26:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d2a:	f000 bc21 	b.w	8004570 <__math_uflow>
 8003d2e:	bf00      	nop
 8003d30:	fff00000 	.word	0xfff00000
 8003d34:	7ff00000 	.word	0x7ff00000
 8003d38:	433fffff 	.word	0x433fffff
 8003d3c:	3ff00000 	.word	0x3ff00000
 8003d40:	3fefffff 	.word	0x3fefffff
 8003d44:	3fe00000 	.word	0x3fe00000
 8003d48:	41e00000 	.word	0x41e00000
 8003d4c:	4b60      	ldr	r3, [pc, #384]	; (8003ed0 <__ieee754_pow+0x3f0>)
 8003d4e:	2200      	movs	r2, #0
 8003d50:	f7fc fa9a 	bl	8000288 <__aeabi_dsub>
 8003d54:	a354      	add	r3, pc, #336	; (adr r3, 8003ea8 <__ieee754_pow+0x3c8>)
 8003d56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d5a:	4604      	mov	r4, r0
 8003d5c:	460d      	mov	r5, r1
 8003d5e:	f7fc fc4b 	bl	80005f8 <__aeabi_dmul>
 8003d62:	a353      	add	r3, pc, #332	; (adr r3, 8003eb0 <__ieee754_pow+0x3d0>)
 8003d64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d68:	4606      	mov	r6, r0
 8003d6a:	460f      	mov	r7, r1
 8003d6c:	4620      	mov	r0, r4
 8003d6e:	4629      	mov	r1, r5
 8003d70:	f7fc fc42 	bl	80005f8 <__aeabi_dmul>
 8003d74:	4b57      	ldr	r3, [pc, #348]	; (8003ed4 <__ieee754_pow+0x3f4>)
 8003d76:	4682      	mov	sl, r0
 8003d78:	468b      	mov	fp, r1
 8003d7a:	2200      	movs	r2, #0
 8003d7c:	4620      	mov	r0, r4
 8003d7e:	4629      	mov	r1, r5
 8003d80:	f7fc fc3a 	bl	80005f8 <__aeabi_dmul>
 8003d84:	4602      	mov	r2, r0
 8003d86:	460b      	mov	r3, r1
 8003d88:	a14b      	add	r1, pc, #300	; (adr r1, 8003eb8 <__ieee754_pow+0x3d8>)
 8003d8a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003d8e:	f7fc fa7b 	bl	8000288 <__aeabi_dsub>
 8003d92:	4622      	mov	r2, r4
 8003d94:	462b      	mov	r3, r5
 8003d96:	f7fc fc2f 	bl	80005f8 <__aeabi_dmul>
 8003d9a:	4602      	mov	r2, r0
 8003d9c:	460b      	mov	r3, r1
 8003d9e:	2000      	movs	r0, #0
 8003da0:	494d      	ldr	r1, [pc, #308]	; (8003ed8 <__ieee754_pow+0x3f8>)
 8003da2:	f7fc fa71 	bl	8000288 <__aeabi_dsub>
 8003da6:	4622      	mov	r2, r4
 8003da8:	4680      	mov	r8, r0
 8003daa:	4689      	mov	r9, r1
 8003dac:	462b      	mov	r3, r5
 8003dae:	4620      	mov	r0, r4
 8003db0:	4629      	mov	r1, r5
 8003db2:	f7fc fc21 	bl	80005f8 <__aeabi_dmul>
 8003db6:	4602      	mov	r2, r0
 8003db8:	460b      	mov	r3, r1
 8003dba:	4640      	mov	r0, r8
 8003dbc:	4649      	mov	r1, r9
 8003dbe:	f7fc fc1b 	bl	80005f8 <__aeabi_dmul>
 8003dc2:	a33f      	add	r3, pc, #252	; (adr r3, 8003ec0 <__ieee754_pow+0x3e0>)
 8003dc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003dc8:	f7fc fc16 	bl	80005f8 <__aeabi_dmul>
 8003dcc:	4602      	mov	r2, r0
 8003dce:	460b      	mov	r3, r1
 8003dd0:	4650      	mov	r0, sl
 8003dd2:	4659      	mov	r1, fp
 8003dd4:	f7fc fa58 	bl	8000288 <__aeabi_dsub>
 8003dd8:	4602      	mov	r2, r0
 8003dda:	460b      	mov	r3, r1
 8003ddc:	4680      	mov	r8, r0
 8003dde:	4689      	mov	r9, r1
 8003de0:	4630      	mov	r0, r6
 8003de2:	4639      	mov	r1, r7
 8003de4:	f7fc fa52 	bl	800028c <__adddf3>
 8003de8:	2000      	movs	r0, #0
 8003dea:	4632      	mov	r2, r6
 8003dec:	463b      	mov	r3, r7
 8003dee:	4604      	mov	r4, r0
 8003df0:	460d      	mov	r5, r1
 8003df2:	f7fc fa49 	bl	8000288 <__aeabi_dsub>
 8003df6:	4602      	mov	r2, r0
 8003df8:	460b      	mov	r3, r1
 8003dfa:	4640      	mov	r0, r8
 8003dfc:	4649      	mov	r1, r9
 8003dfe:	f7fc fa43 	bl	8000288 <__aeabi_dsub>
 8003e02:	9b04      	ldr	r3, [sp, #16]
 8003e04:	9a06      	ldr	r2, [sp, #24]
 8003e06:	3b01      	subs	r3, #1
 8003e08:	4313      	orrs	r3, r2
 8003e0a:	4682      	mov	sl, r0
 8003e0c:	468b      	mov	fp, r1
 8003e0e:	f040 81e7 	bne.w	80041e0 <__ieee754_pow+0x700>
 8003e12:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 8003ec8 <__ieee754_pow+0x3e8>
 8003e16:	eeb0 8a47 	vmov.f32	s16, s14
 8003e1a:	eef0 8a67 	vmov.f32	s17, s15
 8003e1e:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003e22:	2600      	movs	r6, #0
 8003e24:	4632      	mov	r2, r6
 8003e26:	463b      	mov	r3, r7
 8003e28:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003e2c:	f7fc fa2c 	bl	8000288 <__aeabi_dsub>
 8003e30:	4622      	mov	r2, r4
 8003e32:	462b      	mov	r3, r5
 8003e34:	f7fc fbe0 	bl	80005f8 <__aeabi_dmul>
 8003e38:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003e3c:	4680      	mov	r8, r0
 8003e3e:	4689      	mov	r9, r1
 8003e40:	4650      	mov	r0, sl
 8003e42:	4659      	mov	r1, fp
 8003e44:	f7fc fbd8 	bl	80005f8 <__aeabi_dmul>
 8003e48:	4602      	mov	r2, r0
 8003e4a:	460b      	mov	r3, r1
 8003e4c:	4640      	mov	r0, r8
 8003e4e:	4649      	mov	r1, r9
 8003e50:	f7fc fa1c 	bl	800028c <__adddf3>
 8003e54:	4632      	mov	r2, r6
 8003e56:	463b      	mov	r3, r7
 8003e58:	4680      	mov	r8, r0
 8003e5a:	4689      	mov	r9, r1
 8003e5c:	4620      	mov	r0, r4
 8003e5e:	4629      	mov	r1, r5
 8003e60:	f7fc fbca 	bl	80005f8 <__aeabi_dmul>
 8003e64:	460b      	mov	r3, r1
 8003e66:	4604      	mov	r4, r0
 8003e68:	460d      	mov	r5, r1
 8003e6a:	4602      	mov	r2, r0
 8003e6c:	4649      	mov	r1, r9
 8003e6e:	4640      	mov	r0, r8
 8003e70:	f7fc fa0c 	bl	800028c <__adddf3>
 8003e74:	4b19      	ldr	r3, [pc, #100]	; (8003edc <__ieee754_pow+0x3fc>)
 8003e76:	4299      	cmp	r1, r3
 8003e78:	ec45 4b19 	vmov	d9, r4, r5
 8003e7c:	4606      	mov	r6, r0
 8003e7e:	460f      	mov	r7, r1
 8003e80:	468b      	mov	fp, r1
 8003e82:	f340 82f0 	ble.w	8004466 <__ieee754_pow+0x986>
 8003e86:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 8003e8a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 8003e8e:	4303      	orrs	r3, r0
 8003e90:	f000 81e4 	beq.w	800425c <__ieee754_pow+0x77c>
 8003e94:	ec51 0b18 	vmov	r0, r1, d8
 8003e98:	2200      	movs	r2, #0
 8003e9a:	2300      	movs	r3, #0
 8003e9c:	f7fc fe1e 	bl	8000adc <__aeabi_dcmplt>
 8003ea0:	3800      	subs	r0, #0
 8003ea2:	bf18      	it	ne
 8003ea4:	2001      	movne	r0, #1
 8003ea6:	e72b      	b.n	8003d00 <__ieee754_pow+0x220>
 8003ea8:	60000000 	.word	0x60000000
 8003eac:	3ff71547 	.word	0x3ff71547
 8003eb0:	f85ddf44 	.word	0xf85ddf44
 8003eb4:	3e54ae0b 	.word	0x3e54ae0b
 8003eb8:	55555555 	.word	0x55555555
 8003ebc:	3fd55555 	.word	0x3fd55555
 8003ec0:	652b82fe 	.word	0x652b82fe
 8003ec4:	3ff71547 	.word	0x3ff71547
 8003ec8:	00000000 	.word	0x00000000
 8003ecc:	bff00000 	.word	0xbff00000
 8003ed0:	3ff00000 	.word	0x3ff00000
 8003ed4:	3fd00000 	.word	0x3fd00000
 8003ed8:	3fe00000 	.word	0x3fe00000
 8003edc:	408fffff 	.word	0x408fffff
 8003ee0:	4bd5      	ldr	r3, [pc, #852]	; (8004238 <__ieee754_pow+0x758>)
 8003ee2:	402b      	ands	r3, r5
 8003ee4:	2200      	movs	r2, #0
 8003ee6:	b92b      	cbnz	r3, 8003ef4 <__ieee754_pow+0x414>
 8003ee8:	4bd4      	ldr	r3, [pc, #848]	; (800423c <__ieee754_pow+0x75c>)
 8003eea:	f7fc fb85 	bl	80005f8 <__aeabi_dmul>
 8003eee:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8003ef2:	460c      	mov	r4, r1
 8003ef4:	1523      	asrs	r3, r4, #20
 8003ef6:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8003efa:	4413      	add	r3, r2
 8003efc:	9305      	str	r3, [sp, #20]
 8003efe:	4bd0      	ldr	r3, [pc, #832]	; (8004240 <__ieee754_pow+0x760>)
 8003f00:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8003f04:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8003f08:	429c      	cmp	r4, r3
 8003f0a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8003f0e:	dd08      	ble.n	8003f22 <__ieee754_pow+0x442>
 8003f10:	4bcc      	ldr	r3, [pc, #816]	; (8004244 <__ieee754_pow+0x764>)
 8003f12:	429c      	cmp	r4, r3
 8003f14:	f340 8162 	ble.w	80041dc <__ieee754_pow+0x6fc>
 8003f18:	9b05      	ldr	r3, [sp, #20]
 8003f1a:	3301      	adds	r3, #1
 8003f1c:	9305      	str	r3, [sp, #20]
 8003f1e:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8003f22:	2400      	movs	r4, #0
 8003f24:	00e3      	lsls	r3, r4, #3
 8003f26:	9307      	str	r3, [sp, #28]
 8003f28:	4bc7      	ldr	r3, [pc, #796]	; (8004248 <__ieee754_pow+0x768>)
 8003f2a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003f2e:	ed93 7b00 	vldr	d7, [r3]
 8003f32:	4629      	mov	r1, r5
 8003f34:	ec53 2b17 	vmov	r2, r3, d7
 8003f38:	eeb0 9a47 	vmov.f32	s18, s14
 8003f3c:	eef0 9a67 	vmov.f32	s19, s15
 8003f40:	4682      	mov	sl, r0
 8003f42:	f7fc f9a1 	bl	8000288 <__aeabi_dsub>
 8003f46:	4652      	mov	r2, sl
 8003f48:	4606      	mov	r6, r0
 8003f4a:	460f      	mov	r7, r1
 8003f4c:	462b      	mov	r3, r5
 8003f4e:	ec51 0b19 	vmov	r0, r1, d9
 8003f52:	f7fc f99b 	bl	800028c <__adddf3>
 8003f56:	4602      	mov	r2, r0
 8003f58:	460b      	mov	r3, r1
 8003f5a:	2000      	movs	r0, #0
 8003f5c:	49bb      	ldr	r1, [pc, #748]	; (800424c <__ieee754_pow+0x76c>)
 8003f5e:	f7fc fc75 	bl	800084c <__aeabi_ddiv>
 8003f62:	ec41 0b1a 	vmov	d10, r0, r1
 8003f66:	4602      	mov	r2, r0
 8003f68:	460b      	mov	r3, r1
 8003f6a:	4630      	mov	r0, r6
 8003f6c:	4639      	mov	r1, r7
 8003f6e:	f7fc fb43 	bl	80005f8 <__aeabi_dmul>
 8003f72:	2300      	movs	r3, #0
 8003f74:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003f78:	9302      	str	r3, [sp, #8]
 8003f7a:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8003f7e:	46ab      	mov	fp, r5
 8003f80:	106d      	asrs	r5, r5, #1
 8003f82:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8003f86:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 8003f8a:	ec41 0b18 	vmov	d8, r0, r1
 8003f8e:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8003f92:	2200      	movs	r2, #0
 8003f94:	4640      	mov	r0, r8
 8003f96:	4649      	mov	r1, r9
 8003f98:	4614      	mov	r4, r2
 8003f9a:	461d      	mov	r5, r3
 8003f9c:	f7fc fb2c 	bl	80005f8 <__aeabi_dmul>
 8003fa0:	4602      	mov	r2, r0
 8003fa2:	460b      	mov	r3, r1
 8003fa4:	4630      	mov	r0, r6
 8003fa6:	4639      	mov	r1, r7
 8003fa8:	f7fc f96e 	bl	8000288 <__aeabi_dsub>
 8003fac:	ec53 2b19 	vmov	r2, r3, d9
 8003fb0:	4606      	mov	r6, r0
 8003fb2:	460f      	mov	r7, r1
 8003fb4:	4620      	mov	r0, r4
 8003fb6:	4629      	mov	r1, r5
 8003fb8:	f7fc f966 	bl	8000288 <__aeabi_dsub>
 8003fbc:	4602      	mov	r2, r0
 8003fbe:	460b      	mov	r3, r1
 8003fc0:	4650      	mov	r0, sl
 8003fc2:	4659      	mov	r1, fp
 8003fc4:	f7fc f960 	bl	8000288 <__aeabi_dsub>
 8003fc8:	4642      	mov	r2, r8
 8003fca:	464b      	mov	r3, r9
 8003fcc:	f7fc fb14 	bl	80005f8 <__aeabi_dmul>
 8003fd0:	4602      	mov	r2, r0
 8003fd2:	460b      	mov	r3, r1
 8003fd4:	4630      	mov	r0, r6
 8003fd6:	4639      	mov	r1, r7
 8003fd8:	f7fc f956 	bl	8000288 <__aeabi_dsub>
 8003fdc:	ec53 2b1a 	vmov	r2, r3, d10
 8003fe0:	f7fc fb0a 	bl	80005f8 <__aeabi_dmul>
 8003fe4:	ec53 2b18 	vmov	r2, r3, d8
 8003fe8:	ec41 0b19 	vmov	d9, r0, r1
 8003fec:	ec51 0b18 	vmov	r0, r1, d8
 8003ff0:	f7fc fb02 	bl	80005f8 <__aeabi_dmul>
 8003ff4:	a37c      	add	r3, pc, #496	; (adr r3, 80041e8 <__ieee754_pow+0x708>)
 8003ff6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ffa:	4604      	mov	r4, r0
 8003ffc:	460d      	mov	r5, r1
 8003ffe:	f7fc fafb 	bl	80005f8 <__aeabi_dmul>
 8004002:	a37b      	add	r3, pc, #492	; (adr r3, 80041f0 <__ieee754_pow+0x710>)
 8004004:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004008:	f7fc f940 	bl	800028c <__adddf3>
 800400c:	4622      	mov	r2, r4
 800400e:	462b      	mov	r3, r5
 8004010:	f7fc faf2 	bl	80005f8 <__aeabi_dmul>
 8004014:	a378      	add	r3, pc, #480	; (adr r3, 80041f8 <__ieee754_pow+0x718>)
 8004016:	e9d3 2300 	ldrd	r2, r3, [r3]
 800401a:	f7fc f937 	bl	800028c <__adddf3>
 800401e:	4622      	mov	r2, r4
 8004020:	462b      	mov	r3, r5
 8004022:	f7fc fae9 	bl	80005f8 <__aeabi_dmul>
 8004026:	a376      	add	r3, pc, #472	; (adr r3, 8004200 <__ieee754_pow+0x720>)
 8004028:	e9d3 2300 	ldrd	r2, r3, [r3]
 800402c:	f7fc f92e 	bl	800028c <__adddf3>
 8004030:	4622      	mov	r2, r4
 8004032:	462b      	mov	r3, r5
 8004034:	f7fc fae0 	bl	80005f8 <__aeabi_dmul>
 8004038:	a373      	add	r3, pc, #460	; (adr r3, 8004208 <__ieee754_pow+0x728>)
 800403a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800403e:	f7fc f925 	bl	800028c <__adddf3>
 8004042:	4622      	mov	r2, r4
 8004044:	462b      	mov	r3, r5
 8004046:	f7fc fad7 	bl	80005f8 <__aeabi_dmul>
 800404a:	a371      	add	r3, pc, #452	; (adr r3, 8004210 <__ieee754_pow+0x730>)
 800404c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004050:	f7fc f91c 	bl	800028c <__adddf3>
 8004054:	4622      	mov	r2, r4
 8004056:	4606      	mov	r6, r0
 8004058:	460f      	mov	r7, r1
 800405a:	462b      	mov	r3, r5
 800405c:	4620      	mov	r0, r4
 800405e:	4629      	mov	r1, r5
 8004060:	f7fc faca 	bl	80005f8 <__aeabi_dmul>
 8004064:	4602      	mov	r2, r0
 8004066:	460b      	mov	r3, r1
 8004068:	4630      	mov	r0, r6
 800406a:	4639      	mov	r1, r7
 800406c:	f7fc fac4 	bl	80005f8 <__aeabi_dmul>
 8004070:	4642      	mov	r2, r8
 8004072:	4604      	mov	r4, r0
 8004074:	460d      	mov	r5, r1
 8004076:	464b      	mov	r3, r9
 8004078:	ec51 0b18 	vmov	r0, r1, d8
 800407c:	f7fc f906 	bl	800028c <__adddf3>
 8004080:	ec53 2b19 	vmov	r2, r3, d9
 8004084:	f7fc fab8 	bl	80005f8 <__aeabi_dmul>
 8004088:	4622      	mov	r2, r4
 800408a:	462b      	mov	r3, r5
 800408c:	f7fc f8fe 	bl	800028c <__adddf3>
 8004090:	4642      	mov	r2, r8
 8004092:	4682      	mov	sl, r0
 8004094:	468b      	mov	fp, r1
 8004096:	464b      	mov	r3, r9
 8004098:	4640      	mov	r0, r8
 800409a:	4649      	mov	r1, r9
 800409c:	f7fc faac 	bl	80005f8 <__aeabi_dmul>
 80040a0:	4b6b      	ldr	r3, [pc, #428]	; (8004250 <__ieee754_pow+0x770>)
 80040a2:	2200      	movs	r2, #0
 80040a4:	4606      	mov	r6, r0
 80040a6:	460f      	mov	r7, r1
 80040a8:	f7fc f8f0 	bl	800028c <__adddf3>
 80040ac:	4652      	mov	r2, sl
 80040ae:	465b      	mov	r3, fp
 80040b0:	f7fc f8ec 	bl	800028c <__adddf3>
 80040b4:	2000      	movs	r0, #0
 80040b6:	4604      	mov	r4, r0
 80040b8:	460d      	mov	r5, r1
 80040ba:	4602      	mov	r2, r0
 80040bc:	460b      	mov	r3, r1
 80040be:	4640      	mov	r0, r8
 80040c0:	4649      	mov	r1, r9
 80040c2:	f7fc fa99 	bl	80005f8 <__aeabi_dmul>
 80040c6:	4b62      	ldr	r3, [pc, #392]	; (8004250 <__ieee754_pow+0x770>)
 80040c8:	4680      	mov	r8, r0
 80040ca:	4689      	mov	r9, r1
 80040cc:	2200      	movs	r2, #0
 80040ce:	4620      	mov	r0, r4
 80040d0:	4629      	mov	r1, r5
 80040d2:	f7fc f8d9 	bl	8000288 <__aeabi_dsub>
 80040d6:	4632      	mov	r2, r6
 80040d8:	463b      	mov	r3, r7
 80040da:	f7fc f8d5 	bl	8000288 <__aeabi_dsub>
 80040de:	4602      	mov	r2, r0
 80040e0:	460b      	mov	r3, r1
 80040e2:	4650      	mov	r0, sl
 80040e4:	4659      	mov	r1, fp
 80040e6:	f7fc f8cf 	bl	8000288 <__aeabi_dsub>
 80040ea:	ec53 2b18 	vmov	r2, r3, d8
 80040ee:	f7fc fa83 	bl	80005f8 <__aeabi_dmul>
 80040f2:	4622      	mov	r2, r4
 80040f4:	4606      	mov	r6, r0
 80040f6:	460f      	mov	r7, r1
 80040f8:	462b      	mov	r3, r5
 80040fa:	ec51 0b19 	vmov	r0, r1, d9
 80040fe:	f7fc fa7b 	bl	80005f8 <__aeabi_dmul>
 8004102:	4602      	mov	r2, r0
 8004104:	460b      	mov	r3, r1
 8004106:	4630      	mov	r0, r6
 8004108:	4639      	mov	r1, r7
 800410a:	f7fc f8bf 	bl	800028c <__adddf3>
 800410e:	4606      	mov	r6, r0
 8004110:	460f      	mov	r7, r1
 8004112:	4602      	mov	r2, r0
 8004114:	460b      	mov	r3, r1
 8004116:	4640      	mov	r0, r8
 8004118:	4649      	mov	r1, r9
 800411a:	f7fc f8b7 	bl	800028c <__adddf3>
 800411e:	a33e      	add	r3, pc, #248	; (adr r3, 8004218 <__ieee754_pow+0x738>)
 8004120:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004124:	2000      	movs	r0, #0
 8004126:	4604      	mov	r4, r0
 8004128:	460d      	mov	r5, r1
 800412a:	f7fc fa65 	bl	80005f8 <__aeabi_dmul>
 800412e:	4642      	mov	r2, r8
 8004130:	ec41 0b18 	vmov	d8, r0, r1
 8004134:	464b      	mov	r3, r9
 8004136:	4620      	mov	r0, r4
 8004138:	4629      	mov	r1, r5
 800413a:	f7fc f8a5 	bl	8000288 <__aeabi_dsub>
 800413e:	4602      	mov	r2, r0
 8004140:	460b      	mov	r3, r1
 8004142:	4630      	mov	r0, r6
 8004144:	4639      	mov	r1, r7
 8004146:	f7fc f89f 	bl	8000288 <__aeabi_dsub>
 800414a:	a335      	add	r3, pc, #212	; (adr r3, 8004220 <__ieee754_pow+0x740>)
 800414c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004150:	f7fc fa52 	bl	80005f8 <__aeabi_dmul>
 8004154:	a334      	add	r3, pc, #208	; (adr r3, 8004228 <__ieee754_pow+0x748>)
 8004156:	e9d3 2300 	ldrd	r2, r3, [r3]
 800415a:	4606      	mov	r6, r0
 800415c:	460f      	mov	r7, r1
 800415e:	4620      	mov	r0, r4
 8004160:	4629      	mov	r1, r5
 8004162:	f7fc fa49 	bl	80005f8 <__aeabi_dmul>
 8004166:	4602      	mov	r2, r0
 8004168:	460b      	mov	r3, r1
 800416a:	4630      	mov	r0, r6
 800416c:	4639      	mov	r1, r7
 800416e:	f7fc f88d 	bl	800028c <__adddf3>
 8004172:	9a07      	ldr	r2, [sp, #28]
 8004174:	4b37      	ldr	r3, [pc, #220]	; (8004254 <__ieee754_pow+0x774>)
 8004176:	4413      	add	r3, r2
 8004178:	e9d3 2300 	ldrd	r2, r3, [r3]
 800417c:	f7fc f886 	bl	800028c <__adddf3>
 8004180:	4682      	mov	sl, r0
 8004182:	9805      	ldr	r0, [sp, #20]
 8004184:	468b      	mov	fp, r1
 8004186:	f7fc f9cd 	bl	8000524 <__aeabi_i2d>
 800418a:	9a07      	ldr	r2, [sp, #28]
 800418c:	4b32      	ldr	r3, [pc, #200]	; (8004258 <__ieee754_pow+0x778>)
 800418e:	4413      	add	r3, r2
 8004190:	e9d3 8900 	ldrd	r8, r9, [r3]
 8004194:	4606      	mov	r6, r0
 8004196:	460f      	mov	r7, r1
 8004198:	4652      	mov	r2, sl
 800419a:	465b      	mov	r3, fp
 800419c:	ec51 0b18 	vmov	r0, r1, d8
 80041a0:	f7fc f874 	bl	800028c <__adddf3>
 80041a4:	4642      	mov	r2, r8
 80041a6:	464b      	mov	r3, r9
 80041a8:	f7fc f870 	bl	800028c <__adddf3>
 80041ac:	4632      	mov	r2, r6
 80041ae:	463b      	mov	r3, r7
 80041b0:	f7fc f86c 	bl	800028c <__adddf3>
 80041b4:	2000      	movs	r0, #0
 80041b6:	4632      	mov	r2, r6
 80041b8:	463b      	mov	r3, r7
 80041ba:	4604      	mov	r4, r0
 80041bc:	460d      	mov	r5, r1
 80041be:	f7fc f863 	bl	8000288 <__aeabi_dsub>
 80041c2:	4642      	mov	r2, r8
 80041c4:	464b      	mov	r3, r9
 80041c6:	f7fc f85f 	bl	8000288 <__aeabi_dsub>
 80041ca:	ec53 2b18 	vmov	r2, r3, d8
 80041ce:	f7fc f85b 	bl	8000288 <__aeabi_dsub>
 80041d2:	4602      	mov	r2, r0
 80041d4:	460b      	mov	r3, r1
 80041d6:	4650      	mov	r0, sl
 80041d8:	4659      	mov	r1, fp
 80041da:	e610      	b.n	8003dfe <__ieee754_pow+0x31e>
 80041dc:	2401      	movs	r4, #1
 80041de:	e6a1      	b.n	8003f24 <__ieee754_pow+0x444>
 80041e0:	ed9f 7b13 	vldr	d7, [pc, #76]	; 8004230 <__ieee754_pow+0x750>
 80041e4:	e617      	b.n	8003e16 <__ieee754_pow+0x336>
 80041e6:	bf00      	nop
 80041e8:	4a454eef 	.word	0x4a454eef
 80041ec:	3fca7e28 	.word	0x3fca7e28
 80041f0:	93c9db65 	.word	0x93c9db65
 80041f4:	3fcd864a 	.word	0x3fcd864a
 80041f8:	a91d4101 	.word	0xa91d4101
 80041fc:	3fd17460 	.word	0x3fd17460
 8004200:	518f264d 	.word	0x518f264d
 8004204:	3fd55555 	.word	0x3fd55555
 8004208:	db6fabff 	.word	0xdb6fabff
 800420c:	3fdb6db6 	.word	0x3fdb6db6
 8004210:	33333303 	.word	0x33333303
 8004214:	3fe33333 	.word	0x3fe33333
 8004218:	e0000000 	.word	0xe0000000
 800421c:	3feec709 	.word	0x3feec709
 8004220:	dc3a03fd 	.word	0xdc3a03fd
 8004224:	3feec709 	.word	0x3feec709
 8004228:	145b01f5 	.word	0x145b01f5
 800422c:	be3e2fe0 	.word	0xbe3e2fe0
 8004230:	00000000 	.word	0x00000000
 8004234:	3ff00000 	.word	0x3ff00000
 8004238:	7ff00000 	.word	0x7ff00000
 800423c:	43400000 	.word	0x43400000
 8004240:	0003988e 	.word	0x0003988e
 8004244:	000bb679 	.word	0x000bb679
 8004248:	08004780 	.word	0x08004780
 800424c:	3ff00000 	.word	0x3ff00000
 8004250:	40080000 	.word	0x40080000
 8004254:	080047a0 	.word	0x080047a0
 8004258:	08004790 	.word	0x08004790
 800425c:	a3b3      	add	r3, pc, #716	; (adr r3, 800452c <__ieee754_pow+0xa4c>)
 800425e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004262:	4640      	mov	r0, r8
 8004264:	4649      	mov	r1, r9
 8004266:	f7fc f811 	bl	800028c <__adddf3>
 800426a:	4622      	mov	r2, r4
 800426c:	ec41 0b1a 	vmov	d10, r0, r1
 8004270:	462b      	mov	r3, r5
 8004272:	4630      	mov	r0, r6
 8004274:	4639      	mov	r1, r7
 8004276:	f7fc f807 	bl	8000288 <__aeabi_dsub>
 800427a:	4602      	mov	r2, r0
 800427c:	460b      	mov	r3, r1
 800427e:	ec51 0b1a 	vmov	r0, r1, d10
 8004282:	f7fc fc49 	bl	8000b18 <__aeabi_dcmpgt>
 8004286:	2800      	cmp	r0, #0
 8004288:	f47f ae04 	bne.w	8003e94 <__ieee754_pow+0x3b4>
 800428c:	4aa2      	ldr	r2, [pc, #648]	; (8004518 <__ieee754_pow+0xa38>)
 800428e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004292:	4293      	cmp	r3, r2
 8004294:	f340 8107 	ble.w	80044a6 <__ieee754_pow+0x9c6>
 8004298:	151b      	asrs	r3, r3, #20
 800429a:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 800429e:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 80042a2:	fa4a fa03 	asr.w	sl, sl, r3
 80042a6:	44da      	add	sl, fp
 80042a8:	f3ca 510a 	ubfx	r1, sl, #20, #11
 80042ac:	489b      	ldr	r0, [pc, #620]	; (800451c <__ieee754_pow+0xa3c>)
 80042ae:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 80042b2:	4108      	asrs	r0, r1
 80042b4:	ea00 030a 	and.w	r3, r0, sl
 80042b8:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 80042bc:	f1c1 0114 	rsb	r1, r1, #20
 80042c0:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 80042c4:	fa4a fa01 	asr.w	sl, sl, r1
 80042c8:	f1bb 0f00 	cmp.w	fp, #0
 80042cc:	f04f 0200 	mov.w	r2, #0
 80042d0:	4620      	mov	r0, r4
 80042d2:	4629      	mov	r1, r5
 80042d4:	bfb8      	it	lt
 80042d6:	f1ca 0a00 	rsblt	sl, sl, #0
 80042da:	f7fb ffd5 	bl	8000288 <__aeabi_dsub>
 80042de:	ec41 0b19 	vmov	d9, r0, r1
 80042e2:	4642      	mov	r2, r8
 80042e4:	464b      	mov	r3, r9
 80042e6:	ec51 0b19 	vmov	r0, r1, d9
 80042ea:	f7fb ffcf 	bl	800028c <__adddf3>
 80042ee:	a37a      	add	r3, pc, #488	; (adr r3, 80044d8 <__ieee754_pow+0x9f8>)
 80042f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042f4:	2000      	movs	r0, #0
 80042f6:	4604      	mov	r4, r0
 80042f8:	460d      	mov	r5, r1
 80042fa:	f7fc f97d 	bl	80005f8 <__aeabi_dmul>
 80042fe:	ec53 2b19 	vmov	r2, r3, d9
 8004302:	4606      	mov	r6, r0
 8004304:	460f      	mov	r7, r1
 8004306:	4620      	mov	r0, r4
 8004308:	4629      	mov	r1, r5
 800430a:	f7fb ffbd 	bl	8000288 <__aeabi_dsub>
 800430e:	4602      	mov	r2, r0
 8004310:	460b      	mov	r3, r1
 8004312:	4640      	mov	r0, r8
 8004314:	4649      	mov	r1, r9
 8004316:	f7fb ffb7 	bl	8000288 <__aeabi_dsub>
 800431a:	a371      	add	r3, pc, #452	; (adr r3, 80044e0 <__ieee754_pow+0xa00>)
 800431c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004320:	f7fc f96a 	bl	80005f8 <__aeabi_dmul>
 8004324:	a370      	add	r3, pc, #448	; (adr r3, 80044e8 <__ieee754_pow+0xa08>)
 8004326:	e9d3 2300 	ldrd	r2, r3, [r3]
 800432a:	4680      	mov	r8, r0
 800432c:	4689      	mov	r9, r1
 800432e:	4620      	mov	r0, r4
 8004330:	4629      	mov	r1, r5
 8004332:	f7fc f961 	bl	80005f8 <__aeabi_dmul>
 8004336:	4602      	mov	r2, r0
 8004338:	460b      	mov	r3, r1
 800433a:	4640      	mov	r0, r8
 800433c:	4649      	mov	r1, r9
 800433e:	f7fb ffa5 	bl	800028c <__adddf3>
 8004342:	4604      	mov	r4, r0
 8004344:	460d      	mov	r5, r1
 8004346:	4602      	mov	r2, r0
 8004348:	460b      	mov	r3, r1
 800434a:	4630      	mov	r0, r6
 800434c:	4639      	mov	r1, r7
 800434e:	f7fb ff9d 	bl	800028c <__adddf3>
 8004352:	4632      	mov	r2, r6
 8004354:	463b      	mov	r3, r7
 8004356:	4680      	mov	r8, r0
 8004358:	4689      	mov	r9, r1
 800435a:	f7fb ff95 	bl	8000288 <__aeabi_dsub>
 800435e:	4602      	mov	r2, r0
 8004360:	460b      	mov	r3, r1
 8004362:	4620      	mov	r0, r4
 8004364:	4629      	mov	r1, r5
 8004366:	f7fb ff8f 	bl	8000288 <__aeabi_dsub>
 800436a:	4642      	mov	r2, r8
 800436c:	4606      	mov	r6, r0
 800436e:	460f      	mov	r7, r1
 8004370:	464b      	mov	r3, r9
 8004372:	4640      	mov	r0, r8
 8004374:	4649      	mov	r1, r9
 8004376:	f7fc f93f 	bl	80005f8 <__aeabi_dmul>
 800437a:	a35d      	add	r3, pc, #372	; (adr r3, 80044f0 <__ieee754_pow+0xa10>)
 800437c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004380:	4604      	mov	r4, r0
 8004382:	460d      	mov	r5, r1
 8004384:	f7fc f938 	bl	80005f8 <__aeabi_dmul>
 8004388:	a35b      	add	r3, pc, #364	; (adr r3, 80044f8 <__ieee754_pow+0xa18>)
 800438a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800438e:	f7fb ff7b 	bl	8000288 <__aeabi_dsub>
 8004392:	4622      	mov	r2, r4
 8004394:	462b      	mov	r3, r5
 8004396:	f7fc f92f 	bl	80005f8 <__aeabi_dmul>
 800439a:	a359      	add	r3, pc, #356	; (adr r3, 8004500 <__ieee754_pow+0xa20>)
 800439c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80043a0:	f7fb ff74 	bl	800028c <__adddf3>
 80043a4:	4622      	mov	r2, r4
 80043a6:	462b      	mov	r3, r5
 80043a8:	f7fc f926 	bl	80005f8 <__aeabi_dmul>
 80043ac:	a356      	add	r3, pc, #344	; (adr r3, 8004508 <__ieee754_pow+0xa28>)
 80043ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80043b2:	f7fb ff69 	bl	8000288 <__aeabi_dsub>
 80043b6:	4622      	mov	r2, r4
 80043b8:	462b      	mov	r3, r5
 80043ba:	f7fc f91d 	bl	80005f8 <__aeabi_dmul>
 80043be:	a354      	add	r3, pc, #336	; (adr r3, 8004510 <__ieee754_pow+0xa30>)
 80043c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80043c4:	f7fb ff62 	bl	800028c <__adddf3>
 80043c8:	4622      	mov	r2, r4
 80043ca:	462b      	mov	r3, r5
 80043cc:	f7fc f914 	bl	80005f8 <__aeabi_dmul>
 80043d0:	4602      	mov	r2, r0
 80043d2:	460b      	mov	r3, r1
 80043d4:	4640      	mov	r0, r8
 80043d6:	4649      	mov	r1, r9
 80043d8:	f7fb ff56 	bl	8000288 <__aeabi_dsub>
 80043dc:	4604      	mov	r4, r0
 80043de:	460d      	mov	r5, r1
 80043e0:	4602      	mov	r2, r0
 80043e2:	460b      	mov	r3, r1
 80043e4:	4640      	mov	r0, r8
 80043e6:	4649      	mov	r1, r9
 80043e8:	f7fc f906 	bl	80005f8 <__aeabi_dmul>
 80043ec:	2200      	movs	r2, #0
 80043ee:	ec41 0b19 	vmov	d9, r0, r1
 80043f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80043f6:	4620      	mov	r0, r4
 80043f8:	4629      	mov	r1, r5
 80043fa:	f7fb ff45 	bl	8000288 <__aeabi_dsub>
 80043fe:	4602      	mov	r2, r0
 8004400:	460b      	mov	r3, r1
 8004402:	ec51 0b19 	vmov	r0, r1, d9
 8004406:	f7fc fa21 	bl	800084c <__aeabi_ddiv>
 800440a:	4632      	mov	r2, r6
 800440c:	4604      	mov	r4, r0
 800440e:	460d      	mov	r5, r1
 8004410:	463b      	mov	r3, r7
 8004412:	4640      	mov	r0, r8
 8004414:	4649      	mov	r1, r9
 8004416:	f7fc f8ef 	bl	80005f8 <__aeabi_dmul>
 800441a:	4632      	mov	r2, r6
 800441c:	463b      	mov	r3, r7
 800441e:	f7fb ff35 	bl	800028c <__adddf3>
 8004422:	4602      	mov	r2, r0
 8004424:	460b      	mov	r3, r1
 8004426:	4620      	mov	r0, r4
 8004428:	4629      	mov	r1, r5
 800442a:	f7fb ff2d 	bl	8000288 <__aeabi_dsub>
 800442e:	4642      	mov	r2, r8
 8004430:	464b      	mov	r3, r9
 8004432:	f7fb ff29 	bl	8000288 <__aeabi_dsub>
 8004436:	460b      	mov	r3, r1
 8004438:	4602      	mov	r2, r0
 800443a:	4939      	ldr	r1, [pc, #228]	; (8004520 <__ieee754_pow+0xa40>)
 800443c:	2000      	movs	r0, #0
 800443e:	f7fb ff23 	bl	8000288 <__aeabi_dsub>
 8004442:	ec41 0b10 	vmov	d0, r0, r1
 8004446:	ee10 3a90 	vmov	r3, s1
 800444a:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 800444e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004452:	da2b      	bge.n	80044ac <__ieee754_pow+0x9cc>
 8004454:	4650      	mov	r0, sl
 8004456:	f000 f89f 	bl	8004598 <scalbn>
 800445a:	ec51 0b10 	vmov	r0, r1, d0
 800445e:	ec53 2b18 	vmov	r2, r3, d8
 8004462:	f7ff bbee 	b.w	8003c42 <__ieee754_pow+0x162>
 8004466:	4b2f      	ldr	r3, [pc, #188]	; (8004524 <__ieee754_pow+0xa44>)
 8004468:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 800446c:	429e      	cmp	r6, r3
 800446e:	f77f af0d 	ble.w	800428c <__ieee754_pow+0x7ac>
 8004472:	4b2d      	ldr	r3, [pc, #180]	; (8004528 <__ieee754_pow+0xa48>)
 8004474:	440b      	add	r3, r1
 8004476:	4303      	orrs	r3, r0
 8004478:	d009      	beq.n	800448e <__ieee754_pow+0x9ae>
 800447a:	ec51 0b18 	vmov	r0, r1, d8
 800447e:	2200      	movs	r2, #0
 8004480:	2300      	movs	r3, #0
 8004482:	f7fc fb2b 	bl	8000adc <__aeabi_dcmplt>
 8004486:	3800      	subs	r0, #0
 8004488:	bf18      	it	ne
 800448a:	2001      	movne	r0, #1
 800448c:	e448      	b.n	8003d20 <__ieee754_pow+0x240>
 800448e:	4622      	mov	r2, r4
 8004490:	462b      	mov	r3, r5
 8004492:	f7fb fef9 	bl	8000288 <__aeabi_dsub>
 8004496:	4642      	mov	r2, r8
 8004498:	464b      	mov	r3, r9
 800449a:	f7fc fb33 	bl	8000b04 <__aeabi_dcmpge>
 800449e:	2800      	cmp	r0, #0
 80044a0:	f43f aef4 	beq.w	800428c <__ieee754_pow+0x7ac>
 80044a4:	e7e9      	b.n	800447a <__ieee754_pow+0x99a>
 80044a6:	f04f 0a00 	mov.w	sl, #0
 80044aa:	e71a      	b.n	80042e2 <__ieee754_pow+0x802>
 80044ac:	ec51 0b10 	vmov	r0, r1, d0
 80044b0:	4619      	mov	r1, r3
 80044b2:	e7d4      	b.n	800445e <__ieee754_pow+0x97e>
 80044b4:	491a      	ldr	r1, [pc, #104]	; (8004520 <__ieee754_pow+0xa40>)
 80044b6:	2000      	movs	r0, #0
 80044b8:	f7ff bb31 	b.w	8003b1e <__ieee754_pow+0x3e>
 80044bc:	2000      	movs	r0, #0
 80044be:	2100      	movs	r1, #0
 80044c0:	f7ff bb2d 	b.w	8003b1e <__ieee754_pow+0x3e>
 80044c4:	4630      	mov	r0, r6
 80044c6:	4639      	mov	r1, r7
 80044c8:	f7ff bb29 	b.w	8003b1e <__ieee754_pow+0x3e>
 80044cc:	9204      	str	r2, [sp, #16]
 80044ce:	f7ff bb7b 	b.w	8003bc8 <__ieee754_pow+0xe8>
 80044d2:	2300      	movs	r3, #0
 80044d4:	f7ff bb65 	b.w	8003ba2 <__ieee754_pow+0xc2>
 80044d8:	00000000 	.word	0x00000000
 80044dc:	3fe62e43 	.word	0x3fe62e43
 80044e0:	fefa39ef 	.word	0xfefa39ef
 80044e4:	3fe62e42 	.word	0x3fe62e42
 80044e8:	0ca86c39 	.word	0x0ca86c39
 80044ec:	be205c61 	.word	0xbe205c61
 80044f0:	72bea4d0 	.word	0x72bea4d0
 80044f4:	3e663769 	.word	0x3e663769
 80044f8:	c5d26bf1 	.word	0xc5d26bf1
 80044fc:	3ebbbd41 	.word	0x3ebbbd41
 8004500:	af25de2c 	.word	0xaf25de2c
 8004504:	3f11566a 	.word	0x3f11566a
 8004508:	16bebd93 	.word	0x16bebd93
 800450c:	3f66c16c 	.word	0x3f66c16c
 8004510:	5555553e 	.word	0x5555553e
 8004514:	3fc55555 	.word	0x3fc55555
 8004518:	3fe00000 	.word	0x3fe00000
 800451c:	fff00000 	.word	0xfff00000
 8004520:	3ff00000 	.word	0x3ff00000
 8004524:	4090cbff 	.word	0x4090cbff
 8004528:	3f6f3400 	.word	0x3f6f3400
 800452c:	652b82fe 	.word	0x652b82fe
 8004530:	3c971547 	.word	0x3c971547

08004534 <with_errno>:
 8004534:	b570      	push	{r4, r5, r6, lr}
 8004536:	4604      	mov	r4, r0
 8004538:	460d      	mov	r5, r1
 800453a:	4616      	mov	r6, r2
 800453c:	f7fd fc66 	bl	8001e0c <__errno>
 8004540:	4629      	mov	r1, r5
 8004542:	6006      	str	r6, [r0, #0]
 8004544:	4620      	mov	r0, r4
 8004546:	bd70      	pop	{r4, r5, r6, pc}

08004548 <xflow>:
 8004548:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800454a:	4614      	mov	r4, r2
 800454c:	461d      	mov	r5, r3
 800454e:	b108      	cbz	r0, 8004554 <xflow+0xc>
 8004550:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8004554:	e9cd 2300 	strd	r2, r3, [sp]
 8004558:	e9dd 2300 	ldrd	r2, r3, [sp]
 800455c:	4620      	mov	r0, r4
 800455e:	4629      	mov	r1, r5
 8004560:	f7fc f84a 	bl	80005f8 <__aeabi_dmul>
 8004564:	2222      	movs	r2, #34	; 0x22
 8004566:	b003      	add	sp, #12
 8004568:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800456c:	f7ff bfe2 	b.w	8004534 <with_errno>

08004570 <__math_uflow>:
 8004570:	b508      	push	{r3, lr}
 8004572:	2200      	movs	r2, #0
 8004574:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8004578:	f7ff ffe6 	bl	8004548 <xflow>
 800457c:	ec41 0b10 	vmov	d0, r0, r1
 8004580:	bd08      	pop	{r3, pc}

08004582 <__math_oflow>:
 8004582:	b508      	push	{r3, lr}
 8004584:	2200      	movs	r2, #0
 8004586:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 800458a:	f7ff ffdd 	bl	8004548 <xflow>
 800458e:	ec41 0b10 	vmov	d0, r0, r1
 8004592:	bd08      	pop	{r3, pc}
 8004594:	0000      	movs	r0, r0
	...

08004598 <scalbn>:
 8004598:	b570      	push	{r4, r5, r6, lr}
 800459a:	ec55 4b10 	vmov	r4, r5, d0
 800459e:	f3c5 510a 	ubfx	r1, r5, #20, #11
 80045a2:	4606      	mov	r6, r0
 80045a4:	462b      	mov	r3, r5
 80045a6:	b999      	cbnz	r1, 80045d0 <scalbn+0x38>
 80045a8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80045ac:	4323      	orrs	r3, r4
 80045ae:	d03f      	beq.n	8004630 <scalbn+0x98>
 80045b0:	4b35      	ldr	r3, [pc, #212]	; (8004688 <scalbn+0xf0>)
 80045b2:	4629      	mov	r1, r5
 80045b4:	ee10 0a10 	vmov	r0, s0
 80045b8:	2200      	movs	r2, #0
 80045ba:	f7fc f81d 	bl	80005f8 <__aeabi_dmul>
 80045be:	4b33      	ldr	r3, [pc, #204]	; (800468c <scalbn+0xf4>)
 80045c0:	429e      	cmp	r6, r3
 80045c2:	4604      	mov	r4, r0
 80045c4:	460d      	mov	r5, r1
 80045c6:	da10      	bge.n	80045ea <scalbn+0x52>
 80045c8:	a327      	add	r3, pc, #156	; (adr r3, 8004668 <scalbn+0xd0>)
 80045ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80045ce:	e01f      	b.n	8004610 <scalbn+0x78>
 80045d0:	f240 72ff 	movw	r2, #2047	; 0x7ff
 80045d4:	4291      	cmp	r1, r2
 80045d6:	d10c      	bne.n	80045f2 <scalbn+0x5a>
 80045d8:	ee10 2a10 	vmov	r2, s0
 80045dc:	4620      	mov	r0, r4
 80045de:	4629      	mov	r1, r5
 80045e0:	f7fb fe54 	bl	800028c <__adddf3>
 80045e4:	4604      	mov	r4, r0
 80045e6:	460d      	mov	r5, r1
 80045e8:	e022      	b.n	8004630 <scalbn+0x98>
 80045ea:	460b      	mov	r3, r1
 80045ec:	f3c1 510a 	ubfx	r1, r1, #20, #11
 80045f0:	3936      	subs	r1, #54	; 0x36
 80045f2:	f24c 3250 	movw	r2, #50000	; 0xc350
 80045f6:	4296      	cmp	r6, r2
 80045f8:	dd0d      	ble.n	8004616 <scalbn+0x7e>
 80045fa:	2d00      	cmp	r5, #0
 80045fc:	a11c      	add	r1, pc, #112	; (adr r1, 8004670 <scalbn+0xd8>)
 80045fe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004602:	da02      	bge.n	800460a <scalbn+0x72>
 8004604:	a11c      	add	r1, pc, #112	; (adr r1, 8004678 <scalbn+0xe0>)
 8004606:	e9d1 0100 	ldrd	r0, r1, [r1]
 800460a:	a319      	add	r3, pc, #100	; (adr r3, 8004670 <scalbn+0xd8>)
 800460c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004610:	f7fb fff2 	bl	80005f8 <__aeabi_dmul>
 8004614:	e7e6      	b.n	80045e4 <scalbn+0x4c>
 8004616:	1872      	adds	r2, r6, r1
 8004618:	f240 71fe 	movw	r1, #2046	; 0x7fe
 800461c:	428a      	cmp	r2, r1
 800461e:	dcec      	bgt.n	80045fa <scalbn+0x62>
 8004620:	2a00      	cmp	r2, #0
 8004622:	dd08      	ble.n	8004636 <scalbn+0x9e>
 8004624:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8004628:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800462c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8004630:	ec45 4b10 	vmov	d0, r4, r5
 8004634:	bd70      	pop	{r4, r5, r6, pc}
 8004636:	f112 0f35 	cmn.w	r2, #53	; 0x35
 800463a:	da08      	bge.n	800464e <scalbn+0xb6>
 800463c:	2d00      	cmp	r5, #0
 800463e:	a10a      	add	r1, pc, #40	; (adr r1, 8004668 <scalbn+0xd0>)
 8004640:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004644:	dac0      	bge.n	80045c8 <scalbn+0x30>
 8004646:	a10e      	add	r1, pc, #56	; (adr r1, 8004680 <scalbn+0xe8>)
 8004648:	e9d1 0100 	ldrd	r0, r1, [r1]
 800464c:	e7bc      	b.n	80045c8 <scalbn+0x30>
 800464e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8004652:	3236      	adds	r2, #54	; 0x36
 8004654:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8004658:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 800465c:	4620      	mov	r0, r4
 800465e:	4b0c      	ldr	r3, [pc, #48]	; (8004690 <scalbn+0xf8>)
 8004660:	2200      	movs	r2, #0
 8004662:	e7d5      	b.n	8004610 <scalbn+0x78>
 8004664:	f3af 8000 	nop.w
 8004668:	c2f8f359 	.word	0xc2f8f359
 800466c:	01a56e1f 	.word	0x01a56e1f
 8004670:	8800759c 	.word	0x8800759c
 8004674:	7e37e43c 	.word	0x7e37e43c
 8004678:	8800759c 	.word	0x8800759c
 800467c:	fe37e43c 	.word	0xfe37e43c
 8004680:	c2f8f359 	.word	0xc2f8f359
 8004684:	81a56e1f 	.word	0x81a56e1f
 8004688:	43500000 	.word	0x43500000
 800468c:	ffff3cb0 	.word	0xffff3cb0
 8004690:	3c900000 	.word	0x3c900000

08004694 <_init>:
 8004694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004696:	bf00      	nop
 8004698:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800469a:	bc08      	pop	{r3}
 800469c:	469e      	mov	lr, r3
 800469e:	4770      	bx	lr

080046a0 <_fini>:
 80046a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046a2:	bf00      	nop
 80046a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80046a6:	bc08      	pop	{r3}
 80046a8:	469e      	mov	lr, r3
 80046aa:	4770      	bx	lr
